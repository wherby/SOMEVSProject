//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.269
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="TrackerAppSoapBinding", Namespace="http://schema.open.collab.net/sfee50/soap50/service")]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDependency2SoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDetail3SoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Artifact2SoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Artifact3SoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(OrderedTrackerFieldSoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(WorkflowTransitionSoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDetail2SoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDetailSoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapSortKey))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactSoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SoapFilter))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactDependencySoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(WebServiceFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerFieldValueSoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectSoapDO))]
public partial class TrackerAppSoapService : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback getFieldsOperationCompleted;
    
    private System.Threading.SendOrPostCallback setFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback copyWorkflowTransitionsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTrackerDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback createArtifactOperationCompleted;
    
    private System.Threading.SendOrPostCallback setArtifactDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback setTrackerDataOperationCompleted;
    
    private System.Threading.SendOrPostCallback addDateFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteArtifactOperationCompleted;
    
    private System.Threading.SendOrPostCallback moveArtifactOperationCompleted;
    
    private System.Threading.SendOrPostCallback getParentDependencyListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getChildDependencyListOperationCompleted;
    
    private System.Threading.SendOrPostCallback setArtifactRankOperationCompleted;
    
    private System.Threading.SendOrPostCallback createTrackerOperationCompleted;
    
    private System.Threading.SendOrPostCallback addSeparatorOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTrackerListOperationCompleted;
    
    private System.Threading.SendOrPostCallback setField2OperationCompleted;
    
    private System.Threading.SendOrPostCallback addTextFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback addSingleSelectFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback addMultiSelectFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback addUserSelectFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback getFields2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactDetailListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactDetailList2OperationCompleted;
    
    private System.Threading.SendOrPostCallback findArtifactsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactData2OperationCompleted;
    
    private System.Threading.SendOrPostCallback setArtifactData2OperationCompleted;
    
    private System.Threading.SendOrPostCallback createArtifact2OperationCompleted;
    
    private System.Threading.SendOrPostCallback moveArtifact2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getAllowedWorkflowTransitionListOperationCompleted;
    
    private System.Threading.SendOrPostCallback createArtifactDependencyOperationCompleted;
    
    private System.Threading.SendOrPostCallback removeArtifactDependencyOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTracker2ListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getTracker2DataOperationCompleted;
    
    private System.Threading.SendOrPostCallback setTracker2DataOperationCompleted;
    
    private System.Threading.SendOrPostCallback createTracker2OperationCompleted;
    
    private System.Threading.SendOrPostCallback setField3OperationCompleted;
    
    private System.Threading.SendOrPostCallback addTextField2OperationCompleted;
    
    private System.Threading.SendOrPostCallback addSingleSelectChildFieldOperationCompleted;
    
    private System.Threading.SendOrPostCallback addSingleSelectField2OperationCompleted;
    
    private System.Threading.SendOrPostCallback addMultiSelectField2OperationCompleted;
    
    private System.Threading.SendOrPostCallback addUserSelectField2OperationCompleted;
    
    private System.Threading.SendOrPostCallback addDateField2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getFields3OperationCompleted;
    
    private System.Threading.SendOrPostCallback deleteSeparatorOperationCompleted;
    
    private System.Threading.SendOrPostCallback getOrderedTrackerFieldsOperationCompleted;
    
    private System.Threading.SendOrPostCallback reorderTrackerFieldsOperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactList3OperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactList2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getCrossTrackerArtifactList2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getCrossTrackerArtifactListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactDetailList3OperationCompleted;
    
    private System.Threading.SendOrPostCallback findArtifacts3OperationCompleted;
    
    private System.Threading.SendOrPostCallback findArtifacts2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getArtifactData3OperationCompleted;
    
    private System.Threading.SendOrPostCallback setArtifactData3OperationCompleted;
    
    private System.Threading.SendOrPostCallback createArtifact3OperationCompleted;
    
    private System.Threading.SendOrPostCallback moveArtifact3OperationCompleted;
    
    private System.Threading.SendOrPostCallback copyWorkflowTransitions2OperationCompleted;
    
    private System.Threading.SendOrPostCallback getChildDependency2ListOperationCompleted;
    
    private System.Threading.SendOrPostCallback getParentDependency2ListOperationCompleted;
    
    private System.Threading.SendOrPostCallback reorderTrackersOperationCompleted;
    
    /// <remarks/>
    public TrackerAppSoapService() {
        this.Url = "https://sforge.sspg.lab.emc.com/ce-soap50/services/TrackerApp";
    }
    
    /// <remarks/>
    public event getFieldsCompletedEventHandler getFieldsCompleted;
    
    /// <remarks/>
    public event setFieldCompletedEventHandler setFieldCompleted;
    
    /// <remarks/>
    public event deleteFieldCompletedEventHandler deleteFieldCompleted;
    
    /// <remarks/>
    public event copyWorkflowTransitionsCompletedEventHandler copyWorkflowTransitionsCompleted;
    
    /// <remarks/>
    public event getArtifactDataCompletedEventHandler getArtifactDataCompleted;
    
    /// <remarks/>
    public event getTrackerDataCompletedEventHandler getTrackerDataCompleted;
    
    /// <remarks/>
    public event createArtifactCompletedEventHandler createArtifactCompleted;
    
    /// <remarks/>
    public event setArtifactDataCompletedEventHandler setArtifactDataCompleted;
    
    /// <remarks/>
    public event setTrackerDataCompletedEventHandler setTrackerDataCompleted;
    
    /// <remarks/>
    public event addDateFieldCompletedEventHandler addDateFieldCompleted;
    
    /// <remarks/>
    public event deleteArtifactCompletedEventHandler deleteArtifactCompleted;
    
    /// <remarks/>
    public event moveArtifactCompletedEventHandler moveArtifactCompleted;
    
    /// <remarks/>
    public event getParentDependencyListCompletedEventHandler getParentDependencyListCompleted;
    
    /// <remarks/>
    public event getChildDependencyListCompletedEventHandler getChildDependencyListCompleted;
    
    /// <remarks/>
    public event setArtifactRankCompletedEventHandler setArtifactRankCompleted;
    
    /// <remarks/>
    public event createTrackerCompletedEventHandler createTrackerCompleted;
    
    /// <remarks/>
    public event addSeparatorCompletedEventHandler addSeparatorCompleted;
    
    /// <remarks/>
    public event getTrackerListCompletedEventHandler getTrackerListCompleted;
    
    /// <remarks/>
    public event setField2CompletedEventHandler setField2Completed;
    
    /// <remarks/>
    public event addTextFieldCompletedEventHandler addTextFieldCompleted;
    
    /// <remarks/>
    public event addSingleSelectFieldCompletedEventHandler addSingleSelectFieldCompleted;
    
    /// <remarks/>
    public event addMultiSelectFieldCompletedEventHandler addMultiSelectFieldCompleted;
    
    /// <remarks/>
    public event addUserSelectFieldCompletedEventHandler addUserSelectFieldCompleted;
    
    /// <remarks/>
    public event getFields2CompletedEventHandler getFields2Completed;
    
    /// <remarks/>
    public event getArtifactListCompletedEventHandler getArtifactListCompleted;
    
    /// <remarks/>
    public event getArtifactDetailListCompletedEventHandler getArtifactDetailListCompleted;
    
    /// <remarks/>
    public event getArtifactDetailList2CompletedEventHandler getArtifactDetailList2Completed;
    
    /// <remarks/>
    public event findArtifactsCompletedEventHandler findArtifactsCompleted;
    
    /// <remarks/>
    public event getArtifactData2CompletedEventHandler getArtifactData2Completed;
    
    /// <remarks/>
    public event setArtifactData2CompletedEventHandler setArtifactData2Completed;
    
    /// <remarks/>
    public event createArtifact2CompletedEventHandler createArtifact2Completed;
    
    /// <remarks/>
    public event moveArtifact2CompletedEventHandler moveArtifact2Completed;
    
    /// <remarks/>
    public event getAllowedWorkflowTransitionListCompletedEventHandler getAllowedWorkflowTransitionListCompleted;
    
    /// <remarks/>
    public event createArtifactDependencyCompletedEventHandler createArtifactDependencyCompleted;
    
    /// <remarks/>
    public event removeArtifactDependencyCompletedEventHandler removeArtifactDependencyCompleted;
    
    /// <remarks/>
    public event getTracker2ListCompletedEventHandler getTracker2ListCompleted;
    
    /// <remarks/>
    public event getTracker2DataCompletedEventHandler getTracker2DataCompleted;
    
    /// <remarks/>
    public event setTracker2DataCompletedEventHandler setTracker2DataCompleted;
    
    /// <remarks/>
    public event createTracker2CompletedEventHandler createTracker2Completed;
    
    /// <remarks/>
    public event setField3CompletedEventHandler setField3Completed;
    
    /// <remarks/>
    public event addTextField2CompletedEventHandler addTextField2Completed;
    
    /// <remarks/>
    public event addSingleSelectChildFieldCompletedEventHandler addSingleSelectChildFieldCompleted;
    
    /// <remarks/>
    public event addSingleSelectField2CompletedEventHandler addSingleSelectField2Completed;
    
    /// <remarks/>
    public event addMultiSelectField2CompletedEventHandler addMultiSelectField2Completed;
    
    /// <remarks/>
    public event addUserSelectField2CompletedEventHandler addUserSelectField2Completed;
    
    /// <remarks/>
    public event addDateField2CompletedEventHandler addDateField2Completed;
    
    /// <remarks/>
    public event getFields3CompletedEventHandler getFields3Completed;
    
    /// <remarks/>
    public event deleteSeparatorCompletedEventHandler deleteSeparatorCompleted;
    
    /// <remarks/>
    public event getOrderedTrackerFieldsCompletedEventHandler getOrderedTrackerFieldsCompleted;
    
    /// <remarks/>
    public event reorderTrackerFieldsCompletedEventHandler reorderTrackerFieldsCompleted;
    
    /// <remarks/>
    public event getArtifactList3CompletedEventHandler getArtifactList3Completed;
    
    /// <remarks/>
    public event getArtifactList2CompletedEventHandler getArtifactList2Completed;
    
    /// <remarks/>
    public event getCrossTrackerArtifactList2CompletedEventHandler getCrossTrackerArtifactList2Completed;
    
    /// <remarks/>
    public event getCrossTrackerArtifactListCompletedEventHandler getCrossTrackerArtifactListCompleted;
    
    /// <remarks/>
    public event getArtifactDetailList3CompletedEventHandler getArtifactDetailList3Completed;
    
    /// <remarks/>
    public event findArtifacts3CompletedEventHandler findArtifacts3Completed;
    
    /// <remarks/>
    public event findArtifacts2CompletedEventHandler findArtifacts2Completed;
    
    /// <remarks/>
    public event getArtifactData3CompletedEventHandler getArtifactData3Completed;
    
    /// <remarks/>
    public event setArtifactData3CompletedEventHandler setArtifactData3Completed;
    
    /// <remarks/>
    public event createArtifact3CompletedEventHandler createArtifact3Completed;
    
    /// <remarks/>
    public event moveArtifact3CompletedEventHandler moveArtifact3Completed;
    
    /// <remarks/>
    public event copyWorkflowTransitions2CompletedEventHandler copyWorkflowTransitions2Completed;
    
    /// <remarks/>
    public event getChildDependency2ListCompletedEventHandler getChildDependency2ListCompleted;
    
    /// <remarks/>
    public event getParentDependency2ListCompletedEventHandler getParentDependency2ListCompleted;
    
    /// <remarks/>
    public event reorderTrackersCompletedEventHandler reorderTrackersCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getFieldsReturn")]
    public TrackerFieldSoapDO[] getFields(string sessionId, string trackerId) {
        object[] results = this.Invoke("getFields", new object[] {
                    sessionId,
                    trackerId});
        return ((TrackerFieldSoapDO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFields(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFields", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public TrackerFieldSoapDO[] EndgetFields(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TrackerFieldSoapDO[])(results[0]));
    }
    
    /// <remarks/>
    public void getFieldsAsync(string sessionId, string trackerId) {
        this.getFieldsAsync(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getFieldsAsync(string sessionId, string trackerId, object userState) {
        if ((this.getFieldsOperationCompleted == null)) {
            this.getFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFieldsOperationCompleted);
        }
        this.InvokeAsync("getFields", new object[] {
                    sessionId,
                    trackerId}, this.getFieldsOperationCompleted, userState);
    }
    
    private void OngetFieldsOperationCompleted(object arg) {
        if ((this.getFieldsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFieldsCompleted(this, new getFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setField(string sessionId, string objectId, TrackerFieldSoapDO fieldData) {
        this.Invoke("setField", new object[] {
                    sessionId,
                    objectId,
                    fieldData});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetField(string sessionId, string objectId, TrackerFieldSoapDO fieldData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setField", new object[] {
                    sessionId,
                    objectId,
                    fieldData}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setFieldAsync(string sessionId, string objectId, TrackerFieldSoapDO fieldData) {
        this.setFieldAsync(sessionId, objectId, fieldData, null);
    }
    
    /// <remarks/>
    public void setFieldAsync(string sessionId, string objectId, TrackerFieldSoapDO fieldData, object userState) {
        if ((this.setFieldOperationCompleted == null)) {
            this.setFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetFieldOperationCompleted);
        }
        this.InvokeAsync("setField", new object[] {
                    sessionId,
                    objectId,
                    fieldData}, this.setFieldOperationCompleted, userState);
    }
    
    private void OnsetFieldOperationCompleted(object arg) {
        if ((this.setFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void deleteField(string sessionId, string objectId, string fieldId) {
        this.Invoke("deleteField", new object[] {
                    sessionId,
                    objectId,
                    fieldId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteField(string sessionId, string objectId, string fieldId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteField", new object[] {
                    sessionId,
                    objectId,
                    fieldId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteFieldAsync(string sessionId, string objectId, string fieldId) {
        this.deleteFieldAsync(sessionId, objectId, fieldId, null);
    }
    
    /// <remarks/>
    public void deleteFieldAsync(string sessionId, string objectId, string fieldId, object userState) {
        if ((this.deleteFieldOperationCompleted == null)) {
            this.deleteFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteFieldOperationCompleted);
        }
        this.InvokeAsync("deleteField", new object[] {
                    sessionId,
                    objectId,
                    fieldId}, this.deleteFieldOperationCompleted, userState);
    }
    
    private void OndeleteFieldOperationCompleted(object arg) {
        if ((this.deleteFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void copyWorkflowTransitions(string sessionId, string srcTrackerId, string dstTrackerId) {
        this.Invoke("copyWorkflowTransitions", new object[] {
                    sessionId,
                    srcTrackerId,
                    dstTrackerId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincopyWorkflowTransitions(string sessionId, string srcTrackerId, string dstTrackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("copyWorkflowTransitions", new object[] {
                    sessionId,
                    srcTrackerId,
                    dstTrackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndcopyWorkflowTransitions(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void copyWorkflowTransitionsAsync(string sessionId, string srcTrackerId, string dstTrackerId) {
        this.copyWorkflowTransitionsAsync(sessionId, srcTrackerId, dstTrackerId, null);
    }
    
    /// <remarks/>
    public void copyWorkflowTransitionsAsync(string sessionId, string srcTrackerId, string dstTrackerId, object userState) {
        if ((this.copyWorkflowTransitionsOperationCompleted == null)) {
            this.copyWorkflowTransitionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyWorkflowTransitionsOperationCompleted);
        }
        this.InvokeAsync("copyWorkflowTransitions", new object[] {
                    sessionId,
                    srcTrackerId,
                    dstTrackerId}, this.copyWorkflowTransitionsOperationCompleted, userState);
    }
    
    private void OncopyWorkflowTransitionsOperationCompleted(object arg) {
        if ((this.copyWorkflowTransitionsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.copyWorkflowTransitionsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactDataReturn")]
    public ArtifactSoapDO getArtifactData(string sessionId, string artifactId) {
        object[] results = this.Invoke("getArtifactData", new object[] {
                    sessionId,
                    artifactId});
        return ((ArtifactSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactData(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactData", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactSoapDO EndgetArtifactData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactDataAsync(string sessionId, string artifactId) {
        this.getArtifactDataAsync(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getArtifactDataAsync(string sessionId, string artifactId, object userState) {
        if ((this.getArtifactDataOperationCompleted == null)) {
            this.getArtifactDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactDataOperationCompleted);
        }
        this.InvokeAsync("getArtifactData", new object[] {
                    sessionId,
                    artifactId}, this.getArtifactDataOperationCompleted, userState);
    }
    
    private void OngetArtifactDataOperationCompleted(object arg) {
        if ((this.getArtifactDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactDataCompleted(this, new getArtifactDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getTrackerDataReturn")]
    public TrackerSoapDO getTrackerData(string sessionId, string trackerId) {
        object[] results = this.Invoke("getTrackerData", new object[] {
                    sessionId,
                    trackerId});
        return ((TrackerSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTrackerData(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTrackerData", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public TrackerSoapDO EndgetTrackerData(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TrackerSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void getTrackerDataAsync(string sessionId, string trackerId) {
        this.getTrackerDataAsync(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getTrackerDataAsync(string sessionId, string trackerId, object userState) {
        if ((this.getTrackerDataOperationCompleted == null)) {
            this.getTrackerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerDataOperationCompleted);
        }
        this.InvokeAsync("getTrackerData", new object[] {
                    sessionId,
                    trackerId}, this.getTrackerDataOperationCompleted, userState);
    }
    
    private void OngetTrackerDataOperationCompleted(object arg) {
        if ((this.getTrackerDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTrackerDataCompleted(this, new getTrackerDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("createArtifactReturn")]
    public ArtifactSoapDO createArtifact(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedHours, 
                string assignedUsername, 
                string releaseId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId) {
        object[] results = this.Invoke("createArtifact", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedHours,
                    assignedUsername,
                    releaseId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId});
        return ((ArtifactSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateArtifact(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedHours, 
                string assignedUsername, 
                string releaseId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("createArtifact", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedHours,
                    assignedUsername,
                    releaseId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactSoapDO EndcreateArtifact(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void createArtifactAsync(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedHours, 
                string assignedUsername, 
                string releaseId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId) {
        this.createArtifactAsync(sessionId, trackerId, title, description, group, category, status, customer, priority, estimatedHours, assignedUsername, releaseId, flexFields, attachmentFileName, attachmentMimeType, attachmentFileId, null);
    }
    
    /// <remarks/>
    public void createArtifactAsync(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedHours, 
                string assignedUsername, 
                string releaseId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId, 
                object userState) {
        if ((this.createArtifactOperationCompleted == null)) {
            this.createArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateArtifactOperationCompleted);
        }
        this.InvokeAsync("createArtifact", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedHours,
                    assignedUsername,
                    releaseId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, this.createArtifactOperationCompleted, userState);
    }
    
    private void OncreateArtifactOperationCompleted(object arg) {
        if ((this.createArtifactCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createArtifactCompleted(this, new createArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setArtifactData(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
        this.Invoke("setArtifactData", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetArtifactData(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setArtifactData", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetArtifactData(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setArtifactDataAsync(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
        this.setArtifactDataAsync(sessionId, artifactData, comment, attachmentFileName, attachmentMimeType, attachmentFileId, null);
    }
    
    /// <remarks/>
    public void setArtifactDataAsync(string sessionId, ArtifactSoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, object userState) {
        if ((this.setArtifactDataOperationCompleted == null)) {
            this.setArtifactDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetArtifactDataOperationCompleted);
        }
        this.InvokeAsync("setArtifactData", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, this.setArtifactDataOperationCompleted, userState);
    }
    
    private void OnsetArtifactDataOperationCompleted(object arg) {
        if ((this.setArtifactDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setArtifactDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setTrackerData(string sessionId, TrackerSoapDO trackerData) {
        this.Invoke("setTrackerData", new object[] {
                    sessionId,
                    trackerData});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetTrackerData(string sessionId, TrackerSoapDO trackerData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setTrackerData", new object[] {
                    sessionId,
                    trackerData}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetTrackerData(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setTrackerDataAsync(string sessionId, TrackerSoapDO trackerData) {
        this.setTrackerDataAsync(sessionId, trackerData, null);
    }
    
    /// <remarks/>
    public void setTrackerDataAsync(string sessionId, TrackerSoapDO trackerData, object userState) {
        if ((this.setTrackerDataOperationCompleted == null)) {
            this.setTrackerDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTrackerDataOperationCompleted);
        }
        this.InvokeAsync("setTrackerData", new object[] {
                    sessionId,
                    trackerData}, this.setTrackerDataOperationCompleted, userState);
    }
    
    private void OnsetTrackerDataOperationCompleted(object arg) {
        if ((this.setTrackerDataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setTrackerDataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addDateField(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate) {
        this.Invoke("addDateField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDateField(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDateField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddDateField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addDateFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate) {
        this.addDateFieldAsync(sessionId, trackerId, fieldName, isRequired, isDisabled, isHiddenOnCreate, null);
    }
    
    /// <remarks/>
    public void addDateFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, object userState) {
        if ((this.addDateFieldOperationCompleted == null)) {
            this.addDateFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDateFieldOperationCompleted);
        }
        this.InvokeAsync("addDateField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate}, this.addDateFieldOperationCompleted, userState);
    }
    
    private void OnaddDateFieldOperationCompleted(object arg) {
        if ((this.addDateFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addDateFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void deleteArtifact(string sessionId, string artifactId) {
        this.Invoke("deleteArtifact", new object[] {
                    sessionId,
                    artifactId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteArtifact(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteArtifact", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteArtifact(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteArtifactAsync(string sessionId, string artifactId) {
        this.deleteArtifactAsync(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void deleteArtifactAsync(string sessionId, string artifactId, object userState) {
        if ((this.deleteArtifactOperationCompleted == null)) {
            this.deleteArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteArtifactOperationCompleted);
        }
        this.InvokeAsync("deleteArtifact", new object[] {
                    sessionId,
                    artifactId}, this.deleteArtifactOperationCompleted, userState);
    }
    
    private void OndeleteArtifactOperationCompleted(object arg) {
        if ((this.deleteArtifactCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteArtifactCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("moveArtifactReturn")]
    public ArtifactSoapDO moveArtifact(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
        object[] results = this.Invoke("moveArtifact", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee});
        return ((ArtifactSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmoveArtifact(string sessionId, string artifactId, string targetFolderId, string newAssignee, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("moveArtifact", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactSoapDO EndmoveArtifact(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void moveArtifactAsync(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
        this.moveArtifactAsync(sessionId, artifactId, targetFolderId, newAssignee, null);
    }
    
    /// <remarks/>
    public void moveArtifactAsync(string sessionId, string artifactId, string targetFolderId, string newAssignee, object userState) {
        if ((this.moveArtifactOperationCompleted == null)) {
            this.moveArtifactOperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveArtifactOperationCompleted);
        }
        this.InvokeAsync("moveArtifact", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee}, this.moveArtifactOperationCompleted, userState);
    }
    
    private void OnmoveArtifactOperationCompleted(object arg) {
        if ((this.moveArtifactCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.moveArtifactCompleted(this, new moveArtifactCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getParentDependencyListReturn")]
    public ArtifactDependencySoapList getParentDependencyList(string sessionId, string artifactId) {
        object[] results = this.Invoke("getParentDependencyList", new object[] {
                    sessionId,
                    artifactId});
        return ((ArtifactDependencySoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetParentDependencyList(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getParentDependencyList", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDependencySoapList EndgetParentDependencyList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDependencySoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getParentDependencyListAsync(string sessionId, string artifactId) {
        this.getParentDependencyListAsync(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getParentDependencyListAsync(string sessionId, string artifactId, object userState) {
        if ((this.getParentDependencyListOperationCompleted == null)) {
            this.getParentDependencyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParentDependencyListOperationCompleted);
        }
        this.InvokeAsync("getParentDependencyList", new object[] {
                    sessionId,
                    artifactId}, this.getParentDependencyListOperationCompleted, userState);
    }
    
    private void OngetParentDependencyListOperationCompleted(object arg) {
        if ((this.getParentDependencyListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getParentDependencyListCompleted(this, new getParentDependencyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getChildDependencyListReturn")]
    public ArtifactDependencySoapList getChildDependencyList(string sessionId, string artifactId) {
        object[] results = this.Invoke("getChildDependencyList", new object[] {
                    sessionId,
                    artifactId});
        return ((ArtifactDependencySoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetChildDependencyList(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getChildDependencyList", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDependencySoapList EndgetChildDependencyList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDependencySoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getChildDependencyListAsync(string sessionId, string artifactId) {
        this.getChildDependencyListAsync(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getChildDependencyListAsync(string sessionId, string artifactId, object userState) {
        if ((this.getChildDependencyListOperationCompleted == null)) {
            this.getChildDependencyListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildDependencyListOperationCompleted);
        }
        this.InvokeAsync("getChildDependencyList", new object[] {
                    sessionId,
                    artifactId}, this.getChildDependencyListOperationCompleted, userState);
    }
    
    private void OngetChildDependencyListOperationCompleted(object arg) {
        if ((this.getChildDependencyListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getChildDependencyListCompleted(this, new getChildDependencyListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setArtifactRank(string sessionId, string planningFolderId, string artfToRankId, string artfBeforeId, string artfAfterId) {
        this.Invoke("setArtifactRank", new object[] {
                    sessionId,
                    planningFolderId,
                    artfToRankId,
                    artfBeforeId,
                    artfAfterId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetArtifactRank(string sessionId, string planningFolderId, string artfToRankId, string artfBeforeId, string artfAfterId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setArtifactRank", new object[] {
                    sessionId,
                    planningFolderId,
                    artfToRankId,
                    artfBeforeId,
                    artfAfterId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetArtifactRank(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setArtifactRankAsync(string sessionId, string planningFolderId, string artfToRankId, string artfBeforeId, string artfAfterId) {
        this.setArtifactRankAsync(sessionId, planningFolderId, artfToRankId, artfBeforeId, artfAfterId, null);
    }
    
    /// <remarks/>
    public void setArtifactRankAsync(string sessionId, string planningFolderId, string artfToRankId, string artfBeforeId, string artfAfterId, object userState) {
        if ((this.setArtifactRankOperationCompleted == null)) {
            this.setArtifactRankOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetArtifactRankOperationCompleted);
        }
        this.InvokeAsync("setArtifactRank", new object[] {
                    sessionId,
                    planningFolderId,
                    artfToRankId,
                    artfBeforeId,
                    artfAfterId}, this.setArtifactRankOperationCompleted, userState);
    }
    
    private void OnsetArtifactRankOperationCompleted(object arg) {
        if ((this.setArtifactRankCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setArtifactRankCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("createTrackerReturn")]
    public TrackerSoapDO createTracker(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription) {
        object[] results = this.Invoke("createTracker", new object[] {
                    sessionId,
                    projectId,
                    trackerName,
                    trackerTitle,
                    trackerDescription});
        return ((TrackerSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateTracker(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createTracker", new object[] {
                    sessionId,
                    projectId,
                    trackerName,
                    trackerTitle,
                    trackerDescription}, callback, asyncState);
    }
    
    /// <remarks/>
    public TrackerSoapDO EndcreateTracker(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TrackerSoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void createTrackerAsync(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription) {
        this.createTrackerAsync(sessionId, projectId, trackerName, trackerTitle, trackerDescription, null);
    }
    
    /// <remarks/>
    public void createTrackerAsync(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, object userState) {
        if ((this.createTrackerOperationCompleted == null)) {
            this.createTrackerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTrackerOperationCompleted);
        }
        this.InvokeAsync("createTracker", new object[] {
                    sessionId,
                    projectId,
                    trackerName,
                    trackerTitle,
                    trackerDescription}, this.createTrackerOperationCompleted, userState);
    }
    
    private void OncreateTrackerOperationCompleted(object arg) {
        if ((this.createTrackerCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createTrackerCompleted(this, new createTrackerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addSeparator(string sessionId, string trackerId, string separatorType, string separatorLabel) {
        this.Invoke("addSeparator", new object[] {
                    sessionId,
                    trackerId,
                    separatorType,
                    separatorLabel});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddSeparator(string sessionId, string trackerId, string separatorType, string separatorLabel, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addSeparator", new object[] {
                    sessionId,
                    trackerId,
                    separatorType,
                    separatorLabel}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddSeparator(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addSeparatorAsync(string sessionId, string trackerId, string separatorType, string separatorLabel) {
        this.addSeparatorAsync(sessionId, trackerId, separatorType, separatorLabel, null);
    }
    
    /// <remarks/>
    public void addSeparatorAsync(string sessionId, string trackerId, string separatorType, string separatorLabel, object userState) {
        if ((this.addSeparatorOperationCompleted == null)) {
            this.addSeparatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSeparatorOperationCompleted);
        }
        this.InvokeAsync("addSeparator", new object[] {
                    sessionId,
                    trackerId,
                    separatorType,
                    separatorLabel}, this.addSeparatorOperationCompleted, userState);
    }
    
    private void OnaddSeparatorOperationCompleted(object arg) {
        if ((this.addSeparatorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addSeparatorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getTrackerListReturn")]
    public TrackerSoapList getTrackerList(string sessionId, string projectId) {
        object[] results = this.Invoke("getTrackerList", new object[] {
                    sessionId,
                    projectId});
        return ((TrackerSoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTrackerList(string sessionId, string projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTrackerList", new object[] {
                    sessionId,
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public TrackerSoapList EndgetTrackerList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TrackerSoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getTrackerListAsync(string sessionId, string projectId) {
        this.getTrackerListAsync(sessionId, projectId, null);
    }
    
    /// <remarks/>
    public void getTrackerListAsync(string sessionId, string projectId, object userState) {
        if ((this.getTrackerListOperationCompleted == null)) {
            this.getTrackerListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTrackerListOperationCompleted);
        }
        this.InvokeAsync("getTrackerList", new object[] {
                    sessionId,
                    projectId}, this.getTrackerListOperationCompleted, userState);
    }
    
    private void OngetTrackerListOperationCompleted(object arg) {
        if ((this.getTrackerListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTrackerListCompleted(this, new getTrackerListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setField2(string sessionId, string objectId, TrackerField2SoapDO fieldData) {
        this.Invoke("setField2", new object[] {
                    sessionId,
                    objectId,
                    fieldData});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetField2(string sessionId, string objectId, TrackerField2SoapDO fieldData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setField2", new object[] {
                    sessionId,
                    objectId,
                    fieldData}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetField2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setField2Async(string sessionId, string objectId, TrackerField2SoapDO fieldData) {
        this.setField2Async(sessionId, objectId, fieldData, null);
    }
    
    /// <remarks/>
    public void setField2Async(string sessionId, string objectId, TrackerField2SoapDO fieldData, object userState) {
        if ((this.setField2OperationCompleted == null)) {
            this.setField2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetField2OperationCompleted);
        }
        this.InvokeAsync("setField2", new object[] {
                    sessionId,
                    objectId,
                    fieldData}, this.setField2OperationCompleted, userState);
    }
    
    private void OnsetField2OperationCompleted(object arg) {
        if ((this.setField2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setField2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addTextField(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue) {
        this.Invoke("addTextField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayColumns,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddTextField(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addTextField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayColumns,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddTextField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addTextFieldAsync(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue) {
        this.addTextFieldAsync(sessionId, trackerId, fieldName, displayColumns, displayLines, isRequired, isDisabled, isHiddenOnCreate, defaultValue, null);
    }
    
    /// <remarks/>
    public void addTextFieldAsync(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, object userState) {
        if ((this.addTextFieldOperationCompleted == null)) {
            this.addTextFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTextFieldOperationCompleted);
        }
        this.InvokeAsync("addTextField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayColumns,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValue}, this.addTextFieldOperationCompleted, userState);
    }
    
    private void OnaddTextFieldOperationCompleted(object arg) {
        if ((this.addTextFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addTextFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addSingleSelectField(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue) {
        this.Invoke("addSingleSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValue});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddSingleSelectField(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addSingleSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValue}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddSingleSelectField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addSingleSelectFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue) {
        this.addSingleSelectFieldAsync(sessionId, trackerId, fieldName, isRequired, isDisabled, isHiddenOnCreate, fieldValues, defaultValue, null);
    }
    
    /// <remarks/>
    public void addSingleSelectFieldAsync(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, object userState) {
        if ((this.addSingleSelectFieldOperationCompleted == null)) {
            this.addSingleSelectFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSingleSelectFieldOperationCompleted);
        }
        this.InvokeAsync("addSingleSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValue}, this.addSingleSelectFieldOperationCompleted, userState);
    }
    
    private void OnaddSingleSelectFieldOperationCompleted(object arg) {
        if ((this.addSingleSelectFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addSingleSelectFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addMultiSelectField(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues) {
        this.Invoke("addMultiSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValues});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMultiSelectField(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMultiSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValues}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddMultiSelectField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addMultiSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues) {
        this.addMultiSelectFieldAsync(sessionId, trackerId, fieldName, displayLines, isRequired, isDisabled, isHiddenOnCreate, fieldValues, defaultValues, null);
    }
    
    /// <remarks/>
    public void addMultiSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, object userState) {
        if ((this.addMultiSelectFieldOperationCompleted == null)) {
            this.addMultiSelectFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMultiSelectFieldOperationCompleted);
        }
        this.InvokeAsync("addMultiSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValues}, this.addMultiSelectFieldOperationCompleted, userState);
    }
    
    private void OnaddMultiSelectFieldOperationCompleted(object arg) {
        if ((this.addMultiSelectFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addMultiSelectFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addUserSelectField(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter) {
        this.Invoke("addUserSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValues,
                    userFilter});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddUserSelectField(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addUserSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValues,
                    userFilter}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddUserSelectField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addUserSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter) {
        this.addUserSelectFieldAsync(sessionId, trackerId, fieldName, displayLines, isRequired, isDisabled, isHiddenOnCreate, defaultValues, userFilter, null);
    }
    
    /// <remarks/>
    public void addUserSelectFieldAsync(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, object userState) {
        if ((this.addUserSelectFieldOperationCompleted == null)) {
            this.addUserSelectFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserSelectFieldOperationCompleted);
        }
        this.InvokeAsync("addUserSelectField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValues,
                    userFilter}, this.addUserSelectFieldOperationCompleted, userState);
    }
    
    private void OnaddUserSelectFieldOperationCompleted(object arg) {
        if ((this.addUserSelectFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addUserSelectFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getFields2Return")]
    public TrackerField2SoapDO[] getFields2(string sessionId, string trackerId) {
        object[] results = this.Invoke("getFields2", new object[] {
                    sessionId,
                    trackerId});
        return ((TrackerField2SoapDO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFields2(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFields2", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public TrackerField2SoapDO[] EndgetFields2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TrackerField2SoapDO[])(results[0]));
    }
    
    /// <remarks/>
    public void getFields2Async(string sessionId, string trackerId) {
        this.getFields2Async(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getFields2Async(string sessionId, string trackerId, object userState) {
        if ((this.getFields2OperationCompleted == null)) {
            this.getFields2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFields2OperationCompleted);
        }
        this.InvokeAsync("getFields2", new object[] {
                    sessionId,
                    trackerId}, this.getFields2OperationCompleted, userState);
    }
    
    private void OngetFields2OperationCompleted(object arg) {
        if ((this.getFields2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFields2Completed(this, new getFields2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactListReturn")]
    public ArtifactSoapList getArtifactList(string sessionId, string containerId, SoapFilter[] filters) {
        object[] results = this.Invoke("getArtifactList", new object[] {
                    sessionId,
                    containerId,
                    filters});
        return ((ArtifactSoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactList(string sessionId, string containerId, SoapFilter[] filters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactList", new object[] {
                    sessionId,
                    containerId,
                    filters}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactSoapList EndgetArtifactList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactSoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactListAsync(string sessionId, string containerId, SoapFilter[] filters) {
        this.getArtifactListAsync(sessionId, containerId, filters, null);
    }
    
    /// <remarks/>
    public void getArtifactListAsync(string sessionId, string containerId, SoapFilter[] filters, object userState) {
        if ((this.getArtifactListOperationCompleted == null)) {
            this.getArtifactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactListOperationCompleted);
        }
        this.InvokeAsync("getArtifactList", new object[] {
                    sessionId,
                    containerId,
                    filters}, this.getArtifactListOperationCompleted, userState);
    }
    
    private void OngetArtifactListOperationCompleted(object arg) {
        if ((this.getArtifactListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactListCompleted(this, new getArtifactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactDetailListReturn")]
    public ArtifactDetailSoapList getArtifactDetailList(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
        object[] results = this.Invoke("getArtifactDetailList", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery});
        return ((ArtifactDetailSoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactDetailList(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactDetailList", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDetailSoapList EndgetArtifactDetailList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDetailSoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactDetailListAsync(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
        this.getArtifactDetailListAsync(sessionId, trackerId, selectedColumns, filters, sortKeys, startIndex, maxRows, exceptionIfExpiredCache, forceNewQuery, null);
    }
    
    /// <remarks/>
    public void getArtifactDetailListAsync(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, object userState) {
        if ((this.getArtifactDetailListOperationCompleted == null)) {
            this.getArtifactDetailListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactDetailListOperationCompleted);
        }
        this.InvokeAsync("getArtifactDetailList", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery}, this.getArtifactDetailListOperationCompleted, userState);
    }
    
    private void OngetArtifactDetailListOperationCompleted(object arg) {
        if ((this.getArtifactDetailListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactDetailListCompleted(this, new getArtifactDetailListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactDetailList2Return")]
    public ArtifactDetail2SoapList getArtifactDetailList2(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
        object[] results = this.Invoke("getArtifactDetailList2", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery});
        return ((ArtifactDetail2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactDetailList2(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactDetailList2", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDetail2SoapList EndgetArtifactDetailList2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDetail2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactDetailList2Async(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
        this.getArtifactDetailList2Async(sessionId, trackerId, selectedColumns, filters, sortKeys, startIndex, maxRows, exceptionIfExpiredCache, forceNewQuery, null);
    }
    
    /// <remarks/>
    public void getArtifactDetailList2Async(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, object userState) {
        if ((this.getArtifactDetailList2OperationCompleted == null)) {
            this.getArtifactDetailList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactDetailList2OperationCompleted);
        }
        this.InvokeAsync("getArtifactDetailList2", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery}, this.getArtifactDetailList2OperationCompleted, userState);
    }
    
    private void OngetArtifactDetailList2OperationCompleted(object arg) {
        if ((this.getArtifactDetailList2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactDetailList2Completed(this, new getArtifactDetailList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("findArtifactsReturn")]
    public ArtifactSoapList findArtifacts(string sessionId, string queryString, string projectId, bool searchAttachments) {
        object[] results = this.Invoke("findArtifacts", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments});
        return ((ArtifactSoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindArtifacts(string sessionId, string queryString, string projectId, bool searchAttachments, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findArtifacts", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactSoapList EndfindArtifacts(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactSoapList)(results[0]));
    }
    
    /// <remarks/>
    public void findArtifactsAsync(string sessionId, string queryString, string projectId, bool searchAttachments) {
        this.findArtifactsAsync(sessionId, queryString, projectId, searchAttachments, null);
    }
    
    /// <remarks/>
    public void findArtifactsAsync(string sessionId, string queryString, string projectId, bool searchAttachments, object userState) {
        if ((this.findArtifactsOperationCompleted == null)) {
            this.findArtifactsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindArtifactsOperationCompleted);
        }
        this.InvokeAsync("findArtifacts", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments}, this.findArtifactsOperationCompleted, userState);
    }
    
    private void OnfindArtifactsOperationCompleted(object arg) {
        if ((this.findArtifactsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findArtifactsCompleted(this, new findArtifactsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactData2Return")]
    public Artifact2SoapDO getArtifactData2(string sessionId, string artifactId) {
        object[] results = this.Invoke("getArtifactData2", new object[] {
                    sessionId,
                    artifactId});
        return ((Artifact2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactData2(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactData2", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact2SoapDO EndgetArtifactData2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactData2Async(string sessionId, string artifactId) {
        this.getArtifactData2Async(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getArtifactData2Async(string sessionId, string artifactId, object userState) {
        if ((this.getArtifactData2OperationCompleted == null)) {
            this.getArtifactData2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactData2OperationCompleted);
        }
        this.InvokeAsync("getArtifactData2", new object[] {
                    sessionId,
                    artifactId}, this.getArtifactData2OperationCompleted, userState);
    }
    
    private void OngetArtifactData2OperationCompleted(object arg) {
        if ((this.getArtifactData2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactData2Completed(this, new getArtifactData2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setArtifactData2(string sessionId, Artifact2SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
        this.Invoke("setArtifactData2", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetArtifactData2(string sessionId, Artifact2SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setArtifactData2", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetArtifactData2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setArtifactData2Async(string sessionId, Artifact2SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
        this.setArtifactData2Async(sessionId, artifactData, comment, attachmentFileName, attachmentMimeType, attachmentFileId, null);
    }
    
    /// <remarks/>
    public void setArtifactData2Async(string sessionId, Artifact2SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, object userState) {
        if ((this.setArtifactData2OperationCompleted == null)) {
            this.setArtifactData2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetArtifactData2OperationCompleted);
        }
        this.InvokeAsync("setArtifactData2", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, this.setArtifactData2OperationCompleted, userState);
    }
    
    private void OnsetArtifactData2OperationCompleted(object arg) {
        if ((this.setArtifactData2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setArtifactData2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("createArtifact2Return")]
    public Artifact2SoapDO createArtifact2(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId) {
        object[] results = this.Invoke("createArtifact2", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedEffort,
                    remainingEffort,
                    autosumming,
                    assignedUsername,
                    releaseId,
                    planningFolderId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId});
        return ((Artifact2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateArtifact2(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("createArtifact2", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedEffort,
                    remainingEffort,
                    autosumming,
                    assignedUsername,
                    releaseId,
                    planningFolderId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact2SoapDO EndcreateArtifact2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void createArtifact2Async(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId) {
        this.createArtifact2Async(sessionId, trackerId, title, description, group, category, status, customer, priority, estimatedEffort, remainingEffort, autosumming, assignedUsername, releaseId, planningFolderId, flexFields, attachmentFileName, attachmentMimeType, attachmentFileId, null);
    }
    
    /// <remarks/>
    public void createArtifact2Async(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId, 
                object userState) {
        if ((this.createArtifact2OperationCompleted == null)) {
            this.createArtifact2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateArtifact2OperationCompleted);
        }
        this.InvokeAsync("createArtifact2", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedEffort,
                    remainingEffort,
                    autosumming,
                    assignedUsername,
                    releaseId,
                    planningFolderId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, this.createArtifact2OperationCompleted, userState);
    }
    
    private void OncreateArtifact2OperationCompleted(object arg) {
        if ((this.createArtifact2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createArtifact2Completed(this, new createArtifact2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("moveArtifact2Return")]
    public Artifact2SoapDO moveArtifact2(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
        object[] results = this.Invoke("moveArtifact2", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee});
        return ((Artifact2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmoveArtifact2(string sessionId, string artifactId, string targetFolderId, string newAssignee, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("moveArtifact2", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact2SoapDO EndmoveArtifact2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void moveArtifact2Async(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
        this.moveArtifact2Async(sessionId, artifactId, targetFolderId, newAssignee, null);
    }
    
    /// <remarks/>
    public void moveArtifact2Async(string sessionId, string artifactId, string targetFolderId, string newAssignee, object userState) {
        if ((this.moveArtifact2OperationCompleted == null)) {
            this.moveArtifact2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveArtifact2OperationCompleted);
        }
        this.InvokeAsync("moveArtifact2", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee}, this.moveArtifact2OperationCompleted, userState);
    }
    
    private void OnmoveArtifact2OperationCompleted(object arg) {
        if ((this.moveArtifact2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.moveArtifact2Completed(this, new moveArtifact2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getAllowedWorkflowTransitionListReturn")]
    public WorkflowTransitionSoapList getAllowedWorkflowTransitionList(string sessionId, string trackerId) {
        object[] results = this.Invoke("getAllowedWorkflowTransitionList", new object[] {
                    sessionId,
                    trackerId});
        return ((WorkflowTransitionSoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetAllowedWorkflowTransitionList(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getAllowedWorkflowTransitionList", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public WorkflowTransitionSoapList EndgetAllowedWorkflowTransitionList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((WorkflowTransitionSoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getAllowedWorkflowTransitionListAsync(string sessionId, string trackerId) {
        this.getAllowedWorkflowTransitionListAsync(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getAllowedWorkflowTransitionListAsync(string sessionId, string trackerId, object userState) {
        if ((this.getAllowedWorkflowTransitionListOperationCompleted == null)) {
            this.getAllowedWorkflowTransitionListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetAllowedWorkflowTransitionListOperationCompleted);
        }
        this.InvokeAsync("getAllowedWorkflowTransitionList", new object[] {
                    sessionId,
                    trackerId}, this.getAllowedWorkflowTransitionListOperationCompleted, userState);
    }
    
    private void OngetAllowedWorkflowTransitionListOperationCompleted(object arg) {
        if ((this.getAllowedWorkflowTransitionListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getAllowedWorkflowTransitionListCompleted(this, new getAllowedWorkflowTransitionListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void createArtifactDependency(string sessionId, string originId, string targetId, string desc) {
        this.Invoke("createArtifactDependency", new object[] {
                    sessionId,
                    originId,
                    targetId,
                    desc});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateArtifactDependency(string sessionId, string originId, string targetId, string desc, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createArtifactDependency", new object[] {
                    sessionId,
                    originId,
                    targetId,
                    desc}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndcreateArtifactDependency(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void createArtifactDependencyAsync(string sessionId, string originId, string targetId, string desc) {
        this.createArtifactDependencyAsync(sessionId, originId, targetId, desc, null);
    }
    
    /// <remarks/>
    public void createArtifactDependencyAsync(string sessionId, string originId, string targetId, string desc, object userState) {
        if ((this.createArtifactDependencyOperationCompleted == null)) {
            this.createArtifactDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateArtifactDependencyOperationCompleted);
        }
        this.InvokeAsync("createArtifactDependency", new object[] {
                    sessionId,
                    originId,
                    targetId,
                    desc}, this.createArtifactDependencyOperationCompleted, userState);
    }
    
    private void OncreateArtifactDependencyOperationCompleted(object arg) {
        if ((this.createArtifactDependencyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createArtifactDependencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void removeArtifactDependency(string sessionId, string originId, string targetId) {
        this.Invoke("removeArtifactDependency", new object[] {
                    sessionId,
                    originId,
                    targetId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginremoveArtifactDependency(string sessionId, string originId, string targetId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("removeArtifactDependency", new object[] {
                    sessionId,
                    originId,
                    targetId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndremoveArtifactDependency(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void removeArtifactDependencyAsync(string sessionId, string originId, string targetId) {
        this.removeArtifactDependencyAsync(sessionId, originId, targetId, null);
    }
    
    /// <remarks/>
    public void removeArtifactDependencyAsync(string sessionId, string originId, string targetId, object userState) {
        if ((this.removeArtifactDependencyOperationCompleted == null)) {
            this.removeArtifactDependencyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnremoveArtifactDependencyOperationCompleted);
        }
        this.InvokeAsync("removeArtifactDependency", new object[] {
                    sessionId,
                    originId,
                    targetId}, this.removeArtifactDependencyOperationCompleted, userState);
    }
    
    private void OnremoveArtifactDependencyOperationCompleted(object arg) {
        if ((this.removeArtifactDependencyCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.removeArtifactDependencyCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getTracker2ListReturn")]
    public Tracker2SoapList getTracker2List(string sessionId, string projectId) {
        object[] results = this.Invoke("getTracker2List", new object[] {
                    sessionId,
                    projectId});
        return ((Tracker2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTracker2List(string sessionId, string projectId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTracker2List", new object[] {
                    sessionId,
                    projectId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Tracker2SoapList EndgetTracker2List(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Tracker2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getTracker2ListAsync(string sessionId, string projectId) {
        this.getTracker2ListAsync(sessionId, projectId, null);
    }
    
    /// <remarks/>
    public void getTracker2ListAsync(string sessionId, string projectId, object userState) {
        if ((this.getTracker2ListOperationCompleted == null)) {
            this.getTracker2ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTracker2ListOperationCompleted);
        }
        this.InvokeAsync("getTracker2List", new object[] {
                    sessionId,
                    projectId}, this.getTracker2ListOperationCompleted, userState);
    }
    
    private void OngetTracker2ListOperationCompleted(object arg) {
        if ((this.getTracker2ListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTracker2ListCompleted(this, new getTracker2ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getTracker2DataReturn")]
    public Tracker2SoapDO getTracker2Data(string sessionId, string trackerId) {
        object[] results = this.Invoke("getTracker2Data", new object[] {
                    sessionId,
                    trackerId});
        return ((Tracker2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetTracker2Data(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getTracker2Data", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Tracker2SoapDO EndgetTracker2Data(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Tracker2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void getTracker2DataAsync(string sessionId, string trackerId) {
        this.getTracker2DataAsync(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getTracker2DataAsync(string sessionId, string trackerId, object userState) {
        if ((this.getTracker2DataOperationCompleted == null)) {
            this.getTracker2DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetTracker2DataOperationCompleted);
        }
        this.InvokeAsync("getTracker2Data", new object[] {
                    sessionId,
                    trackerId}, this.getTracker2DataOperationCompleted, userState);
    }
    
    private void OngetTracker2DataOperationCompleted(object arg) {
        if ((this.getTracker2DataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getTracker2DataCompleted(this, new getTracker2DataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setTracker2Data(string sessionId, Tracker2SoapDO trackerData) {
        this.Invoke("setTracker2Data", new object[] {
                    sessionId,
                    trackerData});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetTracker2Data(string sessionId, Tracker2SoapDO trackerData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setTracker2Data", new object[] {
                    sessionId,
                    trackerData}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetTracker2Data(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setTracker2DataAsync(string sessionId, Tracker2SoapDO trackerData) {
        this.setTracker2DataAsync(sessionId, trackerData, null);
    }
    
    /// <remarks/>
    public void setTracker2DataAsync(string sessionId, Tracker2SoapDO trackerData, object userState) {
        if ((this.setTracker2DataOperationCompleted == null)) {
            this.setTracker2DataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetTracker2DataOperationCompleted);
        }
        this.InvokeAsync("setTracker2Data", new object[] {
                    sessionId,
                    trackerData}, this.setTracker2DataOperationCompleted, userState);
    }
    
    private void OnsetTracker2DataOperationCompleted(object arg) {
        if ((this.setTracker2DataCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setTracker2DataCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("createTracker2Return")]
    public Tracker2SoapDO createTracker2(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, string icon) {
        object[] results = this.Invoke("createTracker2", new object[] {
                    sessionId,
                    projectId,
                    trackerName,
                    trackerTitle,
                    trackerDescription,
                    icon});
        return ((Tracker2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateTracker2(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, string icon, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("createTracker2", new object[] {
                    sessionId,
                    projectId,
                    trackerName,
                    trackerTitle,
                    trackerDescription,
                    icon}, callback, asyncState);
    }
    
    /// <remarks/>
    public Tracker2SoapDO EndcreateTracker2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Tracker2SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void createTracker2Async(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, string icon) {
        this.createTracker2Async(sessionId, projectId, trackerName, trackerTitle, trackerDescription, icon, null);
    }
    
    /// <remarks/>
    public void createTracker2Async(string sessionId, string projectId, string trackerName, string trackerTitle, string trackerDescription, string icon, object userState) {
        if ((this.createTracker2OperationCompleted == null)) {
            this.createTracker2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateTracker2OperationCompleted);
        }
        this.InvokeAsync("createTracker2", new object[] {
                    sessionId,
                    projectId,
                    trackerName,
                    trackerTitle,
                    trackerDescription,
                    icon}, this.createTracker2OperationCompleted, userState);
    }
    
    private void OncreateTracker2OperationCompleted(object arg) {
        if ((this.createTracker2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createTracker2Completed(this, new createTracker2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setField3(string sessionId, string objectId, TrackerField3SoapDO fieldData) {
        this.Invoke("setField3", new object[] {
                    sessionId,
                    objectId,
                    fieldData});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetField3(string sessionId, string objectId, TrackerField3SoapDO fieldData, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setField3", new object[] {
                    sessionId,
                    objectId,
                    fieldData}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetField3(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setField3Async(string sessionId, string objectId, TrackerField3SoapDO fieldData) {
        this.setField3Async(sessionId, objectId, fieldData, null);
    }
    
    /// <remarks/>
    public void setField3Async(string sessionId, string objectId, TrackerField3SoapDO fieldData, object userState) {
        if ((this.setField3OperationCompleted == null)) {
            this.setField3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetField3OperationCompleted);
        }
        this.InvokeAsync("setField3", new object[] {
                    sessionId,
                    objectId,
                    fieldData}, this.setField3OperationCompleted, userState);
    }
    
    private void OnsetField3OperationCompleted(object arg) {
        if ((this.setField3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setField3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addTextField2(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, string helpText, string pattern) {
        this.Invoke("addTextField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayColumns,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValue,
                    helpText,
                    pattern});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddTextField2(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, string helpText, string pattern, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addTextField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayColumns,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValue,
                    helpText,
                    pattern}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddTextField2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addTextField2Async(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, string helpText, string pattern) {
        this.addTextField2Async(sessionId, trackerId, fieldName, displayColumns, displayLines, isRequired, isDisabled, isHiddenOnCreate, defaultValue, helpText, pattern, null);
    }
    
    /// <remarks/>
    public void addTextField2Async(string sessionId, string trackerId, string fieldName, int displayColumns, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string defaultValue, string helpText, string pattern, object userState) {
        if ((this.addTextField2OperationCompleted == null)) {
            this.addTextField2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddTextField2OperationCompleted);
        }
        this.InvokeAsync("addTextField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayColumns,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValue,
                    helpText,
                    pattern}, this.addTextField2OperationCompleted, userState);
    }
    
    private void OnaddTextField2OperationCompleted(object arg) {
        if ((this.addTextField2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addTextField2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addSingleSelectChildField(string sessionId, string trackerId, string fieldName, string[] fieldValues, string parentFieldId, SoapNamedValues parentChildFieldValueMap, string helpText) {
        this.Invoke("addSingleSelectChildField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    fieldValues,
                    parentFieldId,
                    parentChildFieldValueMap,
                    helpText});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddSingleSelectChildField(string sessionId, string trackerId, string fieldName, string[] fieldValues, string parentFieldId, SoapNamedValues parentChildFieldValueMap, string helpText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addSingleSelectChildField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    fieldValues,
                    parentFieldId,
                    parentChildFieldValueMap,
                    helpText}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddSingleSelectChildField(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addSingleSelectChildFieldAsync(string sessionId, string trackerId, string fieldName, string[] fieldValues, string parentFieldId, SoapNamedValues parentChildFieldValueMap, string helpText) {
        this.addSingleSelectChildFieldAsync(sessionId, trackerId, fieldName, fieldValues, parentFieldId, parentChildFieldValueMap, helpText, null);
    }
    
    /// <remarks/>
    public void addSingleSelectChildFieldAsync(string sessionId, string trackerId, string fieldName, string[] fieldValues, string parentFieldId, SoapNamedValues parentChildFieldValueMap, string helpText, object userState) {
        if ((this.addSingleSelectChildFieldOperationCompleted == null)) {
            this.addSingleSelectChildFieldOperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSingleSelectChildFieldOperationCompleted);
        }
        this.InvokeAsync("addSingleSelectChildField", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    fieldValues,
                    parentFieldId,
                    parentChildFieldValueMap,
                    helpText}, this.addSingleSelectChildFieldOperationCompleted, userState);
    }
    
    private void OnaddSingleSelectChildFieldOperationCompleted(object arg) {
        if ((this.addSingleSelectChildFieldCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addSingleSelectChildFieldCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addSingleSelectField2(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, string helpText) {
        this.Invoke("addSingleSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValue,
                    helpText});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddSingleSelectField2(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, string helpText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addSingleSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValue,
                    helpText}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddSingleSelectField2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addSingleSelectField2Async(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, string helpText) {
        this.addSingleSelectField2Async(sessionId, trackerId, fieldName, isRequired, isDisabled, isHiddenOnCreate, fieldValues, defaultValue, helpText, null);
    }
    
    /// <remarks/>
    public void addSingleSelectField2Async(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string defaultValue, string helpText, object userState) {
        if ((this.addSingleSelectField2OperationCompleted == null)) {
            this.addSingleSelectField2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddSingleSelectField2OperationCompleted);
        }
        this.InvokeAsync("addSingleSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValue,
                    helpText}, this.addSingleSelectField2OperationCompleted, userState);
    }
    
    private void OnaddSingleSelectField2OperationCompleted(object arg) {
        if ((this.addSingleSelectField2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addSingleSelectField2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addMultiSelectField2(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, string helpText) {
        this.Invoke("addMultiSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValues,
                    helpText});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddMultiSelectField2(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, string helpText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addMultiSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValues,
                    helpText}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddMultiSelectField2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addMultiSelectField2Async(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, string helpText) {
        this.addMultiSelectField2Async(sessionId, trackerId, fieldName, displayLines, isRequired, isDisabled, isHiddenOnCreate, fieldValues, defaultValues, helpText, null);
    }
    
    /// <remarks/>
    public void addMultiSelectField2Async(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] fieldValues, string[] defaultValues, string helpText, object userState) {
        if ((this.addMultiSelectField2OperationCompleted == null)) {
            this.addMultiSelectField2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddMultiSelectField2OperationCompleted);
        }
        this.InvokeAsync("addMultiSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    fieldValues,
                    defaultValues,
                    helpText}, this.addMultiSelectField2OperationCompleted, userState);
    }
    
    private void OnaddMultiSelectField2OperationCompleted(object arg) {
        if ((this.addMultiSelectField2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addMultiSelectField2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addUserSelectField2(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, string helpText) {
        this.Invoke("addUserSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValues,
                    userFilter,
                    helpText});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddUserSelectField2(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, string helpText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addUserSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValues,
                    userFilter,
                    helpText}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddUserSelectField2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addUserSelectField2Async(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, string helpText) {
        this.addUserSelectField2Async(sessionId, trackerId, fieldName, displayLines, isRequired, isDisabled, isHiddenOnCreate, defaultValues, userFilter, helpText, null);
    }
    
    /// <remarks/>
    public void addUserSelectField2Async(string sessionId, string trackerId, string fieldName, int displayLines, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string[] defaultValues, string userFilter, string helpText, object userState) {
        if ((this.addUserSelectField2OperationCompleted == null)) {
            this.addUserSelectField2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddUserSelectField2OperationCompleted);
        }
        this.InvokeAsync("addUserSelectField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    displayLines,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    defaultValues,
                    userFilter,
                    helpText}, this.addUserSelectField2OperationCompleted, userState);
    }
    
    private void OnaddUserSelectField2OperationCompleted(object arg) {
        if ((this.addUserSelectField2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addUserSelectField2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void addDateField2(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string helpText) {
        this.Invoke("addDateField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    helpText});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginaddDateField2(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string helpText, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("addDateField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    helpText}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndaddDateField2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void addDateField2Async(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string helpText) {
        this.addDateField2Async(sessionId, trackerId, fieldName, isRequired, isDisabled, isHiddenOnCreate, helpText, null);
    }
    
    /// <remarks/>
    public void addDateField2Async(string sessionId, string trackerId, string fieldName, bool isRequired, bool isDisabled, bool isHiddenOnCreate, string helpText, object userState) {
        if ((this.addDateField2OperationCompleted == null)) {
            this.addDateField2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnaddDateField2OperationCompleted);
        }
        this.InvokeAsync("addDateField2", new object[] {
                    sessionId,
                    trackerId,
                    fieldName,
                    isRequired,
                    isDisabled,
                    isHiddenOnCreate,
                    helpText}, this.addDateField2OperationCompleted, userState);
    }
    
    private void OnaddDateField2OperationCompleted(object arg) {
        if ((this.addDateField2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.addDateField2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getFields3Return")]
    public TrackerField3SoapDO[] getFields3(string sessionId, string trackerId) {
        object[] results = this.Invoke("getFields3", new object[] {
                    sessionId,
                    trackerId});
        return ((TrackerField3SoapDO[])(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetFields3(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getFields3", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public TrackerField3SoapDO[] EndgetFields3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((TrackerField3SoapDO[])(results[0]));
    }
    
    /// <remarks/>
    public void getFields3Async(string sessionId, string trackerId) {
        this.getFields3Async(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getFields3Async(string sessionId, string trackerId, object userState) {
        if ((this.getFields3OperationCompleted == null)) {
            this.getFields3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetFields3OperationCompleted);
        }
        this.InvokeAsync("getFields3", new object[] {
                    sessionId,
                    trackerId}, this.getFields3OperationCompleted, userState);
    }
    
    private void OngetFields3OperationCompleted(object arg) {
        if ((this.getFields3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getFields3Completed(this, new getFields3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void deleteSeparator(string sessionId, string trackerId, string layoutId) {
        this.Invoke("deleteSeparator", new object[] {
                    sessionId,
                    trackerId,
                    layoutId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegindeleteSeparator(string sessionId, string trackerId, string layoutId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("deleteSeparator", new object[] {
                    sessionId,
                    trackerId,
                    layoutId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EnddeleteSeparator(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void deleteSeparatorAsync(string sessionId, string trackerId, string layoutId) {
        this.deleteSeparatorAsync(sessionId, trackerId, layoutId, null);
    }
    
    /// <remarks/>
    public void deleteSeparatorAsync(string sessionId, string trackerId, string layoutId, object userState) {
        if ((this.deleteSeparatorOperationCompleted == null)) {
            this.deleteSeparatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OndeleteSeparatorOperationCompleted);
        }
        this.InvokeAsync("deleteSeparator", new object[] {
                    sessionId,
                    trackerId,
                    layoutId}, this.deleteSeparatorOperationCompleted, userState);
    }
    
    private void OndeleteSeparatorOperationCompleted(object arg) {
        if ((this.deleteSeparatorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.deleteSeparatorCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getOrderedTrackerFieldsReturn")]
    public OrderedTrackerFieldSoapList getOrderedTrackerFields(string sessionId, string trackerId) {
        object[] results = this.Invoke("getOrderedTrackerFields", new object[] {
                    sessionId,
                    trackerId});
        return ((OrderedTrackerFieldSoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetOrderedTrackerFields(string sessionId, string trackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getOrderedTrackerFields", new object[] {
                    sessionId,
                    trackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public OrderedTrackerFieldSoapList EndgetOrderedTrackerFields(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((OrderedTrackerFieldSoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getOrderedTrackerFieldsAsync(string sessionId, string trackerId) {
        this.getOrderedTrackerFieldsAsync(sessionId, trackerId, null);
    }
    
    /// <remarks/>
    public void getOrderedTrackerFieldsAsync(string sessionId, string trackerId, object userState) {
        if ((this.getOrderedTrackerFieldsOperationCompleted == null)) {
            this.getOrderedTrackerFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetOrderedTrackerFieldsOperationCompleted);
        }
        this.InvokeAsync("getOrderedTrackerFields", new object[] {
                    sessionId,
                    trackerId}, this.getOrderedTrackerFieldsOperationCompleted, userState);
    }
    
    private void OngetOrderedTrackerFieldsOperationCompleted(object arg) {
        if ((this.getOrderedTrackerFieldsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getOrderedTrackerFieldsCompleted(this, new getOrderedTrackerFieldsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void reorderTrackerFields(string sessionId, string trackerId, string[] layoutIds) {
        this.Invoke("reorderTrackerFields", new object[] {
                    sessionId,
                    trackerId,
                    layoutIds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreorderTrackerFields(string sessionId, string trackerId, string[] layoutIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("reorderTrackerFields", new object[] {
                    sessionId,
                    trackerId,
                    layoutIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndreorderTrackerFields(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void reorderTrackerFieldsAsync(string sessionId, string trackerId, string[] layoutIds) {
        this.reorderTrackerFieldsAsync(sessionId, trackerId, layoutIds, null);
    }
    
    /// <remarks/>
    public void reorderTrackerFieldsAsync(string sessionId, string trackerId, string[] layoutIds, object userState) {
        if ((this.reorderTrackerFieldsOperationCompleted == null)) {
            this.reorderTrackerFieldsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreorderTrackerFieldsOperationCompleted);
        }
        this.InvokeAsync("reorderTrackerFields", new object[] {
                    sessionId,
                    trackerId,
                    layoutIds}, this.reorderTrackerFieldsOperationCompleted, userState);
    }
    
    private void OnreorderTrackerFieldsOperationCompleted(object arg) {
        if ((this.reorderTrackerFieldsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reorderTrackerFieldsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactList3Return")]
    public Artifact3SoapList getArtifactList3(string sessionId, string containerId, SoapFilter[] filters) {
        object[] results = this.Invoke("getArtifactList3", new object[] {
                    sessionId,
                    containerId,
                    filters});
        return ((Artifact3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactList3(string sessionId, string containerId, SoapFilter[] filters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactList3", new object[] {
                    sessionId,
                    containerId,
                    filters}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact3SoapList EndgetArtifactList3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactList3Async(string sessionId, string containerId, SoapFilter[] filters) {
        this.getArtifactList3Async(sessionId, containerId, filters, null);
    }
    
    /// <remarks/>
    public void getArtifactList3Async(string sessionId, string containerId, SoapFilter[] filters, object userState) {
        if ((this.getArtifactList3OperationCompleted == null)) {
            this.getArtifactList3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactList3OperationCompleted);
        }
        this.InvokeAsync("getArtifactList3", new object[] {
                    sessionId,
                    containerId,
                    filters}, this.getArtifactList3OperationCompleted, userState);
    }
    
    private void OngetArtifactList3OperationCompleted(object arg) {
        if ((this.getArtifactList3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactList3Completed(this, new getArtifactList3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactList2Return")]
    public Artifact2SoapList getArtifactList2(string sessionId, string containerId, SoapFilter[] filters) {
        object[] results = this.Invoke("getArtifactList2", new object[] {
                    sessionId,
                    containerId,
                    filters});
        return ((Artifact2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactList2(string sessionId, string containerId, SoapFilter[] filters, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactList2", new object[] {
                    sessionId,
                    containerId,
                    filters}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact2SoapList EndgetArtifactList2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactList2Async(string sessionId, string containerId, SoapFilter[] filters) {
        this.getArtifactList2Async(sessionId, containerId, filters, null);
    }
    
    /// <remarks/>
    public void getArtifactList2Async(string sessionId, string containerId, SoapFilter[] filters, object userState) {
        if ((this.getArtifactList2OperationCompleted == null)) {
            this.getArtifactList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactList2OperationCompleted);
        }
        this.InvokeAsync("getArtifactList2", new object[] {
                    sessionId,
                    containerId,
                    filters}, this.getArtifactList2OperationCompleted, userState);
    }
    
    private void OngetArtifactList2OperationCompleted(object arg) {
        if ((this.getArtifactList2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactList2Completed(this, new getArtifactList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getCrossTrackerArtifactList2Return")]
    public ArtifactDetail3SoapList getCrossTrackerArtifactList2(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns) {
        object[] results = this.Invoke("getCrossTrackerArtifactList2", new object[] {
                    sessionId,
                    containerId,
                    filters,
                    selectedColumns});
        return ((ArtifactDetail3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCrossTrackerArtifactList2(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCrossTrackerArtifactList2", new object[] {
                    sessionId,
                    containerId,
                    filters,
                    selectedColumns}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDetail3SoapList EndgetCrossTrackerArtifactList2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDetail3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getCrossTrackerArtifactList2Async(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns) {
        this.getCrossTrackerArtifactList2Async(sessionId, containerId, filters, selectedColumns, null);
    }
    
    /// <remarks/>
    public void getCrossTrackerArtifactList2Async(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns, object userState) {
        if ((this.getCrossTrackerArtifactList2OperationCompleted == null)) {
            this.getCrossTrackerArtifactList2OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCrossTrackerArtifactList2OperationCompleted);
        }
        this.InvokeAsync("getCrossTrackerArtifactList2", new object[] {
                    sessionId,
                    containerId,
                    filters,
                    selectedColumns}, this.getCrossTrackerArtifactList2OperationCompleted, userState);
    }
    
    private void OngetCrossTrackerArtifactList2OperationCompleted(object arg) {
        if ((this.getCrossTrackerArtifactList2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCrossTrackerArtifactList2Completed(this, new getCrossTrackerArtifactList2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getCrossTrackerArtifactListReturn")]
    public ArtifactDetail2SoapList getCrossTrackerArtifactList(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns) {
        object[] results = this.Invoke("getCrossTrackerArtifactList", new object[] {
                    sessionId,
                    containerId,
                    filters,
                    selectedColumns});
        return ((ArtifactDetail2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetCrossTrackerArtifactList(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getCrossTrackerArtifactList", new object[] {
                    sessionId,
                    containerId,
                    filters,
                    selectedColumns}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDetail2SoapList EndgetCrossTrackerArtifactList(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDetail2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getCrossTrackerArtifactListAsync(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns) {
        this.getCrossTrackerArtifactListAsync(sessionId, containerId, filters, selectedColumns, null);
    }
    
    /// <remarks/>
    public void getCrossTrackerArtifactListAsync(string sessionId, string containerId, SoapFilter[] filters, string[] selectedColumns, object userState) {
        if ((this.getCrossTrackerArtifactListOperationCompleted == null)) {
            this.getCrossTrackerArtifactListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetCrossTrackerArtifactListOperationCompleted);
        }
        this.InvokeAsync("getCrossTrackerArtifactList", new object[] {
                    sessionId,
                    containerId,
                    filters,
                    selectedColumns}, this.getCrossTrackerArtifactListOperationCompleted, userState);
    }
    
    private void OngetCrossTrackerArtifactListOperationCompleted(object arg) {
        if ((this.getCrossTrackerArtifactListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getCrossTrackerArtifactListCompleted(this, new getCrossTrackerArtifactListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactDetailList3Return")]
    public ArtifactDetail3SoapList getArtifactDetailList3(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
        object[] results = this.Invoke("getArtifactDetailList3", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery});
        return ((ArtifactDetail3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactDetailList3(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactDetailList3", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDetail3SoapList EndgetArtifactDetailList3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDetail3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactDetailList3Async(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery) {
        this.getArtifactDetailList3Async(sessionId, trackerId, selectedColumns, filters, sortKeys, startIndex, maxRows, exceptionIfExpiredCache, forceNewQuery, null);
    }
    
    /// <remarks/>
    public void getArtifactDetailList3Async(string sessionId, string trackerId, string[] selectedColumns, SoapFilter[] filters, SoapSortKey[] sortKeys, int startIndex, int maxRows, bool exceptionIfExpiredCache, bool forceNewQuery, object userState) {
        if ((this.getArtifactDetailList3OperationCompleted == null)) {
            this.getArtifactDetailList3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactDetailList3OperationCompleted);
        }
        this.InvokeAsync("getArtifactDetailList3", new object[] {
                    sessionId,
                    trackerId,
                    selectedColumns,
                    filters,
                    sortKeys,
                    startIndex,
                    maxRows,
                    exceptionIfExpiredCache,
                    forceNewQuery}, this.getArtifactDetailList3OperationCompleted, userState);
    }
    
    private void OngetArtifactDetailList3OperationCompleted(object arg) {
        if ((this.getArtifactDetailList3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactDetailList3Completed(this, new getArtifactDetailList3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("findArtifacts3Return")]
    public Artifact3SoapList findArtifacts3(string sessionId, string queryString, string projectId, bool searchAttachments) {
        object[] results = this.Invoke("findArtifacts3", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments});
        return ((Artifact3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindArtifacts3(string sessionId, string queryString, string projectId, bool searchAttachments, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findArtifacts3", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact3SoapList EndfindArtifacts3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact3SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void findArtifacts3Async(string sessionId, string queryString, string projectId, bool searchAttachments) {
        this.findArtifacts3Async(sessionId, queryString, projectId, searchAttachments, null);
    }
    
    /// <remarks/>
    public void findArtifacts3Async(string sessionId, string queryString, string projectId, bool searchAttachments, object userState) {
        if ((this.findArtifacts3OperationCompleted == null)) {
            this.findArtifacts3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindArtifacts3OperationCompleted);
        }
        this.InvokeAsync("findArtifacts3", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments}, this.findArtifacts3OperationCompleted, userState);
    }
    
    private void OnfindArtifacts3OperationCompleted(object arg) {
        if ((this.findArtifacts3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findArtifacts3Completed(this, new findArtifacts3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("findArtifacts2Return")]
    public Artifact2SoapList findArtifacts2(string sessionId, string queryString, string projectId, bool searchAttachments) {
        object[] results = this.Invoke("findArtifacts2", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments});
        return ((Artifact2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginfindArtifacts2(string sessionId, string queryString, string projectId, bool searchAttachments, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("findArtifacts2", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact2SoapList EndfindArtifacts2(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void findArtifacts2Async(string sessionId, string queryString, string projectId, bool searchAttachments) {
        this.findArtifacts2Async(sessionId, queryString, projectId, searchAttachments, null);
    }
    
    /// <remarks/>
    public void findArtifacts2Async(string sessionId, string queryString, string projectId, bool searchAttachments, object userState) {
        if ((this.findArtifacts2OperationCompleted == null)) {
            this.findArtifacts2OperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindArtifacts2OperationCompleted);
        }
        this.InvokeAsync("findArtifacts2", new object[] {
                    sessionId,
                    queryString,
                    projectId,
                    searchAttachments}, this.findArtifacts2OperationCompleted, userState);
    }
    
    private void OnfindArtifacts2OperationCompleted(object arg) {
        if ((this.findArtifacts2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.findArtifacts2Completed(this, new findArtifacts2CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getArtifactData3Return")]
    public Artifact3SoapDO getArtifactData3(string sessionId, string artifactId) {
        object[] results = this.Invoke("getArtifactData3", new object[] {
                    sessionId,
                    artifactId});
        return ((Artifact3SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetArtifactData3(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getArtifactData3", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact3SoapDO EndgetArtifactData3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact3SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void getArtifactData3Async(string sessionId, string artifactId) {
        this.getArtifactData3Async(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getArtifactData3Async(string sessionId, string artifactId, object userState) {
        if ((this.getArtifactData3OperationCompleted == null)) {
            this.getArtifactData3OperationCompleted = new System.Threading.SendOrPostCallback(this.OngetArtifactData3OperationCompleted);
        }
        this.InvokeAsync("getArtifactData3", new object[] {
                    sessionId,
                    artifactId}, this.getArtifactData3OperationCompleted, userState);
    }
    
    private void OngetArtifactData3OperationCompleted(object arg) {
        if ((this.getArtifactData3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getArtifactData3Completed(this, new getArtifactData3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void setArtifactData3(string sessionId, Artifact3SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
        this.Invoke("setArtifactData3", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginsetArtifactData3(string sessionId, Artifact3SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("setArtifactData3", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndsetArtifactData3(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void setArtifactData3Async(string sessionId, Artifact3SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId) {
        this.setArtifactData3Async(sessionId, artifactData, comment, attachmentFileName, attachmentMimeType, attachmentFileId, null);
    }
    
    /// <remarks/>
    public void setArtifactData3Async(string sessionId, Artifact3SoapDO artifactData, string comment, string attachmentFileName, string attachmentMimeType, string attachmentFileId, object userState) {
        if ((this.setArtifactData3OperationCompleted == null)) {
            this.setArtifactData3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnsetArtifactData3OperationCompleted);
        }
        this.InvokeAsync("setArtifactData3", new object[] {
                    sessionId,
                    artifactData,
                    comment,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, this.setArtifactData3OperationCompleted, userState);
    }
    
    private void OnsetArtifactData3OperationCompleted(object arg) {
        if ((this.setArtifactData3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.setArtifactData3Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("createArtifact3Return")]
    public Artifact3SoapDO createArtifact3(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                int points, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId) {
        object[] results = this.Invoke("createArtifact3", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedEffort,
                    remainingEffort,
                    autosumming,
                    points,
                    assignedUsername,
                    releaseId,
                    planningFolderId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId});
        return ((Artifact3SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincreateArtifact3(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                int points, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId, 
                System.AsyncCallback callback, 
                object asyncState) {
        return this.BeginInvoke("createArtifact3", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedEffort,
                    remainingEffort,
                    autosumming,
                    points,
                    assignedUsername,
                    releaseId,
                    planningFolderId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact3SoapDO EndcreateArtifact3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact3SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void createArtifact3Async(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                int points, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId) {
        this.createArtifact3Async(sessionId, trackerId, title, description, group, category, status, customer, priority, estimatedEffort, remainingEffort, autosumming, points, assignedUsername, releaseId, planningFolderId, flexFields, attachmentFileName, attachmentMimeType, attachmentFileId, null);
    }
    
    /// <remarks/>
    public void createArtifact3Async(
                string sessionId, 
                string trackerId, 
                string title, 
                string description, 
                string group, 
                string category, 
                string status, 
                string customer, 
                int priority, 
                int estimatedEffort, 
                int remainingEffort, 
                bool autosumming, 
                int points, 
                string assignedUsername, 
                string releaseId, 
                string planningFolderId, 
                SoapFieldValues flexFields, 
                string attachmentFileName, 
                string attachmentMimeType, 
                string attachmentFileId, 
                object userState) {
        if ((this.createArtifact3OperationCompleted == null)) {
            this.createArtifact3OperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateArtifact3OperationCompleted);
        }
        this.InvokeAsync("createArtifact3", new object[] {
                    sessionId,
                    trackerId,
                    title,
                    description,
                    group,
                    category,
                    status,
                    customer,
                    priority,
                    estimatedEffort,
                    remainingEffort,
                    autosumming,
                    points,
                    assignedUsername,
                    releaseId,
                    planningFolderId,
                    flexFields,
                    attachmentFileName,
                    attachmentMimeType,
                    attachmentFileId}, this.createArtifact3OperationCompleted, userState);
    }
    
    private void OncreateArtifact3OperationCompleted(object arg) {
        if ((this.createArtifact3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.createArtifact3Completed(this, new createArtifact3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("moveArtifact3Return")]
    public Artifact3SoapDO moveArtifact3(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
        object[] results = this.Invoke("moveArtifact3", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee});
        return ((Artifact3SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginmoveArtifact3(string sessionId, string artifactId, string targetFolderId, string newAssignee, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("moveArtifact3", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee}, callback, asyncState);
    }
    
    /// <remarks/>
    public Artifact3SoapDO EndmoveArtifact3(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((Artifact3SoapDO)(results[0]));
    }
    
    /// <remarks/>
    public void moveArtifact3Async(string sessionId, string artifactId, string targetFolderId, string newAssignee) {
        this.moveArtifact3Async(sessionId, artifactId, targetFolderId, newAssignee, null);
    }
    
    /// <remarks/>
    public void moveArtifact3Async(string sessionId, string artifactId, string targetFolderId, string newAssignee, object userState) {
        if ((this.moveArtifact3OperationCompleted == null)) {
            this.moveArtifact3OperationCompleted = new System.Threading.SendOrPostCallback(this.OnmoveArtifact3OperationCompleted);
        }
        this.InvokeAsync("moveArtifact3", new object[] {
                    sessionId,
                    artifactId,
                    targetFolderId,
                    newAssignee}, this.moveArtifact3OperationCompleted, userState);
    }
    
    private void OnmoveArtifact3OperationCompleted(object arg) {
        if ((this.moveArtifact3Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.moveArtifact3Completed(this, new moveArtifact3CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void copyWorkflowTransitions2(string sessionId, string srcTrackerId, string dstTrackerId) {
        this.Invoke("copyWorkflowTransitions2", new object[] {
                    sessionId,
                    srcTrackerId,
                    dstTrackerId});
    }
    
    /// <remarks/>
    public System.IAsyncResult BegincopyWorkflowTransitions2(string sessionId, string srcTrackerId, string dstTrackerId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("copyWorkflowTransitions2", new object[] {
                    sessionId,
                    srcTrackerId,
                    dstTrackerId}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndcopyWorkflowTransitions2(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void copyWorkflowTransitions2Async(string sessionId, string srcTrackerId, string dstTrackerId) {
        this.copyWorkflowTransitions2Async(sessionId, srcTrackerId, dstTrackerId, null);
    }
    
    /// <remarks/>
    public void copyWorkflowTransitions2Async(string sessionId, string srcTrackerId, string dstTrackerId, object userState) {
        if ((this.copyWorkflowTransitions2OperationCompleted == null)) {
            this.copyWorkflowTransitions2OperationCompleted = new System.Threading.SendOrPostCallback(this.OncopyWorkflowTransitions2OperationCompleted);
        }
        this.InvokeAsync("copyWorkflowTransitions2", new object[] {
                    sessionId,
                    srcTrackerId,
                    dstTrackerId}, this.copyWorkflowTransitions2OperationCompleted, userState);
    }
    
    private void OncopyWorkflowTransitions2OperationCompleted(object arg) {
        if ((this.copyWorkflowTransitions2Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.copyWorkflowTransitions2Completed(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getChildDependency2ListReturn")]
    public ArtifactDependency2SoapList getChildDependency2List(string sessionId, string artifactId) {
        object[] results = this.Invoke("getChildDependency2List", new object[] {
                    sessionId,
                    artifactId});
        return ((ArtifactDependency2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetChildDependency2List(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getChildDependency2List", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDependency2SoapList EndgetChildDependency2List(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDependency2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getChildDependency2ListAsync(string sessionId, string artifactId) {
        this.getChildDependency2ListAsync(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getChildDependency2ListAsync(string sessionId, string artifactId, object userState) {
        if ((this.getChildDependency2ListOperationCompleted == null)) {
            this.getChildDependency2ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetChildDependency2ListOperationCompleted);
        }
        this.InvokeAsync("getChildDependency2List", new object[] {
                    sessionId,
                    artifactId}, this.getChildDependency2ListOperationCompleted, userState);
    }
    
    private void OngetChildDependency2ListOperationCompleted(object arg) {
        if ((this.getChildDependency2ListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getChildDependency2ListCompleted(this, new getChildDependency2ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    [return: System.Xml.Serialization.SoapElementAttribute("getParentDependency2ListReturn")]
    public ArtifactDependency2SoapList getParentDependency2List(string sessionId, string artifactId) {
        object[] results = this.Invoke("getParentDependency2List", new object[] {
                    sessionId,
                    artifactId});
        return ((ArtifactDependency2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BegingetParentDependency2List(string sessionId, string artifactId, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("getParentDependency2List", new object[] {
                    sessionId,
                    artifactId}, callback, asyncState);
    }
    
    /// <remarks/>
    public ArtifactDependency2SoapList EndgetParentDependency2List(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((ArtifactDependency2SoapList)(results[0]));
    }
    
    /// <remarks/>
    public void getParentDependency2ListAsync(string sessionId, string artifactId) {
        this.getParentDependency2ListAsync(sessionId, artifactId, null);
    }
    
    /// <remarks/>
    public void getParentDependency2ListAsync(string sessionId, string artifactId, object userState) {
        if ((this.getParentDependency2ListOperationCompleted == null)) {
            this.getParentDependency2ListOperationCompleted = new System.Threading.SendOrPostCallback(this.OngetParentDependency2ListOperationCompleted);
        }
        this.InvokeAsync("getParentDependency2List", new object[] {
                    sessionId,
                    artifactId}, this.getParentDependency2ListOperationCompleted, userState);
    }
    
    private void OngetParentDependency2ListOperationCompleted(object arg) {
        if ((this.getParentDependency2ListCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.getParentDependency2ListCompleted(this, new getParentDependency2ListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapRpcMethodAttribute("", RequestNamespace="http://schema.open.collab.net/sfee50/soap50/service", ResponseNamespace="http://schema.open.collab.net/sfee50/soap50/service")]
    public void reorderTrackers(string sessionId, string[] trackerIds) {
        this.Invoke("reorderTrackers", new object[] {
                    sessionId,
                    trackerIds});
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginreorderTrackers(string sessionId, string[] trackerIds, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("reorderTrackers", new object[] {
                    sessionId,
                    trackerIds}, callback, asyncState);
    }
    
    /// <remarks/>
    public void EndreorderTrackers(System.IAsyncResult asyncResult) {
        this.EndInvoke(asyncResult);
    }
    
    /// <remarks/>
    public void reorderTrackersAsync(string sessionId, string[] trackerIds) {
        this.reorderTrackersAsync(sessionId, trackerIds, null);
    }
    
    /// <remarks/>
    public void reorderTrackersAsync(string sessionId, string[] trackerIds, object userState) {
        if ((this.reorderTrackersOperationCompleted == null)) {
            this.reorderTrackersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnreorderTrackersOperationCompleted);
        }
        this.InvokeAsync("reorderTrackers", new object[] {
                    sessionId,
                    trackerIds}, this.reorderTrackersOperationCompleted, userState);
    }
    
    private void OnreorderTrackersOperationCompleted(object arg) {
        if ((this.reorderTrackersCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.reorderTrackersCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerFieldSoapDO : ObjectSoapDO {
    
    private string defaultTextValueField;
    
    private string[] defaultUsernamesField;
    
    private bool disabledField;
    
    private int displayLinesField;
    
    private int displaySizeField;
    
    private string fieldTypeField;
    
    private TrackerFieldValueSoapDO[] fieldValuesField;
    
    private bool hiddenOnCreateField;
    
    private string nameField;
    
    private bool requiredField;
    
    private string userFilterField;
    
    private string valueTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string defaultTextValue {
        get {
            return this.defaultTextValueField;
        }
        set {
            this.defaultTextValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] defaultUsernames {
        get {
            return this.defaultUsernamesField;
        }
        set {
            this.defaultUsernamesField = value;
        }
    }
    
    /// <remarks/>
    public bool disabled {
        get {
            return this.disabledField;
        }
        set {
            this.disabledField = value;
        }
    }
    
    /// <remarks/>
    public int displayLines {
        get {
            return this.displayLinesField;
        }
        set {
            this.displayLinesField = value;
        }
    }
    
    /// <remarks/>
    public int displaySize {
        get {
            return this.displaySizeField;
        }
        set {
            this.displaySizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fieldType {
        get {
            return this.fieldTypeField;
        }
        set {
            this.fieldTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public TrackerFieldValueSoapDO[] fieldValues {
        get {
            return this.fieldValuesField;
        }
        set {
            this.fieldValuesField = value;
        }
    }
    
    /// <remarks/>
    public bool hiddenOnCreate {
        get {
            return this.hiddenOnCreateField;
        }
        set {
            this.hiddenOnCreateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public bool required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string userFilter {
        get {
            return this.userFilterField;
        }
        set {
            this.userFilterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string valueType {
        get {
            return this.valueTypeField;
        }
        set {
            this.valueTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerFieldValueSoapDO {
    
    private string idField;
    
    private bool isDefaultField;
    
    private string valueField;
    
    private string valueClassField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    public bool isDefault {
        get {
            return this.isDefaultField;
        }
        set {
            this.isDefaultField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string valueClass {
        get {
            return this.valueClassField;
        }
        set {
            this.valueClassField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDependency2SoapList {
    
    private ArtifactDependency2SoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public ArtifactDependency2SoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDependency2SoapRow {
    
    private string descriptionField;
    
    private bool hasViewPermissionField;
    
    private string originIdField;
    
    private string originStatusField;
    
    private string originStatusClassField;
    
    private string originTitleField;
    
    private string targetIdField;
    
    private string targetStatusField;
    
    private string targetStatusClassField;
    
    private string targetTitleField;
    
    private string trackerIconField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public bool hasViewPermission {
        get {
            return this.hasViewPermissionField;
        }
        set {
            this.hasViewPermissionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originId {
        get {
            return this.originIdField;
        }
        set {
            this.originIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originStatus {
        get {
            return this.originStatusField;
        }
        set {
            this.originStatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originStatusClass {
        get {
            return this.originStatusClassField;
        }
        set {
            this.originStatusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originTitle {
        get {
            return this.originTitleField;
        }
        set {
            this.originTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetId {
        get {
            return this.targetIdField;
        }
        set {
            this.targetIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetStatus {
        get {
            return this.targetStatusField;
        }
        set {
            this.targetStatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetStatusClass {
        get {
            return this.targetStatusClassField;
        }
        set {
            this.targetStatusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetTitle {
        get {
            return this.targetTitleField;
        }
        set {
            this.targetTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string trackerIcon {
        get {
            return this.trackerIconField;
        }
        set {
            this.trackerIconField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDetail3SoapList {
    
    private ArtifactDetail3SoapRow[] dataRowsField;
    
    private int fullListSizeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public ArtifactDetail3SoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
    
    /// <remarks/>
    public int fullListSize {
        get {
            return this.fullListSizeField;
        }
        set {
            this.fullListSizeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDetail3SoapRow {
    
    private int actualEffortField;
    
    private string artifactGroupField;
    
    private string assignedToFullnameField;
    
    private string assignedToUsernameField;
    
    private bool autosummingField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedEffortField;
    
    private SoapFieldValues flexFieldsField;
    
    private string folderIdField;
    
    private string folderPathStringField;
    
    private string folderTitleField;
    
    private string idField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private string planningFolderIdField;
    
    private string planningFolderTitleField;
    
    private int pointsField;
    
    private int priorityField;
    
    private string projectIdField;
    
    private string projectPathStringField;
    
    private string projectTitleField;
    
    private int remainingEffortField;
    
    private string reportedInReleaseIdField;
    
    private string reportedInReleaseTitleField;
    
    private string resolvedInReleaseIdField;
    
    private string resolvedInReleaseTitleField;
    
    private string statusField;
    
    private string statusClassField;
    
    private string submittedByFullnameField;
    
    private string submittedByUsernameField;
    
    private System.Nullable<System.DateTime> submittedDateField;
    
    private string titleField;
    
    private string trackerIconField;
    
    private int versionField;
    
    /// <remarks/>
    public int actualEffort {
        get {
            return this.actualEffortField;
        }
        set {
            this.actualEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string artifactGroup {
        get {
            return this.artifactGroupField;
        }
        set {
            this.artifactGroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToFullname {
        get {
            return this.assignedToFullnameField;
        }
        set {
            this.assignedToFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToUsername {
        get {
            return this.assignedToUsernameField;
        }
        set {
            this.assignedToUsernameField = value;
        }
    }
    
    /// <remarks/>
    public bool autosumming {
        get {
            return this.autosummingField;
        }
        set {
            this.autosummingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedEffort {
        get {
            return this.estimatedEffortField;
        }
        set {
            this.estimatedEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapFieldValues flexFields {
        get {
            return this.flexFieldsField;
        }
        set {
            this.flexFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderPathString {
        get {
            return this.folderPathStringField;
        }
        set {
            this.folderPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderTitle {
        get {
            return this.folderTitleField;
        }
        set {
            this.folderTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderId {
        get {
            return this.planningFolderIdField;
        }
        set {
            this.planningFolderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderTitle {
        get {
            return this.planningFolderTitleField;
        }
        set {
            this.planningFolderTitleField = value;
        }
    }
    
    /// <remarks/>
    public int points {
        get {
            return this.pointsField;
        }
        set {
            this.pointsField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectPathString {
        get {
            return this.projectPathStringField;
        }
        set {
            this.projectPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectTitle {
        get {
            return this.projectTitleField;
        }
        set {
            this.projectTitleField = value;
        }
    }
    
    /// <remarks/>
    public int remainingEffort {
        get {
            return this.remainingEffortField;
        }
        set {
            this.remainingEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedInReleaseId {
        get {
            return this.reportedInReleaseIdField;
        }
        set {
            this.reportedInReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedInReleaseTitle {
        get {
            return this.reportedInReleaseTitleField;
        }
        set {
            this.reportedInReleaseTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedInReleaseId {
        get {
            return this.resolvedInReleaseIdField;
        }
        set {
            this.resolvedInReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedInReleaseTitle {
        get {
            return this.resolvedInReleaseTitleField;
        }
        set {
            this.resolvedInReleaseTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByFullname {
        get {
            return this.submittedByFullnameField;
        }
        set {
            this.submittedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByUsername {
        get {
            return this.submittedByUsernameField;
        }
        set {
            this.submittedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> submittedDate {
        get {
            return this.submittedDateField;
        }
        set {
            this.submittedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string trackerIcon {
        get {
            return this.trackerIconField;
        }
        set {
            this.trackerIconField = value;
        }
    }
    
    /// <remarks/>
    public int version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class SoapFieldValues {
    
    private string[] namesField;
    
    private string[] typesField;
    
    private object[] valuesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] names {
        get {
            return this.namesField;
        }
        set {
            this.namesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] types {
        get {
            return this.typesField;
        }
        set {
            this.typesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public object[] values {
        get {
            return this.valuesField;
        }
        set {
            this.valuesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Artifact2SoapList {
    
    private Artifact2SoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public Artifact2SoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Artifact2SoapRow {
    
    private int actualEffortField;
    
    private string artifactGroupField;
    
    private string assignedToFullnameField;
    
    private string assignedToUsernameField;
    
    private bool autosummingField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedEffortField;
    
    private string folderIdField;
    
    private string folderPathStringField;
    
    private string folderTitleField;
    
    private string idField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private string planningFolderIdField;
    
    private int priorityField;
    
    private string projectIdField;
    
    private string projectPathStringField;
    
    private string projectTitleField;
    
    private int remainingEffortField;
    
    private string statusField;
    
    private string statusClassField;
    
    private string submittedByFullnameField;
    
    private string submittedByUsernameField;
    
    private System.Nullable<System.DateTime> submittedDateField;
    
    private string titleField;
    
    private int versionField;
    
    /// <remarks/>
    public int actualEffort {
        get {
            return this.actualEffortField;
        }
        set {
            this.actualEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string artifactGroup {
        get {
            return this.artifactGroupField;
        }
        set {
            this.artifactGroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToFullname {
        get {
            return this.assignedToFullnameField;
        }
        set {
            this.assignedToFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToUsername {
        get {
            return this.assignedToUsernameField;
        }
        set {
            this.assignedToUsernameField = value;
        }
    }
    
    /// <remarks/>
    public bool autosumming {
        get {
            return this.autosummingField;
        }
        set {
            this.autosummingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedEffort {
        get {
            return this.estimatedEffortField;
        }
        set {
            this.estimatedEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderPathString {
        get {
            return this.folderPathStringField;
        }
        set {
            this.folderPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderTitle {
        get {
            return this.folderTitleField;
        }
        set {
            this.folderTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderId {
        get {
            return this.planningFolderIdField;
        }
        set {
            this.planningFolderIdField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectPathString {
        get {
            return this.projectPathStringField;
        }
        set {
            this.projectPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectTitle {
        get {
            return this.projectTitleField;
        }
        set {
            this.projectTitleField = value;
        }
    }
    
    /// <remarks/>
    public int remainingEffort {
        get {
            return this.remainingEffortField;
        }
        set {
            this.remainingEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByFullname {
        get {
            return this.submittedByFullnameField;
        }
        set {
            this.submittedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByUsername {
        get {
            return this.submittedByUsernameField;
        }
        set {
            this.submittedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> submittedDate {
        get {
            return this.submittedDateField;
        }
        set {
            this.submittedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public int version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Artifact3SoapList {
    
    private Artifact3SoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public Artifact3SoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Artifact3SoapRow {
    
    private int actualEffortField;
    
    private string artifactGroupField;
    
    private string assignedToFullnameField;
    
    private string assignedToUsernameField;
    
    private bool autosummingField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedEffortField;
    
    private string folderIdField;
    
    private string folderPathStringField;
    
    private string folderTitleField;
    
    private string idField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private string planningFolderIdField;
    
    private int pointsField;
    
    private int priorityField;
    
    private string projectIdField;
    
    private string projectPathStringField;
    
    private string projectTitleField;
    
    private int remainingEffortField;
    
    private string statusField;
    
    private string statusClassField;
    
    private string submittedByFullnameField;
    
    private string submittedByUsernameField;
    
    private System.Nullable<System.DateTime> submittedDateField;
    
    private string titleField;
    
    private int versionField;
    
    /// <remarks/>
    public int actualEffort {
        get {
            return this.actualEffortField;
        }
        set {
            this.actualEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string artifactGroup {
        get {
            return this.artifactGroupField;
        }
        set {
            this.artifactGroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToFullname {
        get {
            return this.assignedToFullnameField;
        }
        set {
            this.assignedToFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToUsername {
        get {
            return this.assignedToUsernameField;
        }
        set {
            this.assignedToUsernameField = value;
        }
    }
    
    /// <remarks/>
    public bool autosumming {
        get {
            return this.autosummingField;
        }
        set {
            this.autosummingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedEffort {
        get {
            return this.estimatedEffortField;
        }
        set {
            this.estimatedEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderPathString {
        get {
            return this.folderPathStringField;
        }
        set {
            this.folderPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderTitle {
        get {
            return this.folderTitleField;
        }
        set {
            this.folderTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderId {
        get {
            return this.planningFolderIdField;
        }
        set {
            this.planningFolderIdField = value;
        }
    }
    
    /// <remarks/>
    public int points {
        get {
            return this.pointsField;
        }
        set {
            this.pointsField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectPathString {
        get {
            return this.projectPathStringField;
        }
        set {
            this.projectPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectTitle {
        get {
            return this.projectTitleField;
        }
        set {
            this.projectTitleField = value;
        }
    }
    
    /// <remarks/>
    public int remainingEffort {
        get {
            return this.remainingEffortField;
        }
        set {
            this.remainingEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByFullname {
        get {
            return this.submittedByFullnameField;
        }
        set {
            this.submittedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByUsername {
        get {
            return this.submittedByUsernameField;
        }
        set {
            this.submittedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> submittedDate {
        get {
            return this.submittedDateField;
        }
        set {
            this.submittedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public int version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class OrderedTrackerFieldSoapList {
    
    private OrderedTrackerFieldSoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public OrderedTrackerFieldSoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class OrderedTrackerFieldSoapRow {
    
    private string defaultTextValueField;
    
    private string[] defaultUsernamesField;
    
    private bool disabledField;
    
    private int displayLinesField;
    
    private int displayOrderField;
    
    private int displaySizeField;
    
    private string fieldDisplayTypeField;
    
    private string fieldIdField;
    
    private string fieldNameField;
    
    private TrackerFieldValueSoapDO[] fieldValuesField;
    
    private string folderIdField;
    
    private string helpTextField;
    
    private bool hiddenOnCreateField;
    
    private string labelField;
    
    private string layoutIdField;
    
    private SoapNamedValues parentChildfieldValueMapField;
    
    private string parentFieldIdField;
    
    private string patternField;
    
    private bool requiredField;
    
    private string userFilterField;
    
    private string valueTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string defaultTextValue {
        get {
            return this.defaultTextValueField;
        }
        set {
            this.defaultTextValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] defaultUsernames {
        get {
            return this.defaultUsernamesField;
        }
        set {
            this.defaultUsernamesField = value;
        }
    }
    
    /// <remarks/>
    public bool disabled {
        get {
            return this.disabledField;
        }
        set {
            this.disabledField = value;
        }
    }
    
    /// <remarks/>
    public int displayLines {
        get {
            return this.displayLinesField;
        }
        set {
            this.displayLinesField = value;
        }
    }
    
    /// <remarks/>
    public int displayOrder {
        get {
            return this.displayOrderField;
        }
        set {
            this.displayOrderField = value;
        }
    }
    
    /// <remarks/>
    public int displaySize {
        get {
            return this.displaySizeField;
        }
        set {
            this.displaySizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fieldDisplayType {
        get {
            return this.fieldDisplayTypeField;
        }
        set {
            this.fieldDisplayTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fieldId {
        get {
            return this.fieldIdField;
        }
        set {
            this.fieldIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fieldName {
        get {
            return this.fieldNameField;
        }
        set {
            this.fieldNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public TrackerFieldValueSoapDO[] fieldValues {
        get {
            return this.fieldValuesField;
        }
        set {
            this.fieldValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string helpText {
        get {
            return this.helpTextField;
        }
        set {
            this.helpTextField = value;
        }
    }
    
    /// <remarks/>
    public bool hiddenOnCreate {
        get {
            return this.hiddenOnCreateField;
        }
        set {
            this.hiddenOnCreateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string label {
        get {
            return this.labelField;
        }
        set {
            this.labelField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string layoutId {
        get {
            return this.layoutIdField;
        }
        set {
            this.layoutIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapNamedValues parentChildfieldValueMap {
        get {
            return this.parentChildfieldValueMapField;
        }
        set {
            this.parentChildfieldValueMapField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string parentFieldId {
        get {
            return this.parentFieldIdField;
        }
        set {
            this.parentFieldIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string pattern {
        get {
            return this.patternField;
        }
        set {
            this.patternField = value;
        }
    }
    
    /// <remarks/>
    public bool required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string userFilter {
        get {
            return this.userFilterField;
        }
        set {
            this.userFilterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string valueType {
        get {
            return this.valueTypeField;
        }
        set {
            this.valueTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class SoapNamedValues {
    
    private string[] namesField;
    
    private string[] valuesField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] names {
        get {
            return this.namesField;
        }
        set {
            this.namesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] values {
        get {
            return this.valuesField;
        }
        set {
            this.valuesField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class WorkflowTransitionSoapList {
    
    private WorkflowTransitionSoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public WorkflowTransitionSoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class WorkflowTransitionSoapRow {
    
    private System.Nullable<int> displayOrderField;
    
    private string fromStatusNameField;
    
    private string[] requiredFieldsField;
    
    private string toStatusNameField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<int> displayOrder {
        get {
            return this.displayOrderField;
        }
        set {
            this.displayOrderField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fromStatusName {
        get {
            return this.fromStatusNameField;
        }
        set {
            this.fromStatusNameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] requiredFields {
        get {
            return this.requiredFieldsField;
        }
        set {
            this.requiredFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string toStatusName {
        get {
            return this.toStatusNameField;
        }
        set {
            this.toStatusNameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDetail2SoapList {
    
    private ArtifactDetail2SoapRow[] dataRowsField;
    
    private int fullListSizeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public ArtifactDetail2SoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
    
    /// <remarks/>
    public int fullListSize {
        get {
            return this.fullListSizeField;
        }
        set {
            this.fullListSizeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDetail2SoapRow {
    
    private int actualEffortField;
    
    private string artifactGroupField;
    
    private string assignedToFullnameField;
    
    private string assignedToUsernameField;
    
    private bool autosummingField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedEffortField;
    
    private SoapFieldValues flexFieldsField;
    
    private string folderIdField;
    
    private string folderPathStringField;
    
    private string folderTitleField;
    
    private string idField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private string planningFolderIdField;
    
    private string planningFolderTitleField;
    
    private int priorityField;
    
    private string projectIdField;
    
    private string projectPathStringField;
    
    private string projectTitleField;
    
    private int remainingEffortField;
    
    private string reportedInReleaseTitleField;
    
    private string resolvedInReleaseTitleField;
    
    private string statusField;
    
    private string statusClassField;
    
    private string submittedByFullnameField;
    
    private string submittedByUsernameField;
    
    private System.Nullable<System.DateTime> submittedDateField;
    
    private string titleField;
    
    private string trackerIconField;
    
    private int versionField;
    
    /// <remarks/>
    public int actualEffort {
        get {
            return this.actualEffortField;
        }
        set {
            this.actualEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string artifactGroup {
        get {
            return this.artifactGroupField;
        }
        set {
            this.artifactGroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToFullname {
        get {
            return this.assignedToFullnameField;
        }
        set {
            this.assignedToFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToUsername {
        get {
            return this.assignedToUsernameField;
        }
        set {
            this.assignedToUsernameField = value;
        }
    }
    
    /// <remarks/>
    public bool autosumming {
        get {
            return this.autosummingField;
        }
        set {
            this.autosummingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedEffort {
        get {
            return this.estimatedEffortField;
        }
        set {
            this.estimatedEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapFieldValues flexFields {
        get {
            return this.flexFieldsField;
        }
        set {
            this.flexFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderPathString {
        get {
            return this.folderPathStringField;
        }
        set {
            this.folderPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderTitle {
        get {
            return this.folderTitleField;
        }
        set {
            this.folderTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderId {
        get {
            return this.planningFolderIdField;
        }
        set {
            this.planningFolderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderTitle {
        get {
            return this.planningFolderTitleField;
        }
        set {
            this.planningFolderTitleField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectPathString {
        get {
            return this.projectPathStringField;
        }
        set {
            this.projectPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectTitle {
        get {
            return this.projectTitleField;
        }
        set {
            this.projectTitleField = value;
        }
    }
    
    /// <remarks/>
    public int remainingEffort {
        get {
            return this.remainingEffortField;
        }
        set {
            this.remainingEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedInReleaseTitle {
        get {
            return this.reportedInReleaseTitleField;
        }
        set {
            this.reportedInReleaseTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedInReleaseTitle {
        get {
            return this.resolvedInReleaseTitleField;
        }
        set {
            this.resolvedInReleaseTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByFullname {
        get {
            return this.submittedByFullnameField;
        }
        set {
            this.submittedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByUsername {
        get {
            return this.submittedByUsernameField;
        }
        set {
            this.submittedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> submittedDate {
        get {
            return this.submittedDateField;
        }
        set {
            this.submittedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string trackerIcon {
        get {
            return this.trackerIconField;
        }
        set {
            this.trackerIconField = value;
        }
    }
    
    /// <remarks/>
    public int version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDetailSoapList {
    
    private ArtifactDetailSoapRow[] dataRowsField;
    
    private int fullListSizeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public ArtifactDetailSoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
    
    /// <remarks/>
    public int fullListSize {
        get {
            return this.fullListSizeField;
        }
        set {
            this.fullListSizeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDetailSoapRow {
    
    private int actualHoursField;
    
    private string artifactGroupField;
    
    private string assignedToFullnameField;
    
    private string assignedToUsernameField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedHoursField;
    
    private SoapFieldValues flexFieldsField;
    
    private string folderIdField;
    
    private string folderPathStringField;
    
    private string folderTitleField;
    
    private string idField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private int priorityField;
    
    private string projectIdField;
    
    private string projectPathStringField;
    
    private string projectTitleField;
    
    private string reportedInReleaseTitleField;
    
    private string resolvedInReleaseTitleField;
    
    private string statusField;
    
    private string statusClassField;
    
    private string submittedByFullnameField;
    
    private string submittedByUsernameField;
    
    private System.Nullable<System.DateTime> submittedDateField;
    
    private string titleField;
    
    private int versionField;
    
    /// <remarks/>
    public int actualHours {
        get {
            return this.actualHoursField;
        }
        set {
            this.actualHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string artifactGroup {
        get {
            return this.artifactGroupField;
        }
        set {
            this.artifactGroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToFullname {
        get {
            return this.assignedToFullnameField;
        }
        set {
            this.assignedToFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToUsername {
        get {
            return this.assignedToUsernameField;
        }
        set {
            this.assignedToUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedHours {
        get {
            return this.estimatedHoursField;
        }
        set {
            this.estimatedHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapFieldValues flexFields {
        get {
            return this.flexFieldsField;
        }
        set {
            this.flexFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderPathString {
        get {
            return this.folderPathStringField;
        }
        set {
            this.folderPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderTitle {
        get {
            return this.folderTitleField;
        }
        set {
            this.folderTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectPathString {
        get {
            return this.projectPathStringField;
        }
        set {
            this.projectPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectTitle {
        get {
            return this.projectTitleField;
        }
        set {
            this.projectTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedInReleaseTitle {
        get {
            return this.reportedInReleaseTitleField;
        }
        set {
            this.reportedInReleaseTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedInReleaseTitle {
        get {
            return this.resolvedInReleaseTitleField;
        }
        set {
            this.resolvedInReleaseTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByFullname {
        get {
            return this.submittedByFullnameField;
        }
        set {
            this.submittedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByUsername {
        get {
            return this.submittedByUsernameField;
        }
        set {
            this.submittedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> submittedDate {
        get {
            return this.submittedDateField;
        }
        set {
            this.submittedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
    
    /// <remarks/>
    public int version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class SoapSortKey {
    
    private bool ascendingField;
    
    private string nameField;
    
    /// <remarks/>
    public bool ascending {
        get {
            return this.ascendingField;
        }
        set {
            this.ascendingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactSoapList {
    
    private ArtifactSoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public ArtifactSoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactSoapRow {
    
    private int actualHoursField;
    
    private string artifactGroupField;
    
    private string assignedToFullnameField;
    
    private string assignedToUsernameField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedHoursField;
    
    private string folderIdField;
    
    private string folderPathStringField;
    
    private string folderTitleField;
    
    private string idField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private int priorityField;
    
    private string projectIdField;
    
    private string projectPathStringField;
    
    private string projectTitleField;
    
    private string statusField;
    
    private string statusClassField;
    
    private string submittedByFullnameField;
    
    private string submittedByUsernameField;
    
    private System.Nullable<System.DateTime> submittedDateField;
    
    private string titleField;
    
    /// <remarks/>
    public int actualHours {
        get {
            return this.actualHoursField;
        }
        set {
            this.actualHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string artifactGroup {
        get {
            return this.artifactGroupField;
        }
        set {
            this.artifactGroupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToFullname {
        get {
            return this.assignedToFullnameField;
        }
        set {
            this.assignedToFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedToUsername {
        get {
            return this.assignedToUsernameField;
        }
        set {
            this.assignedToUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedHours {
        get {
            return this.estimatedHoursField;
        }
        set {
            this.estimatedHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderPathString {
        get {
            return this.folderPathStringField;
        }
        set {
            this.folderPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderTitle {
        get {
            return this.folderTitleField;
        }
        set {
            this.folderTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectPathString {
        get {
            return this.projectPathStringField;
        }
        set {
            this.projectPathStringField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectTitle {
        get {
            return this.projectTitleField;
        }
        set {
            this.projectTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByFullname {
        get {
            return this.submittedByFullnameField;
        }
        set {
            this.submittedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string submittedByUsername {
        get {
            return this.submittedByUsernameField;
        }
        set {
            this.submittedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> submittedDate {
        get {
            return this.submittedDateField;
        }
        set {
            this.submittedDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class SoapFilter {
    
    private string nameField;
    
    private string valueField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string value {
        get {
            return this.valueField;
        }
        set {
            this.valueField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Tracker2SoapRow))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapRow))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class FolderSoapRow {
    
    private string createdByField;
    
    private System.Nullable<System.DateTime> createdOnField;
    
    private string descriptionField;
    
    private string idField;
    
    private string lastModifiedByField;
    
    private System.Nullable<System.DateTime> lastModifiedOnField;
    
    private string parentFolderIdField;
    
    private string pathField;
    
    private string projectIdField;
    
    private string titleField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string createdBy {
        get {
            return this.createdByField;
        }
        set {
            this.createdByField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> createdOn {
        get {
            return this.createdOnField;
        }
        set {
            this.createdOnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string lastModifiedBy {
        get {
            return this.lastModifiedByField;
        }
        set {
            this.lastModifiedByField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedOn {
        get {
            return this.lastModifiedOnField;
        }
        set {
            this.lastModifiedOnField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string parentFolderId {
        get {
            return this.parentFolderIdField;
        }
        set {
            this.parentFolderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Tracker2SoapRow : FolderSoapRow {
    
    private string iconField;
    
    private string lastEditedByFullnameField;
    
    private string lastEditedByUsernameField;
    
    private System.Nullable<System.DateTime> lastEditedDateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string icon {
        get {
            return this.iconField;
        }
        set {
            this.iconField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string lastEditedByFullname {
        get {
            return this.lastEditedByFullnameField;
        }
        set {
            this.lastEditedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string lastEditedByUsername {
        get {
            return this.lastEditedByUsernameField;
        }
        set {
            this.lastEditedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastEditedDate {
        get {
            return this.lastEditedDateField;
        }
        set {
            this.lastEditedDateField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerSoapRow : FolderSoapRow {
    
    private string lastEditedByFullnameField;
    
    private string lastEditedByUsernameField;
    
    private System.Nullable<System.DateTime> lastEditedDateField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string lastEditedByFullname {
        get {
            return this.lastEditedByFullnameField;
        }
        set {
            this.lastEditedByFullnameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string lastEditedByUsername {
        get {
            return this.lastEditedByUsernameField;
        }
        set {
            this.lastEditedByUsernameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastEditedDate {
        get {
            return this.lastEditedDateField;
        }
        set {
            this.lastEditedDateField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Tracker2SoapList))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapList))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public abstract partial class FolderSoapList {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Tracker2SoapList : FolderSoapList {
    
    private Tracker2SoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public Tracker2SoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerSoapList : FolderSoapList {
    
    private TrackerSoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public TrackerSoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDependencySoapList {
    
    private ArtifactDependencySoapRow[] dataRowsField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public ArtifactDependencySoapRow[] dataRows {
        get {
            return this.dataRowsField;
        }
        set {
            this.dataRowsField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactDependencySoapRow {
    
    private string descriptionField;
    
    private bool hasViewPermissionField;
    
    private string originIdField;
    
    private string originStatusField;
    
    private string originStatusClassField;
    
    private string originTitleField;
    
    private string targetIdField;
    
    private string targetStatusField;
    
    private string targetStatusClassField;
    
    private string targetTitleField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public bool hasViewPermission {
        get {
            return this.hasViewPermissionField;
        }
        set {
            this.hasViewPermissionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originId {
        get {
            return this.originIdField;
        }
        set {
            this.originIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originStatus {
        get {
            return this.originStatusField;
        }
        set {
            this.originStatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originStatusClass {
        get {
            return this.originStatusClassField;
        }
        set {
            this.originStatusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string originTitle {
        get {
            return this.originTitleField;
        }
        set {
            this.originTitleField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetId {
        get {
            return this.targetIdField;
        }
        set {
            this.targetIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetStatus {
        get {
            return this.targetStatusField;
        }
        set {
            this.targetStatusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetStatusClass {
        get {
            return this.targetStatusClassField;
        }
        set {
            this.targetStatusClassField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string targetTitle {
        get {
            return this.targetTitleField;
        }
        set {
            this.targetTitleField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InconsistentFieldValueFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NoSuchRelationshipFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(PlanningFolderRuleViolationFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SearchQuerySyntaxFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidFilterFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ObjectAlreadyExistsFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidRankFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(WorkflowViolationFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(DependencyViolationFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidOperationFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(IllegalArgumentFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(VersionMismatchFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(SystemFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(PermissionDeniedFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(NoSuchObjectFault))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(InvalidSessionFault))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class InconsistentFieldValueFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class NoSuchRelationshipFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class PlanningFolderRuleViolationFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class SearchQuerySyntaxFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class InvalidFilterFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ObjectAlreadyExistsFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class InvalidRankFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class WorkflowViolationFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class DependencyViolationFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class InvalidOperationFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class IllegalArgumentFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class VersionMismatchFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class SystemFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class PermissionDeniedFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class NoSuchObjectFault : WebServiceFault {
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class InvalidSessionFault : WebServiceFault {
}

/// <remarks/>
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerField3SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerField2SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(FolderSoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Tracker2SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ItemSoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Artifact3SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Artifact2SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactSoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerFieldSoapDO))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public abstract partial class ObjectSoapDO {
    
    private string createdByField;
    
    private System.Nullable<System.DateTime> createdDateField;
    
    private string idField;
    
    private string lastModifiedByField;
    
    private System.Nullable<System.DateTime> lastModifiedDateField;
    
    private int versionField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string createdBy {
        get {
            return this.createdByField;
        }
        set {
            this.createdByField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> createdDate {
        get {
            return this.createdDateField;
        }
        set {
            this.createdDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string id {
        get {
            return this.idField;
        }
        set {
            this.idField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string lastModifiedBy {
        get {
            return this.lastModifiedByField;
        }
        set {
            this.lastModifiedByField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> lastModifiedDate {
        get {
            return this.lastModifiedDateField;
        }
        set {
            this.lastModifiedDateField = value;
        }
    }
    
    /// <remarks/>
    public int version {
        get {
            return this.versionField;
        }
        set {
            this.versionField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerField3SoapDO : ObjectSoapDO {
    
    private string defaultTextValueField;
    
    private string[] defaultUsernamesField;
    
    private bool disabledField;
    
    private int displayLinesField;
    
    private int displaySizeField;
    
    private string fieldTypeField;
    
    private TrackerFieldValueSoapDO[] fieldValuesField;
    
    private string helpTextField;
    
    private bool hiddenOnCreateField;
    
    private string nameField;
    
    private SoapNamedValues parentChildFieldValueMapField;
    
    private string parentFieldIdField;
    
    private string patternField;
    
    private bool requiredField;
    
    private string userFilterField;
    
    private string valueTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string defaultTextValue {
        get {
            return this.defaultTextValueField;
        }
        set {
            this.defaultTextValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] defaultUsernames {
        get {
            return this.defaultUsernamesField;
        }
        set {
            this.defaultUsernamesField = value;
        }
    }
    
    /// <remarks/>
    public bool disabled {
        get {
            return this.disabledField;
        }
        set {
            this.disabledField = value;
        }
    }
    
    /// <remarks/>
    public int displayLines {
        get {
            return this.displayLinesField;
        }
        set {
            this.displayLinesField = value;
        }
    }
    
    /// <remarks/>
    public int displaySize {
        get {
            return this.displaySizeField;
        }
        set {
            this.displaySizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fieldType {
        get {
            return this.fieldTypeField;
        }
        set {
            this.fieldTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public TrackerFieldValueSoapDO[] fieldValues {
        get {
            return this.fieldValuesField;
        }
        set {
            this.fieldValuesField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string helpText {
        get {
            return this.helpTextField;
        }
        set {
            this.helpTextField = value;
        }
    }
    
    /// <remarks/>
    public bool hiddenOnCreate {
        get {
            return this.hiddenOnCreateField;
        }
        set {
            this.hiddenOnCreateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapNamedValues parentChildFieldValueMap {
        get {
            return this.parentChildFieldValueMapField;
        }
        set {
            this.parentChildFieldValueMapField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string parentFieldId {
        get {
            return this.parentFieldIdField;
        }
        set {
            this.parentFieldIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string pattern {
        get {
            return this.patternField;
        }
        set {
            this.patternField = value;
        }
    }
    
    /// <remarks/>
    public bool required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string userFilter {
        get {
            return this.userFilterField;
        }
        set {
            this.userFilterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string valueType {
        get {
            return this.valueTypeField;
        }
        set {
            this.valueTypeField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerField2SoapDO : ObjectSoapDO {
    
    private string defaultTextValueField;
    
    private string[] defaultUsernamesField;
    
    private bool disabledField;
    
    private int displayLinesField;
    
    private int displaySizeField;
    
    private string fieldTypeField;
    
    private TrackerFieldValueSoapDO[] fieldValuesField;
    
    private bool hiddenOnCreateField;
    
    private string nameField;
    
    private bool requiredField;
    
    private string userFilterField;
    
    private string valueTypeField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string defaultTextValue {
        get {
            return this.defaultTextValueField;
        }
        set {
            this.defaultTextValueField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string[] defaultUsernames {
        get {
            return this.defaultUsernamesField;
        }
        set {
            this.defaultUsernamesField = value;
        }
    }
    
    /// <remarks/>
    public bool disabled {
        get {
            return this.disabledField;
        }
        set {
            this.disabledField = value;
        }
    }
    
    /// <remarks/>
    public int displayLines {
        get {
            return this.displayLinesField;
        }
        set {
            this.displayLinesField = value;
        }
    }
    
    /// <remarks/>
    public int displaySize {
        get {
            return this.displaySizeField;
        }
        set {
            this.displaySizeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string fieldType {
        get {
            return this.fieldTypeField;
        }
        set {
            this.fieldTypeField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public TrackerFieldValueSoapDO[] fieldValues {
        get {
            return this.fieldValuesField;
        }
        set {
            this.fieldValuesField = value;
        }
    }
    
    /// <remarks/>
    public bool hiddenOnCreate {
        get {
            return this.hiddenOnCreateField;
        }
        set {
            this.hiddenOnCreateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string name {
        get {
            return this.nameField;
        }
        set {
            this.nameField = value;
        }
    }
    
    /// <remarks/>
    public bool required {
        get {
            return this.requiredField;
        }
        set {
            this.requiredField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string userFilter {
        get {
            return this.userFilterField;
        }
        set {
            this.userFilterField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string valueType {
        get {
            return this.valueTypeField;
        }
        set {
            this.valueTypeField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Tracker2SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(TrackerSoapDO))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public abstract partial class FolderSoapDO : ObjectSoapDO {
    
    private string descriptionField;
    
    private string parentFolderIdField;
    
    private string pathField;
    
    private string projectIdField;
    
    private string titleField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string parentFolderId {
        get {
            return this.parentFolderIdField;
        }
        set {
            this.parentFolderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string projectId {
        get {
            return this.projectIdField;
        }
        set {
            this.projectIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Tracker2SoapDO : FolderSoapDO {
    
    private SoapNamedValues assignmentsField;
    
    private string autoAssignFieldField;
    
    private string iconField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapNamedValues assignments {
        get {
            return this.assignmentsField;
        }
        set {
            this.assignmentsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string autoAssignField {
        get {
            return this.autoAssignFieldField;
        }
        set {
            this.autoAssignFieldField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string icon {
        get {
            return this.iconField;
        }
        set {
            this.iconField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class TrackerSoapDO : FolderSoapDO {
    
    private SoapNamedValues assignmentsField;
    
    private string autoAssignFieldField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapNamedValues assignments {
        get {
            return this.assignmentsField;
        }
        set {
            this.assignmentsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string autoAssignField {
        get {
            return this.autoAssignFieldField;
        }
        set {
            this.autoAssignFieldField = value;
        }
    }
}

/// <remarks/>
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Artifact3SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(Artifact2SoapDO))]
[System.Xml.Serialization.SoapIncludeAttribute(typeof(ArtifactSoapDO))]
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ItemSoapDO : ObjectSoapDO {
    
    private string folderIdField;
    
    private string pathField;
    
    private string titleField;
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string folderId {
        get {
            return this.folderIdField;
        }
        set {
            this.folderIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string path {
        get {
            return this.pathField;
        }
        set {
            this.pathField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string title {
        get {
            return this.titleField;
        }
        set {
            this.titleField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Artifact3SoapDO : ItemSoapDO {
    
    private int actualEffortField;
    
    private string assignedToField;
    
    private bool autosummingField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedEffortField;
    
    private SoapFieldValues flexFieldsField;
    
    private string groupField;
    
    private string planningFolderIdField;
    
    private int pointsField;
    
    private int priorityField;
    
    private int remainingEffortField;
    
    private string reportedReleaseIdField;
    
    private string resolvedReleaseIdField;
    
    private string statusField;
    
    private string statusClassField;
    
    /// <remarks/>
    public int actualEffort {
        get {
            return this.actualEffortField;
        }
        set {
            this.actualEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedTo {
        get {
            return this.assignedToField;
        }
        set {
            this.assignedToField = value;
        }
    }
    
    /// <remarks/>
    public bool autosumming {
        get {
            return this.autosummingField;
        }
        set {
            this.autosummingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedEffort {
        get {
            return this.estimatedEffortField;
        }
        set {
            this.estimatedEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapFieldValues flexFields {
        get {
            return this.flexFieldsField;
        }
        set {
            this.flexFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderId {
        get {
            return this.planningFolderIdField;
        }
        set {
            this.planningFolderIdField = value;
        }
    }
    
    /// <remarks/>
    public int points {
        get {
            return this.pointsField;
        }
        set {
            this.pointsField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    public int remainingEffort {
        get {
            return this.remainingEffortField;
        }
        set {
            this.remainingEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedReleaseId {
        get {
            return this.reportedReleaseIdField;
        }
        set {
            this.reportedReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedReleaseId {
        get {
            return this.resolvedReleaseIdField;
        }
        set {
            this.resolvedReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class Artifact2SoapDO : ItemSoapDO {
    
    private int actualEffortField;
    
    private string assignedToField;
    
    private bool autosummingField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedEffortField;
    
    private SoapFieldValues flexFieldsField;
    
    private string groupField;
    
    private string planningFolderIdField;
    
    private int priorityField;
    
    private int remainingEffortField;
    
    private string reportedReleaseIdField;
    
    private string resolvedReleaseIdField;
    
    private string statusField;
    
    private string statusClassField;
    
    /// <remarks/>
    public int actualEffort {
        get {
            return this.actualEffortField;
        }
        set {
            this.actualEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedTo {
        get {
            return this.assignedToField;
        }
        set {
            this.assignedToField = value;
        }
    }
    
    /// <remarks/>
    public bool autosumming {
        get {
            return this.autosummingField;
        }
        set {
            this.autosummingField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedEffort {
        get {
            return this.estimatedEffortField;
        }
        set {
            this.estimatedEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapFieldValues flexFields {
        get {
            return this.flexFieldsField;
        }
        set {
            this.flexFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string planningFolderId {
        get {
            return this.planningFolderIdField;
        }
        set {
            this.planningFolderIdField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    public int remainingEffort {
        get {
            return this.remainingEffortField;
        }
        set {
            this.remainingEffortField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedReleaseId {
        get {
            return this.reportedReleaseIdField;
        }
        set {
            this.reportedReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedReleaseId {
        get {
            return this.resolvedReleaseIdField;
        }
        set {
            this.resolvedReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.SerializableAttribute()]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Xml.Serialization.SoapTypeAttribute(Namespace="http://schema.open.collab.net/sfee50/soap50/type")]
public partial class ArtifactSoapDO : ItemSoapDO {
    
    private int actualHoursField;
    
    private string assignedToField;
    
    private string categoryField;
    
    private System.Nullable<System.DateTime> closeDateField;
    
    private string customerField;
    
    private string descriptionField;
    
    private int estimatedHoursField;
    
    private SoapFieldValues flexFieldsField;
    
    private string groupField;
    
    private int priorityField;
    
    private string reportedReleaseIdField;
    
    private string resolvedReleaseIdField;
    
    private string statusField;
    
    private string statusClassField;
    
    /// <remarks/>
    public int actualHours {
        get {
            return this.actualHoursField;
        }
        set {
            this.actualHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string assignedTo {
        get {
            return this.assignedToField;
        }
        set {
            this.assignedToField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string category {
        get {
            return this.categoryField;
        }
        set {
            this.categoryField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public System.Nullable<System.DateTime> closeDate {
        get {
            return this.closeDateField;
        }
        set {
            this.closeDateField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string customer {
        get {
            return this.customerField;
        }
        set {
            this.customerField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string description {
        get {
            return this.descriptionField;
        }
        set {
            this.descriptionField = value;
        }
    }
    
    /// <remarks/>
    public int estimatedHours {
        get {
            return this.estimatedHoursField;
        }
        set {
            this.estimatedHoursField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public SoapFieldValues flexFields {
        get {
            return this.flexFieldsField;
        }
        set {
            this.flexFieldsField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string group {
        get {
            return this.groupField;
        }
        set {
            this.groupField = value;
        }
    }
    
    /// <remarks/>
    public int priority {
        get {
            return this.priorityField;
        }
        set {
            this.priorityField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string reportedReleaseId {
        get {
            return this.reportedReleaseIdField;
        }
        set {
            this.reportedReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string resolvedReleaseId {
        get {
            return this.resolvedReleaseIdField;
        }
        set {
            this.resolvedReleaseIdField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string status {
        get {
            return this.statusField;
        }
        set {
            this.statusField = value;
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.SoapElementAttribute(IsNullable=true)]
    public string statusClass {
        get {
            return this.statusClassField;
        }
        set {
            this.statusClassField = value;
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getFieldsCompletedEventHandler(object sender, getFieldsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TrackerFieldSoapDO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TrackerFieldSoapDO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void deleteFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void copyWorkflowTransitionsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactDataCompletedEventHandler(object sender, getArtifactDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactSoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactSoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getTrackerDataCompletedEventHandler(object sender, getTrackerDataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTrackerDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTrackerDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TrackerSoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TrackerSoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createArtifactCompletedEventHandler(object sender, createArtifactCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactSoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactSoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setArtifactDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setTrackerDataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addDateFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void deleteArtifactCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void moveArtifactCompletedEventHandler(object sender, moveArtifactCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class moveArtifactCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal moveArtifactCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactSoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactSoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getParentDependencyListCompletedEventHandler(object sender, getParentDependencyListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getParentDependencyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getParentDependencyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDependencySoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDependencySoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getChildDependencyListCompletedEventHandler(object sender, getChildDependencyListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getChildDependencyListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getChildDependencyListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDependencySoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDependencySoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setArtifactRankCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createTrackerCompletedEventHandler(object sender, createTrackerCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createTrackerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createTrackerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TrackerSoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TrackerSoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addSeparatorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getTrackerListCompletedEventHandler(object sender, getTrackerListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTrackerListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTrackerListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TrackerSoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TrackerSoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setField2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addTextFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addSingleSelectFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addMultiSelectFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addUserSelectFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getFields2CompletedEventHandler(object sender, getFields2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFields2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFields2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TrackerField2SoapDO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TrackerField2SoapDO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactListCompletedEventHandler(object sender, getArtifactListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactSoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactSoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactDetailListCompletedEventHandler(object sender, getArtifactDetailListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactDetailListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactDetailListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDetailSoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDetailSoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactDetailList2CompletedEventHandler(object sender, getArtifactDetailList2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactDetailList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactDetailList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDetail2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDetail2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void findArtifactsCompletedEventHandler(object sender, findArtifactsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findArtifactsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findArtifactsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactSoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactSoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactData2CompletedEventHandler(object sender, getArtifactData2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactData2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactData2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact2SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact2SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setArtifactData2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createArtifact2CompletedEventHandler(object sender, createArtifact2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createArtifact2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createArtifact2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact2SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact2SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void moveArtifact2CompletedEventHandler(object sender, moveArtifact2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class moveArtifact2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal moveArtifact2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact2SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact2SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getAllowedWorkflowTransitionListCompletedEventHandler(object sender, getAllowedWorkflowTransitionListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getAllowedWorkflowTransitionListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getAllowedWorkflowTransitionListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public WorkflowTransitionSoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((WorkflowTransitionSoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createArtifactDependencyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void removeArtifactDependencyCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getTracker2ListCompletedEventHandler(object sender, getTracker2ListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTracker2ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTracker2ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Tracker2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Tracker2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getTracker2DataCompletedEventHandler(object sender, getTracker2DataCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getTracker2DataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getTracker2DataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Tracker2SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Tracker2SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setTracker2DataCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createTracker2CompletedEventHandler(object sender, createTracker2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createTracker2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createTracker2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Tracker2SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Tracker2SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setField3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addTextField2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addSingleSelectChildFieldCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addSingleSelectField2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addMultiSelectField2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addUserSelectField2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void addDateField2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getFields3CompletedEventHandler(object sender, getFields3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getFields3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getFields3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public TrackerField3SoapDO[] Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((TrackerField3SoapDO[])(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void deleteSeparatorCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getOrderedTrackerFieldsCompletedEventHandler(object sender, getOrderedTrackerFieldsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getOrderedTrackerFieldsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getOrderedTrackerFieldsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public OrderedTrackerFieldSoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((OrderedTrackerFieldSoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void reorderTrackerFieldsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactList3CompletedEventHandler(object sender, getArtifactList3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactList3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactList3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact3SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact3SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactList2CompletedEventHandler(object sender, getArtifactList2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getCrossTrackerArtifactList2CompletedEventHandler(object sender, getCrossTrackerArtifactList2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCrossTrackerArtifactList2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCrossTrackerArtifactList2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDetail3SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDetail3SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getCrossTrackerArtifactListCompletedEventHandler(object sender, getCrossTrackerArtifactListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getCrossTrackerArtifactListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getCrossTrackerArtifactListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDetail2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDetail2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactDetailList3CompletedEventHandler(object sender, getArtifactDetailList3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactDetailList3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactDetailList3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDetail3SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDetail3SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void findArtifacts3CompletedEventHandler(object sender, findArtifacts3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findArtifacts3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findArtifacts3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact3SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact3SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void findArtifacts2CompletedEventHandler(object sender, findArtifacts2CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class findArtifacts2CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal findArtifacts2CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getArtifactData3CompletedEventHandler(object sender, getArtifactData3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getArtifactData3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getArtifactData3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact3SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact3SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void setArtifactData3CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void createArtifact3CompletedEventHandler(object sender, createArtifact3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class createArtifact3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal createArtifact3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact3SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact3SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void moveArtifact3CompletedEventHandler(object sender, moveArtifact3CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class moveArtifact3CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal moveArtifact3CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public Artifact3SoapDO Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((Artifact3SoapDO)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void copyWorkflowTransitions2CompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getChildDependency2ListCompletedEventHandler(object sender, getChildDependency2ListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getChildDependency2ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getChildDependency2ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDependency2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDependency2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void getParentDependency2ListCompletedEventHandler(object sender, getParentDependency2ListCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class getParentDependency2ListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal getParentDependency2ListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public ArtifactDependency2SoapList Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((ArtifactDependency2SoapList)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void reorderTrackersCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
