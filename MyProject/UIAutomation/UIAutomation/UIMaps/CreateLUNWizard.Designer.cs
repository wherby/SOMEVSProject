// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace UIAutomation.UIMaps.CreateLUNWizardClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class CreateLUNWizard
    {
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinTitleBar uICreateLUNTitleBar = this.UICreateLUNWindow.UICreateLUNTitleBar;
            WinRowHeader uIItemRowHeader = this.UICreateLUNWindow.UIStoragePoolTreeListTree.UIHeaderPanelGroup.UIItemRowHeader;
            WinRowHeader uIItemRowHeader1 = this.UICreateLUNWindow.UIStoragePoolTreeListTree.UIHeaderPanelGroup.UIItemRowHeader1;
            WinTreeItem uINode2TreeItem = this.UICreateLUNWindow.UIDataPanelGroup.UINode2TreeItem;
            WinButton uINextButton = this.UICreateLUNWindow.UIWizardTitleClient.UINextButton;
            WinEdit uILunNameComboBoxEditEdit = this.UICreateLUNWindow.UITableLayoutPanel1Window.UILunNameComboBoxEditEdit;
            WinEdit uIItemEdit = this.UICreateLUNWindow.UITableLayoutPanel1Window.UIItemEdit;
            WinButton uIOpenButton = this.UICreateLUNWindow.UITestComboBox.UIOpenButton;
            WinButton uICloseButton = this.UICreateLUNWindow.UITestComboBox.UICloseButton;
            WinEdit uILunDescriptionComboBEdit = this.UICreateLUNWindow.UITableLayoutPanel1Window.UILunDescriptionComboBEdit;
            WinEdit uIItemEdit1 = this.UICreateLUNWindow.UITableLayoutPanel1Window.UIItemEdit1;
            WinButton uIOpenButton1 = this.UICreateLUNWindow.UITestComboBox1.UIOpenButton;
            WinListItem uINotApplicableListItem = this.UIItemWindow.UIItemList.UINotApplicableListItem;
            WinEdit uILunSizeTextEditEdit = this.UICreateLUNWindow.UITableLayoutPanel1Window.UILunSizeTextEditEdit;
            WinClient uITableLayoutPanel1Client = this.UICreateLUNWindow.UITableLayoutPanel1Window.UITableLayoutPanel1Client;
            WinEdit uIItem1024Edit = this.UICreateLUNWindow.UITableLayoutPanel1Window.UIItem1024Edit;
            WinButton uIOpenButton2 = this.UICreateLUNWindow.UIMBComboBox.UIOpenButton;
            WinList uIMBList = this.UIItemWindow1.UIItemClient.UIMBList;
            WinList uIGBList = this.UIItemWindow1.UIItemClient.UIGBList;
            WinButton uIOpenButton3 = this.UICreateLUNWindow.UIAutoComboBox.UIOpenButton;
            WinList uISPAList = this.UIItemWindow2.UIItemClient.UISPAList;
            WinList uISPBList = this.UIItemWindow2.UIItemClient.UISPBList;
            WinList uIAutoList = this.UIItemWindow2.UIItemClient.UIAutoList;
            WinRadioButton uIThickRadioButton = this.UICreateLUNWindow.UIProvisioningTypeRadiList.UIThickRadioButton;
            WinRadioButton uIThinRadioButton = this.UICreateLUNWindow.UIProvisioningTypeRadiList1.UIThinRadioButton;
            WinRowHeader uIItemRowHeader2 = this.UICreateLUNWindow.UIReviewDataVGridContrTable.UIHeaderPanelClient.UIItemRowHeader;
            WinClient uIHeaderPanelClient1 = this.UICreateLUNWindow.UIReviewDataVGridContrTable.UIHeaderPanelClient1;
            WinRowHeader uIItemRowHeader11 = this.UICreateLUNWindow.UIReviewDataVGridContrTable.UIHeaderPanelClient.UIItemRowHeader1;
            WinRowHeader uIItemRowHeader21 = this.UICreateLUNWindow.UIReviewDataVGridContrTable.UIHeaderPanelClient.UIItemRowHeader2;
            WinRowHeader uIItemRowHeader3 = this.UICreateLUNWindow.UIReviewDataVGridContrTable.UIHeaderPanelClient.UIItemRowHeader3;
            WinRowHeader uIItemRowHeader4 = this.UICreateLUNWindow.UIReviewDataVGridContrTable.UIHeaderPanelClient.UIItemRowHeader4;
            WinCell uICreatestorageLunCell = this.UICreateLUNWindow.UIProgressTreeListWindow.UINode0TreeItem.UICreatestorageLunCell;
            WinCell uIItem10Cell = this.UICreateLUNWindow.UIProgressTreeListWindow.UINode0TreeItem.UIItem10Cell;
            WinRowHeader uIItemRowHeader5 = this.UICreateLUNWindow.UITableLayoutPanel1Window1.UIProgressTreeListTree.UIHeaderPanelGroup.UIItemRowHeader;
            WinRowHeader uIItemRowHeader12 = this.UICreateLUNWindow.UITableLayoutPanel1Window1.UIProgressTreeListTree.UIHeaderPanelGroup.UIItemRowHeader1;
            WinCell uICompletedCell = this.UICreateLUNWindow.UIProgressTreeListWindow.UINode0TreeItem.UICompletedCell;
            WinButton uIFinishButton = this.UICreateLUNWindow.UIWizardTitleClient.UIFinishButton;
            #endregion

            // Click 'Create LUN' title bar
            Mouse.Click(uICreateLUNTitleBar, new Point(288, 8));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader, new Point(33, 10));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader1, new Point(31, 9));

            // Click 'Node2' tree item
            Mouse.Click(uINode2TreeItem, new Point(11, 7));

            // Click '&Next >' button
            Mouse.Click(uINextButton, new Point(37, 8));

            // Click 'lunNameComboBoxEdit' text box
            Mouse.Click(uILunNameComboBoxEditEdit, new Point(35, 7));

            // Type 'test' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.RecordedMethod1Params.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'Open' button
            Mouse.Click(uIOpenButton, new Point(10, 10));

            // Click 'Close' button
            Mouse.Click(uICloseButton, new Point(10, 10));

            // Click 'lunDescriptionComboBoxEdit' text box
            Mouse.Click(uILunDescriptionComboBEdit, new Point(101, 1));

            // Type 'test' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit1, this.RecordedMethod1Params.UIItemEdit1SendKeys, ModifierKeys.None);

            // Click 'Open' button
            Mouse.Click(uIOpenButton1, new Point(5, 7));

            // Click '<Not Applicable>' list item
            Mouse.Click(uINotApplicableListItem, new Point(219, 0));

            // Move 'lunSizeTextEdit' text box from (59, 4) to 'tableLayoutPanel1' client (81, 118)
            uITableLayoutPanel1Client.EnsureClickable(new Point(81, 118));
            Mouse.StartDragging(uILunSizeTextEditEdit, new Point(59, 4));
            Mouse.StopDragging(uITableLayoutPanel1Client, new Point(81, 118));

            // Type '2048' in '1024' text box
            Keyboard.SendKeys(uIItem1024Edit, this.RecordedMethod1Params.UIItem1024EditSendKeys, ModifierKeys.None);

            // Click 'Open' button
            Mouse.Click(uIOpenButton2, new Point(8, 7));

            // Select '' in 'MB' list box
            uIMBList.SelectedItemsAsString = this.RecordedMethod1Params.UIMBListSelectedItemsAsString;

            // Click 'Open' button
            Mouse.Click(uIOpenButton2, new Point(8, 12));

            // Select '' in 'GB' list box
            uIGBList.SelectedItemsAsString = this.RecordedMethod1Params.UIGBListSelectedItemsAsString;

            // Click 'Open' button
            Mouse.Click(uIOpenButton3, new Point(6, 8));

            // Select '' in 'SPA' list box
            uISPAList.SelectedItemsAsString = this.RecordedMethod1Params.UISPAListSelectedItemsAsString;

            // Click 'Open' button
            Mouse.Click(uIOpenButton3, new Point(5, 9));

            // Select '' in 'SPB' list box
            uISPBList.SelectedItemsAsString = this.RecordedMethod1Params.UISPBListSelectedItemsAsString;

            // Click 'Open' button
            Mouse.Click(uIOpenButton3, new Point(4, 12));

            // Select '' in 'Auto' list box
            uIAutoList.SelectedItemsAsString = this.RecordedMethod1Params.UIAutoListSelectedItemsAsString;

            // Click 'Thick' radio button
            Mouse.Click(uIThickRadioButton, new Point(4, 7));

            // Click 'Thin' radio button
            Mouse.Click(uIThinRadioButton, new Point(7, 6));

            // Click '&Next >' button
            Mouse.Click(uINextButton, new Point(28, 8));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader2, new Point(22, 11));

            // Double-Click 'Header Panel' client
            Mouse.DoubleClick(uIHeaderPanelClient1, new Point(279, 35));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader2, new Point(127, 6));

            // Click 'Header Panel' client
            Mouse.Click(uIHeaderPanelClient1, new Point(276, 34));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader11, new Point(148, 16));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader21, new Point(88, 12));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader3, new Point(54, 13));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader2, new Point(30, 12));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader4, new Point(37, 13));

            // Click '&Next >' button
            Mouse.Click(uINextButton, new Point(41, 12));

            // Click 'Create storage Lun' cell
            Mouse.Click(uICreatestorageLunCell, new Point(65, 10));

            // Click '10%' cell
            Mouse.Click(uIItem10Cell, new Point(18, 11));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader5, new Point(180, 13));

            // Click 'Unknown Name' row header
            Mouse.Click(uIItemRowHeader12, new Point(36, 16));

            // Click 'Create storage Lun' cell
            Mouse.Click(uICreatestorageLunCell, new Point(148, 7));

            // Click 'Completed' cell
            Mouse.Click(uICompletedCell, new Point(27, 9));

            // Click '&Next >' button
            Mouse.Click(uINextButton, new Point(26, 10));

            // Click '&Finish' button
            Mouse.Click(uIFinishButton, new Point(25, 12));
        }
        
        #region Properties
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UICreateLUNWindow UICreateLUNWindow
        {
            get
            {
                if ((this.mUICreateLUNWindow == null))
                {
                    this.mUICreateLUNWindow = new UICreateLUNWindow();
                }
                return this.mUICreateLUNWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UICreateLUNWindow mUICreateLUNWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'test' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "test";
        
        /// <summary>
        /// Type 'test' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEdit1SendKeys = "test";
        
        /// <summary>
        /// Type '2048' in '1024' text box
        /// </summary>
        public string UIItem1024EditSendKeys = "2048";
        
        /// <summary>
        /// Select '' in 'MB' list box
        /// </summary>
        public string UIMBListSelectedItemsAsString = "";
        
        /// <summary>
        /// Select '' in 'GB' list box
        /// </summary>
        public string UIGBListSelectedItemsAsString = "";
        
        /// <summary>
        /// Select '' in 'SPA' list box
        /// </summary>
        public string UISPAListSelectedItemsAsString = "";
        
        /// <summary>
        /// Select '' in 'SPB' list box
        /// </summary>
        public string UISPBListSelectedItemsAsString = "";
        
        /// <summary>
        /// Select '' in 'Auto' list box
        /// </summary>
        public string UIAutoListSelectedItemsAsString = "";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICreateLUNWindow : WinWindow
    {
        
        public UICreateLUNWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Create LUN";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public UICreateLUNTitleBar UICreateLUNTitleBar
        {
            get
            {
                if ((this.mUICreateLUNTitleBar == null))
                {
                    this.mUICreateLUNTitleBar = new UICreateLUNTitleBar(this);
                }
                return this.mUICreateLUNTitleBar;
            }
        }
        
        public UIStoragePoolTreeListTree UIStoragePoolTreeListTree
        {
            get
            {
                if ((this.mUIStoragePoolTreeListTree == null))
                {
                    this.mUIStoragePoolTreeListTree = new UIStoragePoolTreeListTree(this);
                }
                return this.mUIStoragePoolTreeListTree;
            }
        }
        
        public UIDataPanelGroup UIDataPanelGroup
        {
            get
            {
                if ((this.mUIDataPanelGroup == null))
                {
                    this.mUIDataPanelGroup = new UIDataPanelGroup(this);
                }
                return this.mUIDataPanelGroup;
            }
        }
        
        public UIWizardTitleClient UIWizardTitleClient
        {
            get
            {
                if ((this.mUIWizardTitleClient == null))
                {
                    this.mUIWizardTitleClient = new UIWizardTitleClient(this);
                }
                return this.mUIWizardTitleClient;
            }
        }
        
        public UITableLayoutPanel1Window UITableLayoutPanel1Window
        {
            get
            {
                if ((this.mUITableLayoutPanel1Window == null))
                {
                    this.mUITableLayoutPanel1Window = new UITableLayoutPanel1Window(this);
                }
                return this.mUITableLayoutPanel1Window;
            }
        }
        
        public UITestComboBox UITestComboBox
        {
            get
            {
                if ((this.mUITestComboBox == null))
                {
                    this.mUITestComboBox = new UITestComboBox(this);
                }
                return this.mUITestComboBox;
            }
        }
        
        public UITestComboBox1 UITestComboBox1
        {
            get
            {
                if ((this.mUITestComboBox1 == null))
                {
                    this.mUITestComboBox1 = new UITestComboBox1(this);
                }
                return this.mUITestComboBox1;
            }
        }
        
        public UIMBComboBox UIMBComboBox
        {
            get
            {
                if ((this.mUIMBComboBox == null))
                {
                    this.mUIMBComboBox = new UIMBComboBox(this);
                }
                return this.mUIMBComboBox;
            }
        }
        
        public UIAutoComboBox UIAutoComboBox
        {
            get
            {
                if ((this.mUIAutoComboBox == null))
                {
                    this.mUIAutoComboBox = new UIAutoComboBox(this);
                }
                return this.mUIAutoComboBox;
            }
        }
        
        public UIProvisioningTypeRadiList UIProvisioningTypeRadiList
        {
            get
            {
                if ((this.mUIProvisioningTypeRadiList == null))
                {
                    this.mUIProvisioningTypeRadiList = new UIProvisioningTypeRadiList(this);
                }
                return this.mUIProvisioningTypeRadiList;
            }
        }
        
        public UIProvisioningTypeRadiList1 UIProvisioningTypeRadiList1
        {
            get
            {
                if ((this.mUIProvisioningTypeRadiList1 == null))
                {
                    this.mUIProvisioningTypeRadiList1 = new UIProvisioningTypeRadiList1(this);
                }
                return this.mUIProvisioningTypeRadiList1;
            }
        }
        
        public UIReviewDataVGridContrTable UIReviewDataVGridContrTable
        {
            get
            {
                if ((this.mUIReviewDataVGridContrTable == null))
                {
                    this.mUIReviewDataVGridContrTable = new UIReviewDataVGridContrTable(this);
                }
                return this.mUIReviewDataVGridContrTable;
            }
        }
        
        public UIProgressTreeListWindow UIProgressTreeListWindow
        {
            get
            {
                if ((this.mUIProgressTreeListWindow == null))
                {
                    this.mUIProgressTreeListWindow = new UIProgressTreeListWindow(this);
                }
                return this.mUIProgressTreeListWindow;
            }
        }
        
        public UITableLayoutPanel1Window1 UITableLayoutPanel1Window1
        {
            get
            {
                if ((this.mUITableLayoutPanel1Window1 == null))
                {
                    this.mUITableLayoutPanel1Window1 = new UITableLayoutPanel1Window1(this);
                }
                return this.mUITableLayoutPanel1Window1;
            }
        }
        #endregion
        
        #region Fields
        private UICreateLUNTitleBar mUICreateLUNTitleBar;
        
        private UIStoragePoolTreeListTree mUIStoragePoolTreeListTree;
        
        private UIDataPanelGroup mUIDataPanelGroup;
        
        private UIWizardTitleClient mUIWizardTitleClient;
        
        private UITableLayoutPanel1Window mUITableLayoutPanel1Window;
        
        private UITestComboBox mUITestComboBox;
        
        private UITestComboBox1 mUITestComboBox1;
        
        private UIMBComboBox mUIMBComboBox;
        
        private UIAutoComboBox mUIAutoComboBox;
        
        private UIProvisioningTypeRadiList mUIProvisioningTypeRadiList;
        
        private UIProvisioningTypeRadiList1 mUIProvisioningTypeRadiList1;
        
        private UIReviewDataVGridContrTable mUIReviewDataVGridContrTable;
        
        private UIProgressTreeListWindow mUIProgressTreeListWindow;
        
        private UITableLayoutPanel1Window1 mUITableLayoutPanel1Window1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UICreateLUNTitleBar : WinTitleBar
    {
        
        public UICreateLUNTitleBar(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStoragePoolTreeListTree : WinTree
    {
        
        public UIStoragePoolTreeListTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public UIHeaderPanelGroup UIHeaderPanelGroup
        {
            get
            {
                if ((this.mUIHeaderPanelGroup == null))
                {
                    this.mUIHeaderPanelGroup = new UIHeaderPanelGroup(this);
                }
                return this.mUIHeaderPanelGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIHeaderPanelGroup mUIHeaderPanelGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHeaderPanelGroup : WinGroup
    {
        
        public UIHeaderPanelGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        
        public WinRowHeader UIItemRowHeader1
        {
            get
            {
                if ((this.mUIItemRowHeader1 == null))
                {
                    this.mUIItemRowHeader1 = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader1.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader1;
            }
        }
        #endregion
        
        #region Fields
        private WinRowHeader mUIItemRowHeader;
        
        private WinRowHeader mUIItemRowHeader1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIDataPanelGroup : WinGroup
    {
        
        public UIDataPanelGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Data Panel";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UINode2TreeItem
        {
            get
            {
                if ((this.mUINode2TreeItem == null))
                {
                    this.mUINode2TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUINode2TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "Node2";
                    this.mUINode2TreeItem.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUINode2TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUINode2TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIWizardTitleClient : WinClient
    {
        
        public UIWizardTitleClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Wizard Title";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinButton UINextButton
        {
            get
            {
                if ((this.mUINextButton == null))
                {
                    this.mUINextButton = new WinButton(this);
                    #region Search Criteria
                    this.mUINextButton.SearchProperties[WinButton.PropertyNames.Name] = "&Next >";
                    this.mUINextButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUINextButton;
            }
        }
        
        public WinButton UIFinishButton
        {
            get
            {
                if ((this.mUIFinishButton == null))
                {
                    this.mUIFinishButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIFinishButton.SearchProperties[WinButton.PropertyNames.Name] = "&Finish";
                    this.mUIFinishButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIFinishButton;
            }
        }
        
        public WinButton UIBackButton
        {
            get
            {
                if ((this.mUIBackButton == null))
                {
                    this.mUIBackButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIBackButton.SearchProperties[WinButton.PropertyNames.Name] = "< &Back";
                    this.mUIBackButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIBackButton;
            }
        }
        
        public WinButton UICancelButton
        {
            get
            {
                if ((this.mUICancelButton == null))
                {
                    this.mUICancelButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICancelButton.SearchProperties[WinButton.PropertyNames.Name] = "Cancel";
                    this.mUICancelButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUICancelButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUINextButton;
        
        private WinButton mUIFinishButton;
        
        private WinButton mUIBackButton;
        
        private WinButton mUICancelButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITableLayoutPanel1Window : WinWindow
    {
        
        public UITableLayoutPanel1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tableLayoutPanel1";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinEdit UILunNameComboBoxEditEdit
        {
            get
            {
                if ((this.mUILunNameComboBoxEditEdit == null))
                {
                    this.mUILunNameComboBoxEditEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUILunNameComboBoxEditEdit.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUILunNameComboBoxEditEdit;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        
        public WinEdit UILunDescriptionComboBEdit
        {
            get
            {
                if ((this.mUILunDescriptionComboBEdit == null))
                {
                    this.mUILunDescriptionComboBEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUILunDescriptionComboBEdit.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUILunDescriptionComboBEdit;
            }
        }
        
        public WinEdit UIItemEdit1
        {
            get
            {
                if ((this.mUIItemEdit1 == null))
                {
                    this.mUIItemEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit1.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemEdit1;
            }
        }
        
        public WinEdit UILunSizeTextEditEdit
        {
            get
            {
                if ((this.mUILunSizeTextEditEdit == null))
                {
                    this.mUILunSizeTextEditEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUILunSizeTextEditEdit.SearchProperties[WinEdit.PropertyNames.Name] = "1024";
                    this.mUILunSizeTextEditEdit.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUILunSizeTextEditEdit;
            }
        }
        
        public WinClient UITableLayoutPanel1Client
        {
            get
            {
                if ((this.mUITableLayoutPanel1Client == null))
                {
                    this.mUITableLayoutPanel1Client = new WinClient(this);
                    #region Search Criteria
                    this.mUITableLayoutPanel1Client.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUITableLayoutPanel1Client;
            }
        }
        
        public WinEdit UIItem1024Edit
        {
            get
            {
                if ((this.mUIItem1024Edit == null))
                {
                    this.mUIItem1024Edit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItem1024Edit.SearchProperties[WinEdit.PropertyNames.Name] = "1024";
                    this.mUIItem1024Edit.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItem1024Edit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUILunNameComboBoxEditEdit;
        
        private WinEdit mUIItemEdit;
        
        private WinEdit mUILunDescriptionComboBEdit;
        
        private WinEdit mUIItemEdit1;
        
        private WinEdit mUILunSizeTextEditEdit;
        
        private WinClient mUITableLayoutPanel1Client;
        
        private WinEdit mUIItem1024Edit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITestComboBox : WinComboBox
    {
        
        public UITestComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "test";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        
        public WinButton UICloseButton
        {
            get
            {
                if ((this.mUICloseButton == null))
                {
                    this.mUICloseButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICloseButton.SearchProperties[WinButton.PropertyNames.Name] = "Close";
                    this.mUICloseButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUICloseButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        
        private WinButton mUICloseButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITestComboBox1 : WinComboBox
    {
        
        public UITestComboBox1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "test";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMBComboBox : WinComboBox
    {
        
        public UIMBComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "MB";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIAutoComboBox : WinComboBox
    {
        
        public UIAutoComboBox(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinComboBox.PropertyNames.Name] = "Auto";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIProvisioningTypeRadiList : WinList
    {
        
        public UIProvisioningTypeRadiList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Thin";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIThickRadioButton
        {
            get
            {
                if ((this.mUIThickRadioButton == null))
                {
                    this.mUIThickRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIThickRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Thick";
                    this.mUIThickRadioButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIThickRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIThickRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIProvisioningTypeRadiList1 : WinList
    {
        
        public UIProvisioningTypeRadiList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "Thick";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinRadioButton UIThinRadioButton
        {
            get
            {
                if ((this.mUIThinRadioButton == null))
                {
                    this.mUIThinRadioButton = new WinRadioButton(this);
                    #region Search Criteria
                    this.mUIThinRadioButton.SearchProperties[WinRadioButton.PropertyNames.Name] = "Thin";
                    this.mUIThinRadioButton.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIThinRadioButton;
            }
        }
        #endregion
        
        #region Fields
        private WinRadioButton mUIThinRadioButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIReviewDataVGridContrTable : WinTable
    {
        
        public UIReviewDataVGridContrTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public UIHeaderPanelClient UIHeaderPanelClient
        {
            get
            {
                if ((this.mUIHeaderPanelClient == null))
                {
                    this.mUIHeaderPanelClient = new UIHeaderPanelClient(this);
                }
                return this.mUIHeaderPanelClient;
            }
        }
        
        public WinClient UIHeaderPanelClient1
        {
            get
            {
                if ((this.mUIHeaderPanelClient1 == null))
                {
                    this.mUIHeaderPanelClient1 = new WinClient(this);
                    #region Search Criteria
                    this.mUIHeaderPanelClient1.SearchProperties[WinControl.PropertyNames.Name] = "Header Panel";
                    this.mUIHeaderPanelClient1.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIHeaderPanelClient1;
            }
        }
        #endregion
        
        #region Fields
        private UIHeaderPanelClient mUIHeaderPanelClient;
        
        private WinClient mUIHeaderPanelClient1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHeaderPanelClient : WinClient
    {
        
        public UIHeaderPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        
        public WinRowHeader UIItemRowHeader1
        {
            get
            {
                if ((this.mUIItemRowHeader1 == null))
                {
                    this.mUIItemRowHeader1 = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader1.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader1;
            }
        }
        
        public WinRowHeader UIItemRowHeader2
        {
            get
            {
                if ((this.mUIItemRowHeader2 == null))
                {
                    this.mUIItemRowHeader2 = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader2.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader2;
            }
        }
        
        public WinRowHeader UIItemRowHeader3
        {
            get
            {
                if ((this.mUIItemRowHeader3 == null))
                {
                    this.mUIItemRowHeader3 = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader3.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader3;
            }
        }
        
        public WinRowHeader UIItemRowHeader4
        {
            get
            {
                if ((this.mUIItemRowHeader4 == null))
                {
                    this.mUIItemRowHeader4 = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader4.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader4;
            }
        }
        #endregion
        
        #region Fields
        private WinRowHeader mUIItemRowHeader;
        
        private WinRowHeader mUIItemRowHeader1;
        
        private WinRowHeader mUIItemRowHeader2;
        
        private WinRowHeader mUIItemRowHeader3;
        
        private WinRowHeader mUIItemRowHeader4;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIProgressTreeListWindow : WinWindow
    {
        
        public UIProgressTreeListWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "progressTreeList";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public UINode0TreeItem UINode0TreeItem
        {
            get
            {
                if ((this.mUINode0TreeItem == null))
                {
                    this.mUINode0TreeItem = new UINode0TreeItem(this);
                }
                return this.mUINode0TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private UINode0TreeItem mUINode0TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UINode0TreeItem : WinTreeItem
    {
        
        public UINode0TreeItem(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTreeItem.PropertyNames.Name] = "Node0";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinCell UICreatestorageLunCell
        {
            get
            {
                if ((this.mUICreatestorageLunCell == null))
                {
                    this.mUICreatestorageLunCell = new WinCell(this);
                    #region Search Criteria
                    this.mUICreatestorageLunCell.SearchProperties[WinCell.PropertyNames.Value] = "Create storage Lun";
                    this.mUICreatestorageLunCell.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICreatestorageLunCell.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUICreatestorageLunCell;
            }
        }
        
        public WinCell UIItem10Cell
        {
            get
            {
                if ((this.mUIItem10Cell == null))
                {
                    this.mUIItem10Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem10Cell.SearchProperties[WinCell.PropertyNames.Value] = "10%";
                    this.mUIItem10Cell.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUIItem10Cell.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItem10Cell;
            }
        }
        
        public WinCell UICompletedCell
        {
            get
            {
                if ((this.mUICompletedCell == null))
                {
                    this.mUICompletedCell = new WinCell(this);
                    #region Search Criteria
                    this.mUICompletedCell.SearchProperties[WinCell.PropertyNames.Value] = "Completed";
                    this.mUICompletedCell.SearchConfigurations.Add(SearchConfiguration.ExpandWhileSearching);
                    this.mUICompletedCell.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUICompletedCell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUICreatestorageLunCell;
        
        private WinCell mUIItem10Cell;
        
        private WinCell mUICompletedCell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UITableLayoutPanel1Window1 : WinWindow
    {
        
        public UITableLayoutPanel1Window1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "tableLayoutPanel1";
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public UIProgressTreeListTree UIProgressTreeListTree
        {
            get
            {
                if ((this.mUIProgressTreeListTree == null))
                {
                    this.mUIProgressTreeListTree = new UIProgressTreeListTree(this);
                }
                return this.mUIProgressTreeListTree;
            }
        }
        #endregion
        
        #region Fields
        private UIProgressTreeListTree mUIProgressTreeListTree;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIProgressTreeListTree : WinTree
    {
        
        public UIProgressTreeListTree(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public UIHeaderPanelGroup1 UIHeaderPanelGroup
        {
            get
            {
                if ((this.mUIHeaderPanelGroup == null))
                {
                    this.mUIHeaderPanelGroup = new UIHeaderPanelGroup1(this);
                }
                return this.mUIHeaderPanelGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIHeaderPanelGroup1 mUIHeaderPanelGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHeaderPanelGroup1 : WinGroup
    {
        
        public UIHeaderPanelGroup1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Create LUN");
            #endregion
        }
        
        #region Properties
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        
        public WinRowHeader UIItemRowHeader1
        {
            get
            {
                if ((this.mUIItemRowHeader1 == null))
                {
                    this.mUIItemRowHeader1 = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader1.WindowTitles.Add("Create LUN");
                    #endregion
                }
                return this.mUIItemRowHeader1;
            }
        }
        #endregion
        
        #region Fields
        private WinRowHeader mUIItemRowHeader;
        
        private WinRowHeader mUIItemRowHeader1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UIItemList UIItemList
        {
            get
            {
                if ((this.mUIItemList == null))
                {
                    this.mUIItemList = new UIItemList(this);
                }
                return this.mUIItemList;
            }
        }
        #endregion
        
        #region Fields
        private UIItemList mUIItemList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemList : WinList
    {
        
        public UIItemList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinListItem UINotApplicableListItem
        {
            get
            {
                if ((this.mUINotApplicableListItem == null))
                {
                    this.mUINotApplicableListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUINotApplicableListItem.SearchProperties[WinListItem.PropertyNames.Name] = "<Not Applicable>";
                    #endregion
                }
                return this.mUINotApplicableListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUINotApplicableListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "MB";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinList UIMBList
        {
            get
            {
                if ((this.mUIMBList == null))
                {
                    this.mUIMBList = new WinList(this);
                    #region Search Criteria
                    this.mUIMBList.SearchProperties[WinList.PropertyNames.Name] = "MB";
                    #endregion
                }
                return this.mUIMBList;
            }
        }
        
        public WinList UIGBList
        {
            get
            {
                if ((this.mUIGBList == null))
                {
                    this.mUIGBList = new WinList(this);
                    #region Search Criteria
                    this.mUIGBList.SearchProperties[WinList.PropertyNames.Name] = "GB";
                    #endregion
                }
                return this.mUIGBList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIMBList;
        
        private WinList mUIGBList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "SPA";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIItemClient1 UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient1(this);
                }
                return this.mUIItemClient;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient1 mUIItemClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIItemClient1 : WinClient
    {
        
        public UIItemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinList UISPAList
        {
            get
            {
                if ((this.mUISPAList == null))
                {
                    this.mUISPAList = new WinList(this);
                    #region Search Criteria
                    this.mUISPAList.SearchProperties[WinList.PropertyNames.Name] = "SPA";
                    #endregion
                }
                return this.mUISPAList;
            }
        }
        
        public WinList UISPBList
        {
            get
            {
                if ((this.mUISPBList == null))
                {
                    this.mUISPBList = new WinList(this);
                    #region Search Criteria
                    this.mUISPBList.SearchProperties[WinList.PropertyNames.Name] = "SPB";
                    #endregion
                }
                return this.mUISPBList;
            }
        }
        
        public WinList UIAutoList
        {
            get
            {
                if ((this.mUIAutoList == null))
                {
                    this.mUIAutoList = new WinList(this);
                    #region Search Criteria
                    this.mUIAutoList.SearchProperties[WinList.PropertyNames.Name] = "Auto";
                    #endregion
                }
                return this.mUIAutoList;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUISPAList;
        
        private WinList mUISPBList;
        
        private WinList mUIAutoList;
        #endregion
    }
}
