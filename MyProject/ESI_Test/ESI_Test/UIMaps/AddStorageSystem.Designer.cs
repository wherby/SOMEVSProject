// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ESI_Test.UIMaps.AddStorageSystemClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public partial class AddStorageSystem
    {
        
        /// <summary>
        /// addStorageSystem - Use 'addStorageSystemParams' to pass parameters into this method.
        /// </summary>
        public void addStorageSystem()
        {
            #region Variable Declarations
            WinButton uIAddStorageSystemButton = this.UIEMCStorageIntegratorWindow.UIEMCStorageIntegratorWindow1.UIActionsPane.UIAddStorageSystemButton;
            WinEdit uISystemNameTextEditEdit = this.UIAddStorageSystemWindow.UIPanelControl1Pane.UISystemNameTextEditEdit;
            WinEdit uIItemEdit = this.UIAddStorageSystemWindow.UIPanelControl1Pane.UIItemEdit;
            WinTable uICreationParametersVGTable = this.UIAddStorageSystemWindow.UIAddStorageSystemClient.UICreationParametersVGTable;
            WinEdit uIEditingcontrolEdit = this.UIAddStorageSystemWindow.UICreationParametersVGTable.UIEditingcontrolEdit;
            WinEdit uICreationParametersVGEdit = this.UIAddStorageSystemWindow.UICreationParametersVGTable.UICreationParametersVGEdit;
            WinClient uIHeaderPanelClient = this.UIAddStorageSystemWindow.UICreationParametersVGTable.UIHeaderPanelClient;
            WinEdit uIPasswordTextEditEdit = this.UIAddStorageSystemWindow.UICreationParametersVGTable.UIPasswordTextEditEdit;
            WinEdit uIEditingcontrolEdit1 = this.UIAddStorageSystemWindow.UICreationParametersVGTable.UIEditingcontrolEdit1;
            WinEdit uIEditingcontrolEdit2 = this.UIAddStorageSystemWindow.UICreationParametersVGTable.UIEditingcontrolEdit2;
            WinButton uIAddButton = this.UIAddStorageSystemWindow.UIAddStorageSystemClient.UIAddButton;
            #endregion

            // Click 'Add Storage System' button
            Mouse.Click(uIAddStorageSystemButton, new Point(62, 15));

            // Click 'systemNameTextEdit' text box
            Mouse.Click(uISystemNameTextEditEdit, new Point(252, 7));

            // Type '176{Tab}' in 'Unknown Name' text box
            Keyboard.SendKeys(uIItemEdit, this.addStorageSystemParams.UIItemEditSendKeys, ModifierKeys.None);

            // Type '{Tab}g' in 'creationParametersVGridControl' table
            Keyboard.SendKeys(uICreationParametersVGTable, this.addStorageSystemParams.UICreationParametersVGTableSendKeys, ModifierKeys.None);

            // Type 'gadmin' in 'Editing control' text box
            uIEditingcontrolEdit.Text = this.addStorageSystemParams.UIEditingcontrolEditText;

            // Type '{Tab}' in 'Editing control' text box
            Keyboard.SendKeys(uIEditingcontrolEdit, this.addStorageSystemParams.UIEditingcontrolEditSendKeys, ModifierKeys.None);

            // Type '********' in 'creationParametersVGridControl' text box
            Keyboard.SendKeys(uICreationParametersVGEdit, this.addStorageSystemParams.UICreationParametersVGEditSendKeys, true);

            // Last mouse action was not recorded.

            // Click 'Header Panel' client
            Mouse.Click(uIHeaderPanelClient, new Point(317, 66));

            // Click 'PasswordTextEdit' text box
            Mouse.Click(uIPasswordTextEditEdit, new Point(59, 7));

            // Type '{Tab}' in 'creationParametersVGridControl' text box
            Keyboard.SendKeys(uICreationParametersVGEdit, this.addStorageSystemParams.UICreationParametersVGEditSendKeys1, ModifierKeys.None);

            // Type '10.5.223.176' in 'Editing control' text box
            uIEditingcontrolEdit1.Text = this.addStorageSystemParams.UIEditingcontrolEdit1Text;

            // Type '{Tab}' in 'Editing control' text box
            Keyboard.SendKeys(uIEditingcontrolEdit1, this.addStorageSystemParams.UIEditingcontrolEdit1SendKeys, ModifierKeys.None);

            // Type '10.5.223.177' in 'Editing control' text box
            uIEditingcontrolEdit2.Text = this.addStorageSystemParams.UIEditingcontrolEdit2Text;

            // Click 'Add' button
            Mouse.Click(uIAddButton, new Point(58, 15));
        }
        
        /// <summary>
        /// SelectSystemType - Use 'SelectSystemTypeParams' to pass parameters into this method.
        /// </summary>
        public void SelectSystemType()
        {
            #region Variable Declarations
            WinButton uIAddStorageSystemButton = this.UIEMCStorageIntegratorWindow.UIEMCStorageIntegratorWindow1.UIActionsPane.UIAddStorageSystemButton;
            WinButton uIOpenButton = this.UIAddStorageSystemWindow.UICLARiiONCX4Client.UIOpenButton;
            WinClient uICLARiiONCX4Client = this.UIAddStorageSystemWindow.UIAddStorageSystemClient.UICLARiiONCX4Client;
            WinText uIVMAXText = this.UIAddStorageSystemWindow.UIVMAXClient.UIVMAXText;
            WinText uIVMAXeText = this.UIAddStorageSystemWindow.UIVMAXeClient.UIVMAXeText;
            WinText uIVNXText = this.UIAddStorageSystemWindow.UIVNXClient.UIVNXText;
            
            #endregion

            // Click 'Add Storage System' button
            Mouse.Click(uIAddStorageSystemButton, new Point(107, 11));

            // Click 'Open' button
            Mouse.Click(uIOpenButton, new Point(5, 10));

            // Type '{Down}' in 'CLARiiON-CX4' client
            Keyboard.SendKeys(uICLARiiONCX4Client, this.SelectSystemTypeParams.UICLARiiONCX4ClientSendKeys, ModifierKeys.None);

            //// Type '{Down}' in 'VMAX' label
            //Keyboard.SendKeys(uIVMAXText, this.SelectSystemTypeParams.UIVMAXTextSendKeys, ModifierKeys.None);

            //// Type '{Down}' in 'VMAXe' label
            //Keyboard.SendKeys(uIVMAXeText, this.SelectSystemTypeParams.UIVMAXeTextSendKeys, ModifierKeys.None);

            //// Type '{Enter}' in 'VNX' label
            //Keyboard.SendKeys(uIVNXText, this.SelectSystemTypeParams.UIVNXTextSendKeys, ModifierKeys.None);
            Mouse.Click(this.UIAddStorageSystemWindow.UIVNXClient.UIVNXText);
        }
        
        #region Properties
        public virtual addStorageSystemParams addStorageSystemParams
        {
            get
            {
                if ((this.maddStorageSystemParams == null))
                {
                    this.maddStorageSystemParams = new addStorageSystemParams();
                }
                return this.maddStorageSystemParams;
            }
        }
        
        public virtual SelectSystemTypeParams SelectSystemTypeParams
        {
            get
            {
                if ((this.mSelectSystemTypeParams == null))
                {
                    this.mSelectSystemTypeParams = new SelectSystemTypeParams();
                }
                return this.mSelectSystemTypeParams;
            }
        }
        
        public UIEMCStorageIntegratorWindow UIEMCStorageIntegratorWindow
        {
            get
            {
                if ((this.mUIEMCStorageIntegratorWindow == null))
                {
                    this.mUIEMCStorageIntegratorWindow = new UIEMCStorageIntegratorWindow();
                }
                return this.mUIEMCStorageIntegratorWindow;
            }
        }
        
        public UIAddStorageSystemWindow UIAddStorageSystemWindow
        {
            get
            {
                if ((this.mUIAddStorageSystemWindow == null))
                {
                    this.mUIAddStorageSystemWindow = new UIAddStorageSystemWindow();
                }
                return this.mUIAddStorageSystemWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow();
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1();
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2();
                }
                return this.mUIItemWindow2;
            }
        }
        #endregion
        
        #region Fields
        private addStorageSystemParams maddStorageSystemParams;
        
        private SelectSystemTypeParams mSelectSystemTypeParams;
        
        private UIEMCStorageIntegratorWindow mUIEMCStorageIntegratorWindow;
        
        private UIAddStorageSystemWindow mUIAddStorageSystemWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UIItemWindow2 mUIItemWindow2;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'addStorageSystem'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class addStorageSystemParams
    {
        
        #region Fields
        /// <summary>
        /// Type '176{Tab}' in 'Unknown Name' text box
        /// </summary>
        public string UIItemEditSendKeys = "176{Tab}";
        
        /// <summary>
        /// Type '{Tab}g' in 'creationParametersVGridControl' table
        /// </summary>
        public string UICreationParametersVGTableSendKeys = "{Tab}g";
        
        /// <summary>
        /// Type 'gadmin' in 'Editing control' text box
        /// </summary>
        public string UIEditingcontrolEditText = "gadmin";
        
        /// <summary>
        /// Type '{Tab}' in 'Editing control' text box
        /// </summary>
        public string UIEditingcontrolEditSendKeys = "{Tab}";
        
        /// <summary>
        /// Type '********' in 'creationParametersVGridControl' text box
        /// </summary>
        public string UICreationParametersVGEditSendKeys = "/UTVHJHwhsrTiDZNhNdCdQ==";
        
        /// <summary>
        /// Type '{Tab}' in 'creationParametersVGridControl' text box
        /// </summary>
        public string UICreationParametersVGEditSendKeys1 = "{Tab}";
        
        /// <summary>
        /// Type '10.5.223.176' in 'Editing control' text box
        /// </summary>
        public string UIEditingcontrolEdit1Text = "10.5.223.176";
        
        /// <summary>
        /// Type '{Tab}' in 'Editing control' text box
        /// </summary>
        public string UIEditingcontrolEdit1SendKeys = "{Tab}";
        
        /// <summary>
        /// Type '10.5.223.177' in 'Editing control' text box
        /// </summary>
        public string UIEditingcontrolEdit2Text = "10.5.223.177";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'SelectSystemType'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class SelectSystemTypeParams
    {
        
        #region Fields
        /// <summary>
        /// Type '{Down}' in 'CLARiiON-CX4' client
        /// </summary>
        public string UICLARiiONCX4ClientSendKeys = "{Down}";
        
        /// <summary>
        /// Type '{Down}' in 'VMAX' label
        /// </summary>
        public string UIVMAXTextSendKeys = "{Down}";
        
        /// <summary>
        /// Type '{Down}' in 'VMAXe' label
        /// </summary>
        public string UIVMAXeTextSendKeys = "{Down}";
        
        /// <summary>
        /// Type '{Enter}' in 'VNX' label
        /// </summary>
        public string UIVNXTextSendKeys = "{Enter}";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIEMCStorageIntegratorWindow : WinWindow
    {
        
        public UIEMCStorageIntegratorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "EMC Storage Integrator (x64)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MMCMainFrame";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public UIEMCStorageIntegratorWindow1 UIEMCStorageIntegratorWindow1
        {
            get
            {
                if ((this.mUIEMCStorageIntegratorWindow1 == null))
                {
                    this.mUIEMCStorageIntegratorWindow1 = new UIEMCStorageIntegratorWindow1(this);
                }
                return this.mUIEMCStorageIntegratorWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UIEMCStorageIntegratorWindow1 mUIEMCStorageIntegratorWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIEMCStorageIntegratorWindow1 : WinWindow
    {
        
        public UIEMCStorageIntegratorWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65280";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public UIActionsPane UIActionsPane
        {
            get
            {
                if ((this.mUIActionsPane == null))
                {
                    this.mUIActionsPane = new UIActionsPane(this);
                }
                return this.mUIActionsPane;
            }
        }
        #endregion
        
        #region Fields
        private UIActionsPane mUIActionsPane;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIActionsPane : WinPane
    {
        
        public UIActionsPane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Actions";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddStorageSystemButton
        {
            get
            {
                if ((this.mUIAddStorageSystemButton == null))
                {
                    this.mUIAddStorageSystemButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddStorageSystemButton.SearchProperties[WinButton.PropertyNames.Name] = "Add Storage System";
                    this.mUIAddStorageSystemButton.WindowTitles.Add("EMC Storage Integrator (x64)");
                    #endregion
                }
                return this.mUIAddStorageSystemButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddStorageSystemButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddStorageSystemWindow : WinWindow
    {
        
        public UIAddStorageSystemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Add Storage System:";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public UICLARiiONCX4Client UICLARiiONCX4Client
        {
            get
            {
                if ((this.mUICLARiiONCX4Client == null))
                {
                    this.mUICLARiiONCX4Client = new UICLARiiONCX4Client(this);
                }
                return this.mUICLARiiONCX4Client;
            }
        }
        
        public UIAddStorageSystemClient UIAddStorageSystemClient
        {
            get
            {
                if ((this.mUIAddStorageSystemClient == null))
                {
                    this.mUIAddStorageSystemClient = new UIAddStorageSystemClient(this);
                }
                return this.mUIAddStorageSystemClient;
            }
        }
        
        public UIVNXBlockClient UIVNXBlockClient
        {
            get
            {
                if ((this.mUIVNXBlockClient == null))
                {
                    this.mUIVNXBlockClient = new UIVNXBlockClient(this);
                }
                return this.mUIVNXBlockClient;
            }
        }
        
        public UIVMAXClient UIVMAXClient
        {
            get
            {
                if ((this.mUIVMAXClient == null))
                {
                    this.mUIVMAXClient = new UIVMAXClient(this);
                }
                return this.mUIVMAXClient;
            }
        }
        
        public UIPanelControl1Pane UIPanelControl1Pane
        {
            get
            {
                if ((this.mUIPanelControl1Pane == null))
                {
                    this.mUIPanelControl1Pane = new UIPanelControl1Pane(this);
                }
                return this.mUIPanelControl1Pane;
            }
        }
        
        public UICreationParametersVGTable UICreationParametersVGTable
        {
            get
            {
                if ((this.mUICreationParametersVGTable == null))
                {
                    this.mUICreationParametersVGTable = new UICreationParametersVGTable(this);
                }
                return this.mUICreationParametersVGTable;
            }
        }
        
        public UIVMAXeClient UIVMAXeClient
        {
            get
            {
                if ((this.mUIVMAXeClient == null))
                {
                    this.mUIVMAXeClient = new UIVMAXeClient(this);
                }
                return this.mUIVMAXeClient;
            }
        }
        
        public UIVNXClient UIVNXClient
        {
            get
            {
                if ((this.mUIVNXClient == null))
                {
                    this.mUIVNXClient = new UIVNXClient(this);
                }
                return this.mUIVNXClient;
            }
        }
        #endregion
        
        #region Fields
        private UICLARiiONCX4Client mUICLARiiONCX4Client;
        
        private UIAddStorageSystemClient mUIAddStorageSystemClient;
        
        private UIVNXBlockClient mUIVNXBlockClient;
        
        private UIVMAXClient mUIVMAXClient;
        
        private UIPanelControl1Pane mUIPanelControl1Pane;
        
        private UICreationParametersVGTable mUICreationParametersVGTable;
        
        private UIVMAXeClient mUIVMAXeClient;
        
        private UIVNXClient mUIVNXClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICLARiiONCX4Client : WinClient
    {
        
        public UICLARiiONCX4Client(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "CLARiiON-CX4";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinButton UIOpenButton
        {
            get
            {
                if ((this.mUIOpenButton == null))
                {
                    this.mUIOpenButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOpenButton.SearchProperties[WinButton.PropertyNames.Name] = "Open";
                    this.mUIOpenButton.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIOpenButton;
            }
        }
        
        public WinText UICLARiiONCX4Text
        {
            get
            {
                if ((this.mUICLARiiONCX4Text == null))
                {
                    this.mUICLARiiONCX4Text = new WinText(this);
                    #region Search Criteria
                    this.mUICLARiiONCX4Text.SearchProperties[WinText.PropertyNames.Name] = "CLARiiON-CX4";
                    this.mUICLARiiONCX4Text.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUICLARiiONCX4Text;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOpenButton;
        
        private WinText mUICLARiiONCX4Text;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddStorageSystemClient : WinClient
    {
        
        public UIAddStorageSystemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Add Storage System:";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinButton UIAddButton
        {
            get
            {
                if ((this.mUIAddButton == null))
                {
                    this.mUIAddButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIAddButton.SearchProperties[WinButton.PropertyNames.Name] = "Add";
                    this.mUIAddButton.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIAddButton;
            }
        }
        
        public WinClient UICLARiiONCX4Client
        {
            get
            {
                if ((this.mUICLARiiONCX4Client == null))
                {
                    this.mUICLARiiONCX4Client = new WinClient(this);
                    #region Search Criteria
                    this.mUICLARiiONCX4Client.SearchProperties[WinControl.PropertyNames.Name] = "CLARiiON-CX4";
                    this.mUICLARiiONCX4Client.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUICLARiiONCX4Client;
            }
        }
        
        public WinClient UIVMAXClient
        {
            get
            {
                if ((this.mUIVMAXClient == null))
                {
                    this.mUIVMAXClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIVMAXClient.SearchProperties[WinControl.PropertyNames.Name] = "VMAX";
                    this.mUIVMAXClient.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIVMAXClient;
            }
        }
        
        public WinPane UIPanelControl1Pane
        {
            get
            {
                if ((this.mUIPanelControl1Pane == null))
                {
                    this.mUIPanelControl1Pane = new WinPane(this);
                    #region Search Criteria
                    this.mUIPanelControl1Pane.SearchProperties[WinControl.PropertyNames.Name] = "panelControl1";
                    this.mUIPanelControl1Pane.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIPanelControl1Pane;
            }
        }
        
        public WinTable UICreationParametersVGTable
        {
            get
            {
                if ((this.mUICreationParametersVGTable == null))
                {
                    this.mUICreationParametersVGTable = new WinTable(this);
                    #region Search Criteria
                    this.mUICreationParametersVGTable.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUICreationParametersVGTable;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIAddButton;
        
        private WinClient mUICLARiiONCX4Client;
        
        private WinClient mUIVMAXClient;
        
        private WinPane mUIPanelControl1Pane;
        
        private WinTable mUICreationParametersVGTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXBlockClient : WinClient
    {
        
        public UIVNXBlockClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "VNX-Block";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinText UIVNXBlockText
        {
            get
            {
                if ((this.mUIVNXBlockText == null))
                {
                    this.mUIVNXBlockText = new WinText(this);
                    #region Search Criteria
                    this.mUIVNXBlockText.SearchProperties[WinText.PropertyNames.Name] = "VNX-Block";
                    this.mUIVNXBlockText.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIVNXBlockText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVNXBlockText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVMAXClient : WinClient
    {
        
        public UIVMAXClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "VMAX";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinText UIVMAXText
        {
            get
            {
                if ((this.mUIVMAXText == null))
                {
                    this.mUIVMAXText = new WinText(this);
                    #region Search Criteria
                    this.mUIVMAXText.SearchProperties[WinText.PropertyNames.Name] = "VMAX";
                    this.mUIVMAXText.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIVMAXText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVMAXText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIPanelControl1Pane : WinPane
    {
        
        public UIPanelControl1Pane(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "panelControl1";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinEdit UISystemNameTextEditEdit
        {
            get
            {
                if ((this.mUISystemNameTextEditEdit == null))
                {
                    this.mUISystemNameTextEditEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUISystemNameTextEditEdit.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUISystemNameTextEditEdit;
            }
        }
        
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUISystemNameTextEditEdit;
        
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICreationParametersVGTable : WinTable
    {
        
        public UICreationParametersVGTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinClient UIHeaderPanelClient
        {
            get
            {
                if ((this.mUIHeaderPanelClient == null))
                {
                    this.mUIHeaderPanelClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIHeaderPanelClient.SearchProperties[WinControl.PropertyNames.Name] = "Header Panel";
                    this.mUIHeaderPanelClient.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIHeaderPanelClient;
            }
        }
        
        public WinEdit UIEditingcontrolEdit
        {
            get
            {
                if ((this.mUIEditingcontrolEdit == null))
                {
                    this.mUIEditingcontrolEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEditingcontrolEdit.SearchProperties[WinEdit.PropertyNames.Name] = "Editing control";
                    this.mUIEditingcontrolEdit.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIEditingcontrolEdit;
            }
        }
        
        public WinEdit UICreationParametersVGEdit
        {
            get
            {
                if ((this.mUICreationParametersVGEdit == null))
                {
                    this.mUICreationParametersVGEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUICreationParametersVGEdit.SearchProperties[WinEdit.PropertyNames.Name] = "PasswordTextEdit";
                    this.mUICreationParametersVGEdit.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUICreationParametersVGEdit;
            }
        }
        
        public WinEdit UIEditingcontrolEdit1
        {
            get
            {
                if ((this.mUIEditingcontrolEdit1 == null))
                {
                    this.mUIEditingcontrolEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEditingcontrolEdit1.SearchProperties[WinEdit.PropertyNames.Name] = "Editing control";
                    this.mUIEditingcontrolEdit1.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIEditingcontrolEdit1;
            }
        }
        
        public WinEdit UIEditingcontrolEdit2
        {
            get
            {
                if ((this.mUIEditingcontrolEdit2 == null))
                {
                    this.mUIEditingcontrolEdit2 = new WinEdit(this);
                    #region Search Criteria
                    this.mUIEditingcontrolEdit2.SearchProperties[WinEdit.PropertyNames.Name] = "Editing control";
                    this.mUIEditingcontrolEdit2.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIEditingcontrolEdit2;
            }
        }
        
        public WinEdit UIPasswordTextEditEdit
        {
            get
            {
                if ((this.mUIPasswordTextEditEdit == null))
                {
                    this.mUIPasswordTextEditEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIPasswordTextEditEdit.SearchProperties[WinEdit.PropertyNames.Name] = "PasswordTextEdit";
                    this.mUIPasswordTextEditEdit.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIPasswordTextEditEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIHeaderPanelClient;
        
        private WinEdit mUIEditingcontrolEdit;
        
        private WinEdit mUICreationParametersVGEdit;
        
        private WinEdit mUIEditingcontrolEdit1;
        
        private WinEdit mUIEditingcontrolEdit2;
        
        private WinEdit mUIPasswordTextEditEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVMAXeClient : WinClient
    {
        
        public UIVMAXeClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "VMAXe";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinText UIVMAXeText
        {
            get
            {
                if ((this.mUIVMAXeText == null))
                {
                    this.mUIVMAXeText = new WinText(this);
                    #region Search Criteria
                    this.mUIVMAXeText.SearchProperties[WinText.PropertyNames.Name] = "VMAXe";
                    this.mUIVMAXeText.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIVMAXeText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVMAXeText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXClient : WinClient
    {
        
        public UIVNXClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "VNX";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinText UIVNXText
        {
            get
            {
                if ((this.mUIVNXText == null))
                {
                    this.mUIVNXText = new WinText(this);
                    #region Search Criteria
                    this.mUIVNXText.SearchProperties[WinText.PropertyNames.Name] = "VNX";
                    this.mUIVNXText.WindowTitles.Add("Add Storage System:");
                    #endregion
                }
                return this.mUIVNXText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIVNXText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "VMAX";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIItemClient UIItemClient
        {
            get
            {
                if ((this.mUIItemClient == null))
                {
                    this.mUIItemClient = new UIItemClient(this);
                }
                return this.mUIItemClient;
            }
        }
        
        public UIVMAXList UIVMAXList
        {
            get
            {
                if ((this.mUIVMAXList == null))
                {
                    this.mUIVMAXList = new UIVMAXList(this);
                }
                return this.mUIVMAXList;
            }
        }
        
        public UIVMAXeList UIVMAXeList
        {
            get
            {
                if ((this.mUIVMAXeList == null))
                {
                    this.mUIVMAXeList = new UIVMAXeList(this);
                }
                return this.mUIVMAXeList;
            }
        }
        
        public UIVNXList UIVNXList
        {
            get
            {
                if ((this.mUIVNXList == null))
                {
                    this.mUIVNXList = new UIVNXList(this);
                }
                return this.mUIVNXList;
            }
        }
        
        public UIVNXBlockList UIVNXBlockList
        {
            get
            {
                if ((this.mUIVNXBlockList == null))
                {
                    this.mUIVNXBlockList = new UIVNXBlockList(this);
                }
                return this.mUIVNXBlockList;
            }
        }
        
        public UIVNXCIFSList UIVNXCIFSList
        {
            get
            {
                if ((this.mUIVNXCIFSList == null))
                {
                    this.mUIVNXCIFSList = new UIVNXCIFSList(this);
                }
                return this.mUIVNXCIFSList;
            }
        }
        
        public UICLARiiONCX4List UICLARiiONCX4List
        {
            get
            {
                if ((this.mUICLARiiONCX4List == null))
                {
                    this.mUICLARiiONCX4List = new UICLARiiONCX4List(this);
                }
                return this.mUICLARiiONCX4List;
            }
        }
        #endregion
        
        #region Fields
        private UIItemClient mUIItemClient;
        
        private UIVMAXList mUIVMAXList;
        
        private UIVMAXeList mUIVMAXeList;
        
        private UIVNXList mUIVNXList;
        
        private UIVNXBlockList mUIVNXBlockList;
        
        private UIVNXCIFSList mUIVNXCIFSList;
        
        private UICLARiiONCX4List mUICLARiiONCX4List;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemClient : WinClient
    {
        
        public UIItemClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinList UIVMAXList
        {
            get
            {
                if ((this.mUIVMAXList == null))
                {
                    this.mUIVMAXList = new WinList(this);
                    #region Search Criteria
                    this.mUIVMAXList.SearchProperties[WinList.PropertyNames.Name] = "VMAX";
                    #endregion
                }
                return this.mUIVMAXList;
            }
        }
        
        public WinList UIVMAXeList
        {
            get
            {
                if ((this.mUIVMAXeList == null))
                {
                    this.mUIVMAXeList = new WinList(this);
                    #region Search Criteria
                    this.mUIVMAXeList.SearchProperties[WinList.PropertyNames.Name] = "VMAXe";
                    #endregion
                }
                return this.mUIVMAXeList;
            }
        }
        
        public WinList UIVNXList
        {
            get
            {
                if ((this.mUIVNXList == null))
                {
                    this.mUIVNXList = new WinList(this);
                    #region Search Criteria
                    this.mUIVNXList.SearchProperties[WinList.PropertyNames.Name] = "VNX";
                    #endregion
                }
                return this.mUIVNXList;
            }
        }
        
        public WinList UIVNXBlockList
        {
            get
            {
                if ((this.mUIVNXBlockList == null))
                {
                    this.mUIVNXBlockList = new WinList(this);
                    #region Search Criteria
                    this.mUIVNXBlockList.SearchProperties[WinList.PropertyNames.Name] = "VNX-Block";
                    #endregion
                }
                return this.mUIVNXBlockList;
            }
        }
        
        public WinList UIVNXCIFSList
        {
            get
            {
                if ((this.mUIVNXCIFSList == null))
                {
                    this.mUIVNXCIFSList = new WinList(this);
                    #region Search Criteria
                    this.mUIVNXCIFSList.SearchProperties[WinList.PropertyNames.Name] = "VNX-CIFS";
                    #endregion
                }
                return this.mUIVNXCIFSList;
            }
        }
        
        public WinList UICLARiiONCX4List
        {
            get
            {
                if ((this.mUICLARiiONCX4List == null))
                {
                    this.mUICLARiiONCX4List = new WinList(this);
                    #region Search Criteria
                    this.mUICLARiiONCX4List.SearchProperties[WinList.PropertyNames.Name] = "CLARiiON-CX4";
                    #endregion
                }
                return this.mUICLARiiONCX4List;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIVMAXList;
        
        private WinList mUIVMAXeList;
        
        private WinList mUIVNXList;
        
        private WinList mUIVNXBlockList;
        
        private WinList mUIVNXCIFSList;
        
        private WinList mUICLARiiONCX4List;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVMAXList : WinList
    {
        
        public UIVMAXList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VMAX";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVMAXListItem
        {
            get
            {
                if ((this.mUIVMAXListItem == null))
                {
                    this.mUIVMAXListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVMAXListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VMAX";
                    #endregion
                }
                return this.mUIVMAXListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVMAXListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVMAXeList : WinList
    {
        
        public UIVMAXeList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VMAXe";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVMAXeListItem
        {
            get
            {
                if ((this.mUIVMAXeListItem == null))
                {
                    this.mUIVMAXeListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVMAXeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VMAXe";
                    #endregion
                }
                return this.mUIVMAXeListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVMAXeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXList : WinList
    {
        
        public UIVNXList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VNX";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVNXListItem
        {
            get
            {
                if ((this.mUIVNXListItem == null))
                {
                    this.mUIVNXListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVNXListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VNX";
                    #endregion
                }
                return this.mUIVNXListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVNXListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXBlockList : WinList
    {
        
        public UIVNXBlockList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VNX-Block";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVNXBlockListItem
        {
            get
            {
                if ((this.mUIVNXBlockListItem == null))
                {
                    this.mUIVNXBlockListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVNXBlockListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VNX-Block";
                    #endregion
                }
                return this.mUIVNXBlockListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVNXBlockListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXCIFSList : WinList
    {
        
        public UIVNXCIFSList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VNX-CIFS";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVNXCIFSListItem
        {
            get
            {
                if ((this.mUIVNXCIFSListItem == null))
                {
                    this.mUIVNXCIFSListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVNXCIFSListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VNX-CIFS";
                    #endregion
                }
                return this.mUIVNXCIFSListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVNXCIFSListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICLARiiONCX4List : WinList
    {
        
        public UICLARiiONCX4List(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "CLARiiON-CX4";
            #endregion
        }
        
        #region Properties
        public WinListItem UICLARiiONCX4ListItem
        {
            get
            {
                if ((this.mUICLARiiONCX4ListItem == null))
                {
                    this.mUICLARiiONCX4ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUICLARiiONCX4ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "CLARiiON-CX4";
                    #endregion
                }
                return this.mUICLARiiONCX4ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUICLARiiONCX4ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "VMAXe";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            #endregion
        }
        
        #region Properties
        public UIAddStorageSystemClient1 UIAddStorageSystemClient
        {
            get
            {
                if ((this.mUIAddStorageSystemClient == null))
                {
                    this.mUIAddStorageSystemClient = new UIAddStorageSystemClient1(this);
                }
                return this.mUIAddStorageSystemClient;
            }
        }
        
        public UIVMAXeList1 UIVMAXeList
        {
            get
            {
                if ((this.mUIVMAXeList == null))
                {
                    this.mUIVMAXeList = new UIVMAXeList1(this);
                }
                return this.mUIVMAXeList;
            }
        }
        
        public UIVNXList1 UIVNXList
        {
            get
            {
                if ((this.mUIVNXList == null))
                {
                    this.mUIVNXList = new UIVNXList1(this);
                }
                return this.mUIVNXList;
            }
        }
        
        public UIVNXBlockList1 UIVNXBlockList
        {
            get
            {
                if ((this.mUIVNXBlockList == null))
                {
                    this.mUIVNXBlockList = new UIVNXBlockList1(this);
                }
                return this.mUIVNXBlockList;
            }
        }
        
        public UIVNXCIFSList1 UIVNXCIFSList
        {
            get
            {
                if ((this.mUIVNXCIFSList == null))
                {
                    this.mUIVNXCIFSList = new UIVNXCIFSList1(this);
                }
                return this.mUIVNXCIFSList;
            }
        }
        
        public UICLARiiONCX4List1 UICLARiiONCX4List
        {
            get
            {
                if ((this.mUICLARiiONCX4List == null))
                {
                    this.mUICLARiiONCX4List = new UICLARiiONCX4List1(this);
                }
                return this.mUICLARiiONCX4List;
            }
        }
        
        public UIVMAXList1 UIVMAXList
        {
            get
            {
                if ((this.mUIVMAXList == null))
                {
                    this.mUIVMAXList = new UIVMAXList1(this);
                }
                return this.mUIVMAXList;
            }
        }
        #endregion
        
        #region Fields
        private UIAddStorageSystemClient1 mUIAddStorageSystemClient;
        
        private UIVMAXeList1 mUIVMAXeList;
        
        private UIVNXList1 mUIVNXList;
        
        private UIVNXBlockList1 mUIVNXBlockList;
        
        private UIVNXCIFSList1 mUIVNXCIFSList;
        
        private UICLARiiONCX4List1 mUICLARiiONCX4List;
        
        private UIVMAXList1 mUIVMAXList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIAddStorageSystemClient1 : WinClient
    {
        
        public UIAddStorageSystemClient1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
        }
        
        #region Properties
        public WinList UIVMAXList
        {
            get
            {
                if ((this.mUIVMAXList == null))
                {
                    this.mUIVMAXList = new WinList(this);
                    #region Search Criteria
                    this.mUIVMAXList.SearchProperties[WinList.PropertyNames.Name] = "VMAX";
                    #endregion
                }
                return this.mUIVMAXList;
            }
        }
        
        public WinList UIVMAXeList
        {
            get
            {
                if ((this.mUIVMAXeList == null))
                {
                    this.mUIVMAXeList = new WinList(this);
                    #region Search Criteria
                    this.mUIVMAXeList.SearchProperties[WinList.PropertyNames.Name] = "VMAXe";
                    #endregion
                }
                return this.mUIVMAXeList;
            }
        }
        
        public WinList UIVNXList
        {
            get
            {
                if ((this.mUIVNXList == null))
                {
                    this.mUIVNXList = new WinList(this);
                    #region Search Criteria
                    this.mUIVNXList.SearchProperties[WinList.PropertyNames.Name] = "VNX";
                    #endregion
                }
                return this.mUIVNXList;
            }
        }
        
        public WinList UIVNXBlockList
        {
            get
            {
                if ((this.mUIVNXBlockList == null))
                {
                    this.mUIVNXBlockList = new WinList(this);
                    #region Search Criteria
                    this.mUIVNXBlockList.SearchProperties[WinList.PropertyNames.Name] = "VNX-Block";
                    #endregion
                }
                return this.mUIVNXBlockList;
            }
        }
        
        public WinList UIVNXCIFSList
        {
            get
            {
                if ((this.mUIVNXCIFSList == null))
                {
                    this.mUIVNXCIFSList = new WinList(this);
                    #region Search Criteria
                    this.mUIVNXCIFSList.SearchProperties[WinList.PropertyNames.Name] = "VNX-CIFS";
                    #endregion
                }
                return this.mUIVNXCIFSList;
            }
        }
        
        public WinList UICLARiiONCX4List
        {
            get
            {
                if ((this.mUICLARiiONCX4List == null))
                {
                    this.mUICLARiiONCX4List = new WinList(this);
                    #region Search Criteria
                    this.mUICLARiiONCX4List.SearchProperties[WinList.PropertyNames.Name] = "CLARiiON-CX4";
                    #endregion
                }
                return this.mUICLARiiONCX4List;
            }
        }
        #endregion
        
        #region Fields
        private WinList mUIVMAXList;
        
        private WinList mUIVMAXeList;
        
        private WinList mUIVNXList;
        
        private WinList mUIVNXBlockList;
        
        private WinList mUIVNXCIFSList;
        
        private WinList mUICLARiiONCX4List;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVMAXeList1 : WinList
    {
        
        public UIVMAXeList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VMAXe";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVMAXeListItem
        {
            get
            {
                if ((this.mUIVMAXeListItem == null))
                {
                    this.mUIVMAXeListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVMAXeListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VMAXe";
                    #endregion
                }
                return this.mUIVMAXeListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVMAXeListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXList1 : WinList
    {
        
        public UIVNXList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VNX";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVNXListItem
        {
            get
            {
                if ((this.mUIVNXListItem == null))
                {
                    this.mUIVNXListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVNXListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VNX";
                    #endregion
                }
                return this.mUIVNXListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVNXListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXBlockList1 : WinList
    {
        
        public UIVNXBlockList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VNX-Block";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVNXBlockListItem
        {
            get
            {
                if ((this.mUIVNXBlockListItem == null))
                {
                    this.mUIVNXBlockListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVNXBlockListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VNX-Block";
                    #endregion
                }
                return this.mUIVNXBlockListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVNXBlockListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVNXCIFSList1 : WinList
    {
        
        public UIVNXCIFSList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VNX-CIFS";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVNXCIFSListItem
        {
            get
            {
                if ((this.mUIVNXCIFSListItem == null))
                {
                    this.mUIVNXCIFSListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVNXCIFSListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VNX-CIFS";
                    #endregion
                }
                return this.mUIVNXCIFSListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVNXCIFSListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICLARiiONCX4List1 : WinList
    {
        
        public UICLARiiONCX4List1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "CLARiiON-CX4";
            #endregion
        }
        
        #region Properties
        public WinListItem UICLARiiONCX4ListItem
        {
            get
            {
                if ((this.mUICLARiiONCX4ListItem == null))
                {
                    this.mUICLARiiONCX4ListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUICLARiiONCX4ListItem.SearchProperties[WinListItem.PropertyNames.Name] = "CLARiiON-CX4";
                    #endregion
                }
                return this.mUICLARiiONCX4ListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUICLARiiONCX4ListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIVMAXList1 : WinList
    {
        
        public UIVMAXList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinList.PropertyNames.Name] = "VMAX";
            #endregion
        }
        
        #region Properties
        public WinListItem UIVMAXListItem
        {
            get
            {
                if ((this.mUIVMAXListItem == null))
                {
                    this.mUIVMAXListItem = new WinListItem(this);
                    #region Search Criteria
                    this.mUIVMAXListItem.SearchProperties[WinListItem.PropertyNames.Name] = "VMAX";
                    #endregion
                }
                return this.mUIVMAXListItem;
            }
        }
        #endregion
        
        #region Fields
        private WinListItem mUIVMAXListItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.AccessibleName] = "Desktop";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "#32769";
            #endregion
        }
        
        #region Properties
        public UICLARiiONCX4Client1 UICLARiiONCX4Client
        {
            get
            {
                if ((this.mUICLARiiONCX4Client == null))
                {
                    this.mUICLARiiONCX4Client = new UICLARiiONCX4Client1(this);
                }
                return this.mUICLARiiONCX4Client;
            }
        }
        
        public WinWindow UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new WinWindow(this);
                }
                return this.mUIItemWindow1;
            }
        }
        #endregion
        
        #region Fields
        private UICLARiiONCX4Client1 mUICLARiiONCX4Client;
        
        private WinWindow mUIItemWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.40219.1")]
    public class UICLARiiONCX4Client1 : WinClient
    {
        
        public UICLARiiONCX4Client1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "CLARiiON-CX4";
            this.WindowTitles.Add("Add Storage System:");
            #endregion
        }
        
        #region Properties
        public WinClient UIAddStorageSystemClient
        {
            get
            {
                if ((this.mUIAddStorageSystemClient == null))
                {
                    this.mUIAddStorageSystemClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIAddStorageSystemClient.SearchConfigurations.Add(SearchConfiguration.DisambiguateChild);
                    this.mUIAddStorageSystemClient.SearchConfigurations.Remove(SearchConfiguration.VisibleOnly);
                    #endregion
                }
                return this.mUIAddStorageSystemClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIAddStorageSystemClient;
        #endregion
    }
}
