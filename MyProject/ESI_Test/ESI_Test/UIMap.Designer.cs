// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 10.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace ESI_Test
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public partial class UIMap
    {
        
        /// <summary>
        /// StartESI - Use 'StartESIParams' to pass parameters into this method.
        /// </summary>
        public void StartESI()
        {

            // Launch '%SystemRoot%\System32\mmc.exe' with arguments '"C:\Program Files\EMC\EMC Storage Integrator\ESIx64.msc"'
            ApplicationUnderTest mmcApplication = ApplicationUnderTest.Launch(this.StartESIParams.ExePath, this.StartESIParams.AlternateExePath, "\"C:\\Program Files\\EMC\\EMC Storage Integrator\\ESIx64.msc\"");
        }
        
        /// <summary>
        /// AssertESIShowUp - Use 'AssertESIShowUpExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertESIShowUp()
        {
            #region Variable Declarations
            WinRowHeader uIItemRowHeader = this.UIEMCStorageIntegratorWindow.UIEMCStorageIntegratorWindow1.UIStorageSystemNodeGriWindow.UIStorageSystemNodeGriTable.UIHeaderPanelClient.UIItemRowHeader;
            #endregion

            // Verify that 'Unknown Name' row header's property 'Exists' equals 'True'
            Assert.AreEqual(this.AssertESIShowUpExpectedValues.UIItemRowHeaderExists, uIItemRowHeader.Exists);
        }
        
        #region Properties
        public virtual StartESIParams StartESIParams
        {
            get
            {
                if ((this.mStartESIParams == null))
                {
                    this.mStartESIParams = new StartESIParams();
                }
                return this.mStartESIParams;
            }
        }
        
        public virtual AssertESIShowUpExpectedValues AssertESIShowUpExpectedValues
        {
            get
            {
                if ((this.mAssertESIShowUpExpectedValues == null))
                {
                    this.mAssertESIShowUpExpectedValues = new AssertESIShowUpExpectedValues();
                }
                return this.mAssertESIShowUpExpectedValues;
            }
        }
        
        public UIEMCStorageIntegratorWindow UIEMCStorageIntegratorWindow
        {
            get
            {
                if ((this.mUIEMCStorageIntegratorWindow == null))
                {
                    this.mUIEMCStorageIntegratorWindow = new UIEMCStorageIntegratorWindow();
                }
                return this.mUIEMCStorageIntegratorWindow;
            }
        }
        #endregion
        
        #region Fields
        private StartESIParams mStartESIParams;
        
        private AssertESIShowUpExpectedValues mAssertESIShowUpExpectedValues;
        
        private UIEMCStorageIntegratorWindow mUIEMCStorageIntegratorWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'StartESI'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class StartESIParams
    {
        
        #region Fields
        /// <summary>
        /// Launch '%SystemRoot%\System32\mmc.exe' with arguments '"C:\Program Files\EMC\EMC Storage Integrator\ESIx64.msc"'
        /// </summary>
        public string ExePath = "C:\\Windows\\System32\\mmc.exe";
        
        /// <summary>
        /// Launch '%SystemRoot%\System32\mmc.exe' with arguments '"C:\Program Files\EMC\EMC Storage Integrator\ESIx64.msc"'
        /// </summary>
        public string AlternateExePath = "%SystemRoot%\\System32\\mmc.exe";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertESIShowUp'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class AssertESIShowUpExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that 'Unknown Name' row header's property 'Exists' equals 'True'
        /// </summary>
        public bool UIItemRowHeaderExists = true;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEMCStorageIntegratorWindow : WinWindow
    {
        
        public UIEMCStorageIntegratorWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "EMC Storage Integrator (x64)";
            this.SearchProperties[WinWindow.PropertyNames.ClassName] = "MMCMainFrame";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public WinTitleBar UIEMCStorageIntegratorTitleBar
        {
            get
            {
                if ((this.mUIEMCStorageIntegratorTitleBar == null))
                {
                    this.mUIEMCStorageIntegratorTitleBar = new WinTitleBar(this);
                    #region Search Criteria
                    this.mUIEMCStorageIntegratorTitleBar.WindowTitles.Add("EMC Storage Integrator (x64)");
                    #endregion
                }
                return this.mUIEMCStorageIntegratorTitleBar;
            }
        }
        
        public UIEMCStorageIntegratorWindow1 UIEMCStorageIntegratorWindow1
        {
            get
            {
                if ((this.mUIEMCStorageIntegratorWindow1 == null))
                {
                    this.mUIEMCStorageIntegratorWindow1 = new UIEMCStorageIntegratorWindow1(this);
                }
                return this.mUIEMCStorageIntegratorWindow1;
            }
        }
        #endregion
        
        #region Fields
        private WinTitleBar mUIEMCStorageIntegratorTitleBar;
        
        private UIEMCStorageIntegratorWindow1 mUIEMCStorageIntegratorWindow1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIEMCStorageIntegratorWindow1 : WinWindow
    {
        
        public UIEMCStorageIntegratorWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlId] = "65280";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public UIMainViewControlWindow UIMainViewControlWindow
        {
            get
            {
                if ((this.mUIMainViewControlWindow == null))
                {
                    this.mUIMainViewControlWindow = new UIMainViewControlWindow(this);
                }
                return this.mUIMainViewControlWindow;
            }
        }
        
        public UIStorageSystemNodeGriWindow UIStorageSystemNodeGriWindow
        {
            get
            {
                if ((this.mUIStorageSystemNodeGriWindow == null))
                {
                    this.mUIStorageSystemNodeGriWindow = new UIStorageSystemNodeGriWindow(this);
                }
                return this.mUIStorageSystemNodeGriWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIMainViewControlWindow mUIMainViewControlWindow;
        
        private UIStorageSystemNodeGriWindow mUIStorageSystemNodeGriWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIMainViewControlWindow : WinWindow
    {
        
        public UIMainViewControlWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "MainViewControl";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public WinClient UIMainViewControlClient
        {
            get
            {
                if ((this.mUIMainViewControlClient == null))
                {
                    this.mUIMainViewControlClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIMainViewControlClient.WindowTitles.Add("EMC Storage Integrator (x64)");
                    #endregion
                }
                return this.mUIMainViewControlClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIMainViewControlClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStorageSystemNodeGriWindow : WinWindow
    {
        
        public UIStorageSystemNodeGriWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "storageSystemNodeGridControl";
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public UIStorageSystemNodeGriTable UIStorageSystemNodeGriTable
        {
            get
            {
                if ((this.mUIStorageSystemNodeGriTable == null))
                {
                    this.mUIStorageSystemNodeGriTable = new UIStorageSystemNodeGriTable(this);
                }
                return this.mUIStorageSystemNodeGriTable;
            }
        }
        #endregion
        
        #region Fields
        private UIStorageSystemNodeGriTable mUIStorageSystemNodeGriTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIStorageSystemNodeGriTable : WinTable
    {
        
        public UIStorageSystemNodeGriTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public UIHeaderPanelClient UIHeaderPanelClient
        {
            get
            {
                if ((this.mUIHeaderPanelClient == null))
                {
                    this.mUIHeaderPanelClient = new UIHeaderPanelClient(this);
                }
                return this.mUIHeaderPanelClient;
            }
        }
        #endregion
        
        #region Fields
        private UIHeaderPanelClient mUIHeaderPanelClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "10.0.30319.1")]
    public class UIHeaderPanelClient : WinClient
    {
        
        public UIHeaderPanelClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.WindowTitles.Add("EMC Storage Integrator (x64)");
            #endregion
        }
        
        #region Properties
        public WinRowHeader UIItemRowHeader
        {
            get
            {
                if ((this.mUIItemRowHeader == null))
                {
                    this.mUIItemRowHeader = new WinRowHeader(this);
                    #region Search Criteria
                    this.mUIItemRowHeader.WindowTitles.Add("EMC Storage Integrator (x64)");
                    #endregion
                }
                return this.mUIItemRowHeader;
            }
        }
        #endregion
        
        #region Fields
        private WinRowHeader mUIItemRowHeader;
        #endregion
    }
}
